{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death place of ($x | Politician_NP)?", "What was the death place of ($x | Politician_NP)?", "which place is the death place of ($x | Politician_NP)?", "which place was the death place of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the death place of which politician?", "($x | Place_NP) was the death place of which politician?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many death place does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all delivery Dates of ($x | MeanOfTransportation_NP).", "List all the delivery Dates of ($x | MeanOfTransportation_NP).", "show me all delivery Dates of ($x | MeanOfTransportation_NP).", "What are the delivery Dates of ($x | MeanOfTransportation_NP)?", "What is the delivery Date of ($x | MeanOfTransportation_NP)?", "What was the delivery Date of ($x | MeanOfTransportation_NP)?", "What were the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many delivery Date does ($x | MeanOfTransportation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "MeanOfTransportation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of ($x | MeanOfTransportation_NP)?", "the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Seasons of ($x | TelevisionShow_NP).", "List all the number Of Seasons of ($x | TelevisionShow_NP).", "show me all number Of Seasons of ($x | TelevisionShow_NP).", "What are the number Of Seasons of ($x | TelevisionShow_NP)?", "What is the number Of Season of ($x | TelevisionShow_NP)?", "What was the number Of Season of ($x | TelevisionShow_NP)?", "What were the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the number Of Season of which television show?", "($x | Number_NP) was the number Of Season of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number Of Season does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of ($x | TelevisionShow_NP)?", "the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of ($x | Place_NP)?", "What was the location of ($x | Place_NP)?", "which place is the location of ($x | Place_NP)?", "which place was the location of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the location of which place?", "($x | Place_NP) was the location of which place?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many location does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all editors of ($x | Work_NP).", "List all the editors of ($x | Work_NP).", "show me all editors of ($x | Work_NP).", "which person is the editor of ($x | Work_NP)?", "which person was the editor of ($x | Work_NP)?", "which persons are the editors of ($x | Work_NP)?", "which persons were the editors of ($x | Work_NP)?", "Who are the editors of ($x | Work_NP)?", "Who is the editor of ($x | Work_NP)?", "Who was the editor of ($x | Work_NP)?", "Who were the editors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the editor of which work?", "($x | Person_NP) was the editor of which work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many editor does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ($x | Work_NP)?", "the editors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all loyalties  ($x | Loyalty_NP).", "List all the loyalties  ($x | Loyalty_NP).", "show me all loyalties  ($x | Loyalty_NP).", "What are the loyalties  ($x | Loyalty_NP)?", "What is the loyalty  ($x | Loyalty_NP)?", "What was the loyalty  ($x | Loyalty_NP)?", "What were the loyalties  ($x | Loyalty_NP)?", "which color is the loyalty  ($x | Loyalty_NP)?", "which color was the loyalty  ($x | Loyalty_NP)?", "which colors are the loyalties  ($x | Loyalty_NP)?", "which colors were the loyalties  ($x | Loyalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Color",
    "returnType" : "Loyalty",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Color_NP) is the loyalty  which loyality?", "($x | Color_NP) was the loyalty  which loyality?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many loyalty does ($x | Loyalty_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Loyalty",
    "returnType" : "Color",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  ($x | Loyalty_NP)?", "the loyalty  ($x | Loyalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "which person is the alter ego of ($x | ComicsCharacter_NP)?", "which person was the alter ego of ($x | ComicsCharacter_NP)?", "Who is the alter ego of ($x | ComicsCharacter_NP)?", "Who was the alter ego of ($x | ComicsCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "ComicsCharacter",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the alter ego of which comic character?", "($x | Person_NP) was the alter ego of which comic character?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many alter ego does ($x | ComicsCharacter_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ComicsCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of ($x | ComicsCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Ascent Persons of ($x | Mountain_NP).", "List all the first Ascent Persons of ($x | Mountain_NP).", "show me all first Ascent Persons of ($x | Mountain_NP).", "What are the first Ascent Persons of ($x | Mountain_NP)?", "What is the first Ascent Person of ($x | Mountain_NP)?", "What was the first Ascent Person of ($x | Mountain_NP)?", "What were the first Ascent Persons of ($x | Mountain_NP)?", "which place is the first Ascent Person of ($x | Mountain_NP)?", "which place was the first Ascent Person of ($x | Mountain_NP)?", "which places are the first Ascent Persons of ($x | Mountain_NP)?", "which places were the first Ascent Persons of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Mountain",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the first Ascent Person of which mountain?", "($x | Place_NP) was the first Ascent Person of which mountain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first Ascent Person does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of ($x | Mountain_NP)?", "the first Ascent Persons of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all isbns of ($x | Book_NP).", "List all the isbns of ($x | Book_NP).", "show me all isbns of ($x | Book_NP).", "What are the isbns of ($x | Book_NP)?", "What is the isbn of ($x | Book_NP)?", "What was the isbn of ($x | Book_NP)?", "What were the isbns of ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the isbn of which book?", "($x | Thing_NP) was the isbn of which book?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many isbn does ($x | Book_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Book",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of ($x | Book_NP)?", "the isbns of ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isbn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | Settlement_NP).", "List all the mayors of ($x | Settlement_NP).", "show me all mayors of ($x | Settlement_NP).", "which person is the mayor of ($x | Settlement_NP)?", "which person was the mayor of ($x | Settlement_NP)?", "which persons are the mayors of ($x | Settlement_NP)?", "which persons were the mayors of ($x | Settlement_NP)?", "Who are the mayors of ($x | Settlement_NP)?", "Who is the mayor of ($x | Settlement_NP)?", "Who was the mayor of ($x | Settlement_NP)?", "Who were the mayors of ($x | Settlement_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Settlement",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the mayor of which settlement?", "($x | Person_NP) was the mayor of which settlement?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many mayor does ($x | Settlement_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Settlement",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | Settlement_NP)?", "the mayors of ($x | Settlement_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What are the official languages of ($x | Country_NP)?", "What is the official language of ($x | Country_NP)?", "What was the official language of ($x | Country_NP)?", "What were the official languages of ($x | Country_NP)?", "which language is the official language of ($x | Country_NP)?", "which language was the official language of ($x | Country_NP)?", "which languages are the official languages of ($x | Country_NP)?", "which languages were the official languages of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Language_NP) is the official language of which country?", "($x | Language_NP) was the official language of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many official language does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all leaders of ($x | Legislature_NP).", "List all the leaders of ($x | Legislature_NP).", "show me all leaders of ($x | Legislature_NP).", "which organisation is the leader of ($x | Legislature_NP)?", "which organisation was the leader of ($x | Legislature_NP)?", "which organisations are the leaders of ($x | Legislature_NP)?", "which organisations were the leaders of ($x | Legislature_NP)?", "Who are the leaders of ($x | Legislature_NP)?", "Who is the leader of ($x | Legislature_NP)?", "Who was the leader of ($x | Legislature_NP)?", "Who were the leaders of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Legislature",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Organisation_NP) is the leader of which legislature?", "($x | Organisation_NP) was the leader of which legislature?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many leader does ($x | Legislature_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Legislature",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of ($x | Legislature_NP)?", "the leaders of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all programming languages of ($x | Work_NP).", "List all the programming languages of ($x | Work_NP).", "show me all programming languages of ($x | Work_NP).", "What are the programming languages of ($x | Work_NP)?", "What is the programming language of ($x | Work_NP)?", "What was the programming language of ($x | Work_NP)?", "What were the programming languages of ($x | Work_NP)?", "which language is the programming language of ($x | Work_NP)?", "which language was the programming language of ($x | Work_NP)?", "which languages are the programming languages of ($x | Work_NP)?", "which languages were the programming languages of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Work",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Language_NP) is the programming language of which work?", "($x | Language_NP) was the programming language of which work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many programming language does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of ($x | Work_NP)?", "the programming languages of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the resting place of ($x | Person_NP)?", "What was the resting place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the resting place of which person?", "($x | Thing_NP) was the resting place of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many resting place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all employers of ($x | Person_NP).", "List all the employers of ($x | Person_NP).", "show me all employers of ($x | Person_NP).", "What are the employers of ($x | Person_NP)?", "What is the employer of ($x | Person_NP)?", "What was the employer of ($x | Person_NP)?", "What were the employers of ($x | Person_NP)?", "which place is the employer of ($x | Person_NP)?", "which place was the employer of ($x | Person_NP)?", "which places are the employers of ($x | Person_NP)?", "which places were the employers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the employer of which person?", "($x | Place_NP) was the employer of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many employer does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of ($x | Person_NP)?", "the employers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/employer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all doctoral supervisors of ($x | Scientist_NP).", "List all the doctoral supervisors of ($x | Scientist_NP).", "show me all doctoral supervisors of ($x | Scientist_NP).", "which person is the doctoral supervisor of ($x | Scientist_NP)?", "which person was the doctoral supervisor of ($x | Scientist_NP)?", "which persons are the doctoral supervisors of ($x | Scientist_NP)?", "which persons were the doctoral supervisors of ($x | Scientist_NP)?", "Who are the doctoral supervisors of ($x | Scientist_NP)?", "Who is the doctoral supervisor of ($x | Scientist_NP)?", "Who was the doctoral supervisor of ($x | Scientist_NP)?", "Who were the doctoral supervisors of ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Scientist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the doctoral supervisor of which scientist?", "($x | Person_NP) was the doctoral supervisor of which scientist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many doctoral supervisor does ($x | Scientist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Scientist",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ($x | Scientist_NP)?", "the doctoral supervisors of ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all producers of ($x | Film_NP).", "List all the producers of ($x | Film_NP).", "show me all producers of ($x | Film_NP).", "which company are the producers of ($x | Film_NP)?", "which company is the producer of ($x | Film_NP)?", "which company was the producer of ($x | Film_NP)?", "which company were the producers of ($x | Film_NP)?", "Who are the producers of ($x | Film_NP)?", "Who is the producer of ($x | Film_NP)?", "Who was the producer of ($x | Film_NP)?", "Who were the producers of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Film",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Company_NP) is the producer of which film?", "($x | Company_NP) was the producer of which film?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many producer does ($x | Film_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Film",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of ($x | Film_NP)?", "the producers of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all hosts of the ($x | TelevisionShow_NP).", "List all the hosts of the ($x | TelevisionShow_NP).", "show me all hosts of the ($x | TelevisionShow_NP).", "which person is the host of the ($x | TelevisionShow_NP)?", "which person was the host of the ($x | TelevisionShow_NP)?", "which persons are the hosts of the ($x | TelevisionShow_NP)?", "which persons were the hosts of the ($x | TelevisionShow_NP)?", "Who are the hosts of the ($x | TelevisionShow_NP)?", "Who is the host of the ($x | TelevisionShow_NP)?", "Who was the host of the ($x | TelevisionShow_NP)?", "Who were the hosts of the ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the host of which television show?", "($x | Person_NP) was the host of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many host does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of the ($x | TelevisionShow_NP)?", "the hosts of the ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Place_NP).", "List all the residences of ($x | Place_NP).", "show me all residences of ($x | Place_NP).", "which person is the residence of ($x | Place_NP)?", "which person was the residence of ($x | Place_NP)?", "which persons are the residences of ($x | Place_NP)?", "which persons were the residences of ($x | Place_NP)?", "Who are the residences of ($x | Place_NP)?", "Who is the residence of ($x | Place_NP)?", "Who was the residence of ($x | Place_NP)?", "Who were the residences of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the residence of which place?", "($x | Person_NP) was the residence of which place?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many residence does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Place_NP)?", "the residences of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all closing Dates of ($x | Company_NP).", "List all the closing Dates of ($x | Company_NP).", "show me all closing Dates of ($x | Company_NP).", "What are the closing Dates of ($x | Company_NP)?", "What is the closing Date of ($x | Company_NP)?", "What was the closing Date of ($x | Company_NP)?", "What were the closing Dates of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the closing Date of which company?", "($x | date_NP) was the closing Date of which company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many closing Date does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of ($x | Company_NP)?", "the closing Dates of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all residences of ($x | Person_NP).", "List all the residences of ($x | Person_NP).", "show me all residences of ($x | Person_NP).", "What are the residences of ($x | Person_NP)?", "What is the residence of ($x | Person_NP)?", "What was the residence of ($x | Person_NP)?", "What were the residences of ($x | Person_NP)?", "which cities are the residences of ($x | Person_NP)?", "which cities were the residences of ($x | Person_NP)?", "which city is the residence of ($x | Person_NP)?", "which city was the residence of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the residence of which person?", "($x | City_NP) was the residence of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many residence does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Person_NP)?", "the residences of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the headquarter of ($x | Building_NP)?", "What was the headquarter of ($x | Building_NP)?", "which city is the headquarter of ($x | Building_NP)?", "which city was the headquarter of ($x | Building_NP)?","In which city are the headquarters of the ($x | Building_NP?)" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Building",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the headquarter of which Building?", "($x | City_NP) was the headquarter of which Building?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many headquarter does ($x | Building_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Building",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Building_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the headquarter of ($x | Organisation_NP)?", "What was the headquarter of ($x | Organisation_NP)?", "which populated place is the headquarter of ($x | Organisation_NP)?", "which populated place was the headquarter of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | PopulatedPlace_NP) is the headquarter of which organisation?", "($x | PopulatedPlace_NP) was the headquarter of which organisation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many headquarter does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the area code of ($x | City_NP)?", "What was the area code of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the area code of which city?", "($x | Thing_NP) was the area code of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many area code does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of locations of ($x | Company_NP)?", "What was the number of locations of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the number of locations of which company?", "($x | Number_NP) was the number of locations of which company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number of locations does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the music composer of which television show?", "($x | Person_NP) was the music composer of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music composer does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "which person is the first to climb  ($x | Mountain_NP)?", "which person was the first to climb  ($x | Mountain_NP)?", "Who is the first to climb  ($x | Mountain_NP)?", "Who was the first to climb  ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the first to climb  which mountain?", "($x | Person_NP) was the first to climb  which mountain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first to climb does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What is the ingredient of ($x | Food_NP)?", "What was the ingredient of ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Food",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the ingredient of which food?", "($x | Thing_NP) was the ingredient of which food?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many ingredient does ($x | Food_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP).", "What are the ingredients of ($x | Food_NP)?", "What is the ingredient of ($x | Food_NP)?", "What was the ingredient of ($x | Food_NP)?", "What were the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Food",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the ingredient of which food?", "($x | Thing_NP) was the ingredient of which food?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many ingredient does ($x | Food_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities of ($x | AdministrativeRegion_NP).", "List all the cities of ($x | AdministrativeRegion_NP).", "show me all cities of ($x | AdministrativeRegion_NP).", "What are the cities of ($x | AdministrativeRegion_NP)?", "What is the city of ($x | AdministrativeRegion_NP)?", "What was the city of ($x | AdministrativeRegion_NP)?", "What were the cities of ($x | AdministrativeRegion_NP)?", "which cities are the cities of ($x | AdministrativeRegion_NP)?", "which cities were the cities of ($x | AdministrativeRegion_NP)?", "which city is the city of ($x | AdministrativeRegion_NP)?", "which city was the city of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "AdministrativeRegion",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the city of which administrative region?", "($x | City_NP) was the city of which administrative region?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many city does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of ($x | AdministrativeRegion_NP)?", "the city of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all flags of ($x | Place_NP).", "List all the flags of ($x | Place_NP).", "show me all flags of ($x | Place_NP).", "What are the flags of ($x | Place_NP)?", "What is the flag of ($x | Place_NP)?", "What was the flag of ($x | Place_NP)?", "What were the flags of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the flag of which place?", "($x | Thing_NP) was the flag of which place?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many flag does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of ($x | Place_NP)?", "the flags of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/flag> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "Who are the sons of ($x | Person_NP)?", "Who is the son of ($x | Person_NP)?", "Who was the son of ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the son of which person?", "($x | Person_NP) was the son of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many son does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "Who are the sons of ($x | Person_NP)?", "Who is the son of ($x | Person_NP)?", "Who was the son of ($x | Person_NP)?", "Who were the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the son of which person?", "($x | Person_NP) was the son of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many son does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all kings of ($x | Legislature_NP).", "List all the kings of ($x | Legislature_NP).", "show me all kings of ($x | Legislature_NP).", "which person is the king of ($x | Legislature_NP)?", "which person was the king of ($x | Legislature_NP)?", "which persons are the kings of ($x | Legislature_NP)?", "which persons were the kings of ($x | Legislature_NP)?", "Who are the kings of ($x | Legislature_NP)?", "Who is the king of the ($x | Legislature_NP)?", "Who was the king of ($x | Legislature_NP)?", "Who were the kings of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Legislature",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the king of which legislature?", "($x | Person_NP) was the king of which legislature?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many king does ($x | Legislature_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ($x | Legislature_NP)?", "the kings of ($x | Legislature_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the location of ($x | Mountain_NP)?", "What was the location of ($x | Mountain_NP)?", "which country is the location of ($x | Mountain_NP)?", "which country was the location of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the location of which mountain?", "($x | Country_NP) was the location of which mountain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many location does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all games by ($x | Company_NP).", "List all games by ($x | Company_NP).", "show me all games by ($x | Company_NP).", "What are the games by ($x | Company_NP)?", "What is the game by ($x | Company_NP)?", "What was the game by ($x | Company_NP)?", "What were the games by ($x | Company_NP)?", "which company are the games by ($x | Company_NP)?", "which company is the game by ($x | Company_NP)?", "which company was the game by ($x | Company_NP)?", "which company were the games by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | VideoGame_NP) is the game by which video game?", "($x | VideoGame_NP) was the game by which video game?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many game does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ($x | Company_NP)?", "the games by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all borough of ($x | Thing_NP).", "List all the borough of ($x | Thing_NP).", "show me all borough of ($x | Thing_NP).", "What are the borough of ($x | Thing_NP)?", "What is the borough of ($x | Thing_NP)?", "What was the borough of ($x | Thing_NP)?", "What were the borough of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Town",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Town_NP) is the borough of which city?", "($x | Town_NP) was the borough of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many borough does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Town",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all musics by ($x | Musical_NP).", "List all the musics by ($x | Musical_NP).", "show me all musics by ($x | Musical_NP).", "which musical is the music by ($x | Musical_NP)?", "which musical was the music by ($x | Musical_NP)?", "which musicals are the musics by ($x | Musical_NP)?", "which musicals were the musics by ($x | Musical_NP)?", "Who are the musics by ($x | Musical_NP)?", "Who is the music by ($x | Musical_NP)?", "Who was the music by ($x | Musical_NP)?", "Who were the musics by ($x | Musical_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the music by which person?", "($x | Person_NP) was the music by which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music does ($x | Musical_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Musical",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ($x | Musical_NP)?", "the musics by ($x | Musical_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all foundation series of ($x | TelevisionShow_NP).", "List all the foundation series of ($x | TelevisionShow_NP).", "show me all foundation series of ($x | TelevisionShow_NP).", "which person is the foundation series of ($x | TelevisionShow_NP)?", "which person was the foundation series of ($x | TelevisionShow_NP)?", "which persons are the foundation series of ($x | TelevisionShow_NP)?", "which persons were the foundation series of ($x | TelevisionShow_NP)?", "Who are the foundation series of ($x | TelevisionShow_NP)?", "Who is the foundation series of ($x | TelevisionShow_NP)?", "Who was the foundation series of ($x | TelevisionShow_NP)?", "Who were the foundation series of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the foundation series of which television show?", "($x | Person_NP) was the foundation series of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many foundation series does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all presidents of ($x | Person_NP).", "List all the presidents of ($x | Person_NP).", "show me all presidents of ($x | Person_NP).", "What are the presidents of ($x | Person_NP)?", "What is the president of ($x | Person_NP)?", "What was the president of ($x | Person_NP)?", "What were the presidents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the president of which person?", "($x | Thing_NP) was the president of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many president does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Person_NP)?", "the presidents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What is the party of ($x | Politician_NP)?", "What was the party of ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the party of which politician?", "($x | Thing_NP) was the party of which politician?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many party does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP).", "What are the parties of ($x | Politician_NP)?", "What is the party of ($x | Politician_NP)?", "What was the party of ($x | Politician_NP)?", "What were the parties of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the party of which politician?", "($x | Thing_NP) was the party of which politician?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many party does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the total population of ($x | PopulatedPlace_NP)?", "What was the total population of ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the total population of which populated place?", "($x | Number_NP) was the total population of which populated place?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many total population does ($x | PopulatedPlace_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the total population of ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the form of government of ($x | Country_NP)?", "What was the form of government of ($x | Country_NP)?", "which country is the form of government of ($x | Country_NP)?", "which country was the form of government of ($x | Country_NP)?","What form of government does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the form of government of which country?", "($x | Country_NP) was the form of government of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many form of government does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the dissolution date of ($x | AdministrativeRegion_NP)?", "What was the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "AdministrativeRegion",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the dissolution date of which administrative region?", "($x | date_NP) was the dissolution date of which administrative region?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many dissolution date does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What is the currency of ($x | Country_NP)?", "What is the currency of the ($x | Country_NP)?","What was the currency of ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Currency",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Currency_NP) is the currency of which country?", "($x | Currency_NP) was the currency of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many currency does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What are the currencies of ($x | Country_NP)?", "What is the currency of ($x | Country_NP)?", "What was the currency of ($x | Country_NP)?", "What were the currencies of ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Currency",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Currency_NP) is the currency of which country?", "($x | Currency_NP) was the currency of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many currency does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the religion of ($x | Person_NP)?", "What was the religion of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the religion of which person?", "($x | Thing_NP) was the religion of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many religion does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/religion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Thing_NP).", "List all the founders of ($x | Thing_NP).", "show me all founders of ($x | Thing_NP).", "which company are the founders of ($x | Thing_NP)?", "which company is the founder of ($x | Thing_NP)?", "which company was the founder of ($x | Thing_NP)?", "which company were the founders of ($x | Thing_NP)?", "Who are the founders of ($x | Thing_NP)?", "Who is the founder of ($x | Thing_NP)?", "Who was the founder of ($x | Thing_NP)?", "Who were the founders of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Company_NP) is the founder of which broadcast network?", "($x | Company_NP) was the founder of which broadcast network?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Thing_NP)?", "the founders of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all children of ($x | Person_NP).", "List all the children of ($x | Person_NP).", "show me all children of ($x | Person_NP).", "which person is the child of ($x | Person_NP)?", "which person was the child of ($x | Person_NP)?", "which persons are the children of ($x | Person_NP)?", "which persons were the children of ($x | Person_NP)?", "Who are the children of ($x | Person_NP)?", "Who is the child of ($x | Person_NP)?", "Who was the child of ($x | Person_NP)?", "Who were the children of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the child of which person?", "($x | Person_NP) was the child of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many children does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ($x | Person_NP)?", "the children of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Publisher_NP).", "List all the founders of ($x | Publisher_NP).", "show me all founders of ($x | Publisher_NP).", "which agent is the founder of ($x | Publisher_NP)?", "which agent was the founder of ($x | Publisher_NP)?", "which agents are the founders of ($x | Publisher_NP)?", "which agents were the founders of ($x | Publisher_NP)?", "Who are the founders of ($x | Publisher_NP)?", "Who is the founder of ($x | Publisher_NP)?", "Who was the founder of ($x | Publisher_NP)?", "Who were the founders of ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Agent_NP) is the founder of which publisher?", "($x | Agent_NP) was the founder of which publisher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Publisher_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Publisher_NP)?", "the founders of ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the foundation place of ($x | Company_NP)?", "What was the foundation place of ($x | Company_NP)?", "which city is the foundation place of ($x | Company_NP)?", "which city was the foundation place of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the foundation place of which company?", "($x | City_NP) was the foundation place of which company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many foundation place does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of ($x | Person_NP)?", "What was the nationality of ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the nationality of which person?", "($x | Country_NP) was the nationality of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nationality does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "which person is the father of ($x | Royalty_NP)?", "which person was the father of ($x | Royalty_NP)?", "Who is the father of ($x | Royalty_NP)?", "Who was the father of ($x | Royalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Royalty",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the father of which Royalty?", "($x | Person_NP) was the father of which Royalty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many father does ($x | Royalty_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Royalty",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ($x | Royalty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "Who are the music composers of ($x | TelevisionShow_NP)?", "Who is the music composer of ($x | TelevisionShow_NP)?", "Who was the music composer of ($x | TelevisionShow_NP)?", "Who were the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the music composer of which television show?", "($x | Person_NP) was the music composer of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many music composer does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest city in ($x | Country_NP)?", "What was the largest city in ($x | Country_NP)?", "which city is the largest city in ($x | Country_NP)?", "which city was the largest city in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the largest city in which country?", "($x | City_NP) was the largest city in which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many largest city does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth year of ($x | Person_NP)?", "What was the birth year of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the birth year of which person?", "($x | date_NP) was the birth year of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many birth year does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the first season of ($x | TelevisionShow_NP)?", "What was the first season of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the first season of which television show?", "($x | Number_NP) was the first season of which television show?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first season does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the founding year of ($x | Company_NP)?", "What was the founding year of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the founding year of which company?", "($x | date_NP) was the founding year of which company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founding year does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all parents of ($x | Person_NP).", "List all the parents of ($x | Person_NP).", "show me all parents of ($x | Person_NP).", "which person is the parent of ($x | Person_NP)?", "which person was the parent of ($x | Person_NP)?", "which persons are the parents of ($x | Person_NP)?", "which persons were the parents of ($x | Person_NP)?", "Who are the parents of ($x | Person_NP)?", "Who is the parent of ($x | Person_NP)?", "Who was the parent of ($x | Person_NP)?", "Who were the parents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the parent of which person?", "($x | Person_NP) was the parent of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many parent does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of ($x | Person_NP)?", "the parents of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books by ($x | Writer_NP).", "List all the books by ($x | Writer_NP).", "show me all books by ($x | Writer_NP).", "What are the books by ($x | Writer_NP)?", "What is the book by ($x | Writer_NP)?", "What was the book by ($x | Writer_NP)?", "What were the books by ($x | Writer_NP)?", "which writer is the book by ($x | Writer_NP)?", "which writer was the book by ($x | Writer_NP)?", "which writers are the books by ($x | Writer_NP)?", "which writers were the books by ($x | Writer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Writer",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Book_NP) is the book by which book?", "($x | Book_NP) was the book by which book?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many book does ($x | Writer_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Writer",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ($x | Writer_NP)?", "the books by ($x | Writer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | IceHockeyLeague_NP).", "List all the coaches of ($x | IceHockeyLeague_NP).", "show me all coaches of ($x | IceHockeyLeague_NP).", "which person is the coach of ($x | IceHockeyLeague_NP)?", "which person was the coach of ($x | IceHockeyLeague_NP)?", "which persons are the coaches of ($x | IceHockeyLeague_NP)?", "which persons were the coaches of ($x | IceHockeyLeague_NP)?", "Who are the coaches of ($x | IceHockeyLeague_NP)?", "Who is the coach of ($x | IceHockeyLeague_NP)?", "Who was the coach of ($x | IceHockeyLeague_NP)?", "Who were the coaches of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "IceHockeyLeague",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the coach of which Ice Hockey League?", "($x | Person_NP) was the coach of which Ice Hockey League?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many coach does ($x | IceHockeyLeague_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | IceHockeyLeague_NP)?", "the coaches of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all coaches of ($x | HockeyTeam_NP).", "List all the coaches of ($x | HockeyTeam_NP).", "show me all coaches of ($x | HockeyTeam_NP).", "which person is the coach of ($x | HockeyTeam_NP)?", "which person was the coach of ($x | HockeyTeam_NP)?", "which persons are the coaches of ($x | HockeyTeam_NP)?", "which persons were the coaches of ($x | HockeyTeam_NP)?", "Who are the coaches of ($x | HockeyTeam_NP)?", "Who is the coach of ($x | HockeyTeam_NP)?", "Who was the coach of ($x | HockeyTeam_NP)?", "Who were the coaches of ($x | HockeyTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the coach of which HockeyTeam?", "($x | Person_NP) was the coach of which HockeyTeam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many coach does ($x | HockeyTeam_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "HockeyTeam",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | HockeyTeam_NP)?", "the coaches of ($x | HockeyTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all albums of ($x | Song_NP).", "List all the albums of ($x | Song_NP).", "show me all albums of ($x | Song_NP).", "What are the albums of ($x | Song_NP)?", "What is the album of ($x | Song_NP)?", "What was the album of ($x | Song_NP)?", "What were the albums of ($x | Song_NP)?", "which album is the album of ($x | Song_NP)?", "which album was the album of ($x | Song_NP)?", "which albums are the albums of ($x | Song_NP)?", "which albums were the albums of ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Song",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Album_NP) is the album of which song?", "($x | Album_NP) was the album of which song?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many album does ($x | Song_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of ($x | Song_NP)?", "the albums of ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all members of ($x | Band_NP).", "List all the members of ($x | Band_NP).", "show me all members of ($x | Band_NP).", "which musical artist is the member of ($x | Band_NP)?", "which musical artist was the member of ($x | Band_NP)?", "which musical artists are the members of ($x | Band_NP)?", "which musical artists were the members of ($x | Band_NP)?", "Who are the members of ($x | Band_NP)?", "Who is the member of ($x | Band_NP)?", "Who was the member of ($x | Band_NP)?", "Who were the members of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalArtist",
    "returnType" : "Band",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | MusicalArtist_NP) is the member of which band?", "($x | MusicalArtist_NP) was the member of which band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many member does ($x | Band_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ($x | Band_NP)?", "the members of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all last Election Dates of ($x | Organisation_NP).", "List all the last Election Dates of ($x | Organisation_NP).", "show me all last Election Dates of ($x | Organisation_NP).", "What are the last Election Dates of ($x | Organisation_NP)?", "What is the last Election Date of ($x | Organisation_NP)?", "What was the last Election Date of ($x | Organisation_NP)?", "What were the last Election Dates of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the last Election Date of which organisation?", "($x | date_NP) was the last Election Date of which organisation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many last Election Date does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of ($x | Organisation_NP)?", "the last Election Dates of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all opening Dates of ($x | ArchitecturalStructure_NP).", "List all the opening Dates of ($x | ArchitecturalStructure_NP).", "show me all opening Dates of ($x | ArchitecturalStructure_NP).", "What are the opening Dates of ($x | ArchitecturalStructure_NP)?", "What is the opening Date of ($x | ArchitecturalStructure_NP)?", "What was the opening Date of ($x | ArchitecturalStructure_NP)?", "What were the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the opening Date of which ArchitecturalStructure?", "($x | date_NP) was the opening Date of which ArchitecturalStructure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many opening Date does ($x | ArchitecturalStructure_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of ($x | ArchitecturalStructure_NP)?", "the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What is the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Artist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the artistic movement of which artist?", "($x | Thing_NP) was the artistic movement of which artist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many artistic movement does ($x | Artist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP).", "What are the artistic movements of ($x | Artist_NP)?", "What is the artistic movement of ($x | Artist_NP)?", "What was the artistic movement of ($x | Artist_NP)?", "What were the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Artist",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the artistic movement of which artist?", "($x | Thing_NP) was the artistic movement of which artist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many artistic movement does ($x | Artist_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all number Of Students of ($x | School_NP).", "List all the number Of Students of ($x | School_NP).", "show me all number Of Students of ($x | School_NP).", "What are the number Of Students of ($x | School_NP)?", "What is the number Of Student of ($x | School_NP)?", "What was the number Of Student of ($x | School_NP)?", "What were the number Of Students of ($x | School_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number Of Student does ($x | School_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "School",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of ($x | School_NP)?", "the number Of Students of ($x | School_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all influencers of ($x | Person_NP).", "List all the influencers of ($x | Person_NP).", "show me all influencers of ($x | Person_NP).", "which person is the influencer of ($x | Person_NP)?", "which person was the influencer of ($x | Person_NP)?", "which persons are the influencers of ($x | Person_NP)?", "which persons were the influencers of ($x | Person_NP)?", "Who are the influencers of ($x | Person_NP)?", "Who is the influencer of ($x | Person_NP)?", "Who was the influencer of ($x | Person_NP)?", "Who were the influencers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the influencer of which person?", "($x | Person_NP) was the influencer of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many influencer does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of ($x | Person_NP)?", "the influencers of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all founders of ($x | Organisation_NP).", "List all the founders of ($x | Organisation_NP).", "show me all founders of ($x | Organisation_NP).", "which pope is the founder of ($x | Organisation_NP)?", "which pope was the founder of ($x | Organisation_NP)?", "which popes are the founders of ($x | Organisation_NP)?", "which popes were the founders of ($x | Organisation_NP)?", "Who are the founders of ($x | Organisation_NP)?", "Who is the founder of ($x | Organisation_NP)?", "Who was the founder of ($x | Organisation_NP)?", "Who were the founders of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Organisation",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Pope_NP) is the founder of which organisation?", "($x | Pope_NP) was the founder of which organisation?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many founder does ($x | Organisation_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Organisation_NP)?", "the founders of ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all record labels of ($x | Genre_NP).", "List all the record labels of ($x | Genre_NP).", "show me all record labels of ($x | Genre_NP).", "What are the record labels of ($x | Genre_NP)?", "What is the record label of ($x | Genre_NP)?", "What was the record label of ($x | Genre_NP)?", "What were the record labels of ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Genre",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the record label of which genre?", "($x | Thing_NP) was the record label of which genre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many record label does ($x | Genre_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Genre",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of ($x | Genre_NP)?", "the record labels of ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the autobiography of ($x | Thing_NP)?", "What was the autobiography of ($x | Thing_NP)?", "which author is the autobiography of ($x | Thing_NP)?", "which author was the autobiography of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the autobiography of which autobiography?", "($x | Thing_NP) was the autobiography of which autobiography?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many autobiography does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wives of ($x | Person_NP).", "List all the wives of ($x | Person_NP).", "show me all wives of ($x | Person_NP).", "which person is the wife of ($x | Person_NP)?", "which person was the wife of ($x | Person_NP)?", "which persons are the wives of ($x | Person_NP)?", "which persons were the wives of ($x | Person_NP)?", "Who are the wives of ($x | Person_NP)?", "Who is the wife of ($x | Person_NP)?", "Who was the wife of ($x | Person_NP)?", "Who were the wives of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the wife of which person?", "($x | Person_NP) was the wife of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wife does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ($x | Person_NP)?", "the wives of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all first Air Dates of ($x | Thing_NP).", "List all the first Air Dates of ($x | Thing_NP).", "show me all first Air Dates of ($x | Thing_NP).", "What are the first Air Dates of ($x | Thing_NP)?", "What is the first Air Date of ($x | Thing_NP)?", "What was the first Air Date of ($x | Thing_NP)?", "What were the first Air Dates of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many first Air Date does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of ($x | Thing_NP)?", "the first Air Dates of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all cities in ($x | AdministrativeRegion_NP).", "List all the cities in ($x | AdministrativeRegion_NP).", "show me all cities in ($x | AdministrativeRegion_NP).", "What are the cities in ($x | AdministrativeRegion_NP)?", "What is the city in ($x | AdministrativeRegion_NP)?", "What was the city in ($x | AdministrativeRegion_NP)?", "What were the cities in ($x | AdministrativeRegion_NP)?", "which cities are the cities in ($x | AdministrativeRegion_NP)?", "which cities were the cities in ($x | AdministrativeRegion_NP)?", "which city is the city in ($x | AdministrativeRegion_NP)?", "which city was the city in ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "AdministrativeRegion",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the city in which administrative region?", "($x | City_NP) was the city in which administrative region?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many city does ($x | AdministrativeRegion_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "AdministrativeRegion",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in ($x | AdministrativeRegion_NP)?", "the city in ($x | AdministrativeRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine productions of ($x | Company_NP).", "List all the wine productions of ($x | Company_NP).", "show me all wine productions of ($x | Company_NP).", "What are the wine productions of ($x | Company_NP)?", "What is the wine production of ($x | Company_NP)?", "What was the wine production of ($x | Company_NP)?", "What were the wine productions of ($x | Company_NP)?", "which location is the wine production of ($x | Company_NP)?", "which location was the wine production of ($x | Company_NP)?", "which locations are the wine productions of ($x | Company_NP)?", "which locations were the wine productions of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Company",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Location_NP) is the wine production of which company?", "($x | Location_NP) was the wine production of which company?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wine production does ($x | Company_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of ($x | Company_NP)?", "the wine productions of ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all daughters of ($x | Person_NP).", "List all the daughters of ($x | Person_NP).", "show me all daughters of ($x | Person_NP).", "which person is the daughter of ($x | Person_NP)?", "which person was the daughter of ($x | Person_NP)?", "which persons are the daughters of ($x | Person_NP)?", "which persons were the daughters of ($x | Person_NP)?", "Who are the daughters of ($x | Person_NP)?", "Who is the daughter of ($x | Person_NP)?", "Who was the daughter of ($x | Person_NP)?", "Who were the daughters of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "311",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the daughter of which person?", "($x | Person_NP) was the daughter of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "312",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many daughter does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of ($x | Person_NP)?", "the daughters of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the number of pages of ($x | WrittenWork_NP)?", "What was the number of pages of ($x | WrittenWork_NP)?","How many pages does ($x | WrittenWork_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "WrittenWork",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the number of pages of which written work?", "($x | Number_NP) was the number of pages of which written work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "316",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many number of pages does ($x | WrittenWork_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "317",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all home stadiums of ($x | SportsClub_NP).", "List all the home stadiums of ($x | SportsClub_NP).", "show me all home stadiums of ($x | SportsClub_NP).", "What are the home stadiums of ($x | SportsClub_NP)?", "What is the home stadium of ($x | SportsClub_NP)?", "What was the home stadium of ($x | SportsClub_NP)?", "What were the home stadiums of ($x | SportsClub_NP)?", "which stadium is the home stadium of ($x | SportsClub_NP)?", "which stadium was the home stadium of ($x | SportsClub_NP)?", "which stadiums are the home stadiums of ($x | SportsClub_NP)?", "which stadiums were the home stadiums of ($x | SportsClub_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Stadium",
    "returnType" : "SportsClub",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Stadium_NP) is the home stadium of which SportsClub?", "($x | Stadium_NP) was the home stadium of which SportsClub?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many home stadium does ($x | SportsClub_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "321",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "SportsClub",
    "returnType" : "Stadium",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of ($x | SportsClub_NP)?", "the home stadiums of ($x | SportsClub_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ground> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "322",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "which person is the mayor of ($x | City_NP)?", "which person was the mayor of ($x | City_NP)?", "which persons are the mayors of ($x | City_NP)?", "which persons were the mayors of ($x | City_NP)?", "Who are the mayors of ($x | City_NP)?", "Who is the mayor of ($x | City_NP)?", "Who was the mayor of ($x | City_NP)?", "Who were the mayors of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the mayor of which city?", "($x | Person_NP) was the mayor of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many mayor does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "326",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the largest country of ($x | Country_NP)?", "What was the largest country of ($x | Country_NP)?", "which country is the largest country of ($x | Country_NP)?", "which country was the largest country of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "327",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the largest country of which country?", "($x | Country_NP) was the largest country of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many largest country does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all teams of ($x | IceHockeyLeague_NP).", "List all the teams of ($x | IceHockeyLeague_NP).", "show me all teams of ($x | IceHockeyLeague_NP).", "What are the teams of ($x | IceHockeyLeague_NP)?", "What is the team of ($x | IceHockeyLeague_NP)?", "What was the team of ($x | IceHockeyLeague_NP)?", "What were the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League is the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League was the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues are the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues were the teams of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "331",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "HockeyTeam",
    "returnType" : "IceHockeyLeague",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | HockeyTeam_NP) is the team of which HockeyTeam?", "($x | HockeyTeam_NP) was the team of which HockeyTeam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "332",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many team does ($x | IceHockeyLeague_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "HockeyTeam",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of ($x | IceHockeyLeague_NP)?", "the teams of ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/league> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the elevation of ($x | Mountain_NP)?", "What was the elevation of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "335",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Mountain",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the elevation of which mountain?", "($x | Number_NP) was the elevation of which mountain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "336",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many elevation does ($x | Mountain_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "337",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Mountain",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the birth place of ($x | Person_NP)?", "What was the birth place of ($x | Person_NP)?", "which country is the birth place of ($x | Person_NP)?", "which country was the birth place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the birth place of which person?", "($x | Country_NP) was the birth place of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "340",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many birth place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "341",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "342",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the capital of ($x | Country_NP)?", "What was the capital of ($x | Country_NP)?", "which city is the capital of ($x | Country_NP)?", "which city was the capital of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | City_NP) is the capital of which country?", "($x | City_NP) was the capital of which country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many capital does ($x | Country_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "345",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "346",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the death date of ($x | Person_NP)?", "What was the death date of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the death date of which person?", "($x | date_NP) was the death date of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many death date does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "350",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all costs of ($x | Film_NP).", "List all the costs of ($x | Film_NP).", "show me all costs of ($x | Film_NP).", "What are the costs of ($x | Film_NP)?", "What is the cost of ($x | Film_NP)?", "What was the cost of ($x | Film_NP)?", "What were the costs of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "351",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the cost of which film?", "($x | Number_NP) was the cost of which film?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many cost does ($x | Film_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of ($x | Film_NP)?", "the costs of ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the completion date of ($x | Ship_NP)?", "What was the completion date of ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "355",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the completion date of which work?", "($x | date_NP) was the completion date of which work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "356",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many completion date does ($x | Ship_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all authors of ($x | Work_NP).", "List all the authors of ($x | Work_NP).", "show me all authors of ($x | Work_NP).", "which person is the author of ($x | Work_NP)?", "which person was the author of ($x | Work_NP)?", "which persons are the authors of ($x | Work_NP)?", "which persons were the authors of ($x | Work_NP)?", "Who are the authors of ($x | Work_NP)?", "Who is the author of ($x | Work_NP)?", "Who was the author of ($x | Work_NP)?", "Who were the authors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the author of which work?", "($x | Person_NP) was the author of which work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "360",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many author does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "361",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ($x | Work_NP)?", "the authors of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all books in ($x | TelevisionShow_NP).", "List all the books in ($x | TelevisionShow_NP).", "show me all books in ($x | TelevisionShow_NP).", "What are the books in ($x | TelevisionShow_NP)?", "What is the book in ($x | TelevisionShow_NP)?", "What was the book in ($x | TelevisionShow_NP)?", "What were the books in ($x | TelevisionShow_NP)?", "which television show is the book in ($x | TelevisionShow_NP)?", "which television show was the book in ($x | TelevisionShow_NP)?", "which television shows are the books in ($x | TelevisionShow_NP)?", "which television shows were the books in ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "TelevisionShow",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Book_NP) is the book in which book?", "($x | Book_NP) was the book in which book?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many book does ($x | TelevisionShow_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "365",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "TelevisionShow",
    "returnType" : "Book",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ($x | TelevisionShow_NP)?", "the books in ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the post code of ($x | Place_NP)?", "What was the post code of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the post code of which place?", "($x | Number_NP) was the post code of which place?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many post code does ($x | Place_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "370",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the release date of ($x | Software_NP)?", "What was the release date of ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Software",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | date_NP) is the release date of which software?", "($x | date_NP) was the release date of which software?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many release date does ($x | Software_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all creators of ($x | FictionalCharacter_NP).", "List all the creators of ($x | FictionalCharacter_NP).", "show me all creators of ($x | FictionalCharacter_NP).", "which person is the creator of ($x | FictionalCharacter_NP)?", "which person was the creator of ($x | FictionalCharacter_NP)?", "which persons are the creators of ($x | FictionalCharacter_NP)?", "which persons were the creators of ($x | FictionalCharacter_NP)?", "Who are the creators of ($x | FictionalCharacter_NP)?", "Who is the creator of ($x | FictionalCharacter_NP)?", "Who was the creator of ($x | FictionalCharacter_NP)?", "Who were the creators of ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the creator of which fictional character?", "($x | Person_NP) was the creator of which fictional character?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many creator does ($x | FictionalCharacter_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "377",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ($x | FictionalCharacter_NP)?", "the creators of ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all wine regions of ($x | Grape_NP).", "List all the wine regions of ($x | Grape_NP).", "show me all wine regions of ($x | Grape_NP).", "What are the wine regions of ($x | Grape_NP)?", "What is the wine region of ($x | Grape_NP)?", "What was the wine region of ($x | Grape_NP)?", "What were the wine regions of ($x | Grape_NP)?", "which place is the wine region of ($x | Grape_NP)?", "which place was the wine region of ($x | Grape_NP)?", "which places are the wine regions of ($x | Grape_NP)?", "which places were the wine regions of ($x | Grape_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "379",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Grape",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the wine region of which grape?", "($x | Place_NP) was the wine region of which grape?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many wine region does ($x | Grape_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Grape",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of ($x | Grape_NP)?", "the wine regions of ($x | Grape_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "382",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "List all the time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What is the time zone of ($x | City_NP)?", "What was the time zone of ($x | City_NP)?", "What were the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the time zone of which city?", "($x | Thing_NP) was the time zone of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "384",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many time zone does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "List all the time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP).", "What are the time zones of ($x | City_NP)?", "What is the time zone of ($x | City_NP)?", "What was the time zone of ($x | City_NP)?", "What were the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "387",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the time zone of which city?", "($x | Thing_NP) was the time zone of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many time zone does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "389",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all minimum Temperatures of ($x | Planet_NP).", "List all the minimum Temperatures of ($x | Planet_NP).", "show me all minimum Temperatures of ($x | Planet_NP).", "What are the minimum Temperatures of ($x | Planet_NP)?", "What is the minimum Temperature of ($x | Planet_NP)?", "What was the minimum Temperature of ($x | Planet_NP)?", "What were the minimum Temperatures of ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Planet",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the minimum Temperature of which plant?", "($x | Number_NP) was the minimum Temperature of which plant?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many minimum Temperature does ($x | Planet_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "393",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Planet",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of ($x | Planet_NP)?", "the minimum Temperatures of ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "394",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the nationality of ($x | Person_NP)?", "What was the nationality of ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the nationality of which person?", "($x | Country_NP) was the nationality of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nationality does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "398",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all developers of ($x | Work_NP).", "List all the developers of ($x | Work_NP).", "show me all developers of ($x | Work_NP).", "which agent is the developer of ($x | Work_NP)?", "which agent was the developer of ($x | Work_NP)?", "which agents are the developers of ($x | Work_NP)?", "which agents were the developers of ($x | Work_NP)?", "Who are the developers of ($x | Work_NP)?", "Who is the developer of ($x | Work_NP)?", "Who was the developer of ($x | Work_NP)?", "Who were the developers of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "399",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Work",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Agent_NP) is the developer of which work?", "($x | Agent_NP) was the developer of which work?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many developer does ($x | Work_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of ($x | Work_NP)?", "the developers of ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "402",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all causes of death of ($x | Person_NP).", "List all the causes of death of ($x | Person_NP).", "show me all causes of death of ($x | Person_NP).", "What are the causes of death of ($x | Person_NP)?", "What is the cause of death of ($x | Person_NP)?", "What was the cause of death of ($x | Person_NP)?", "What were the causes of death of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "403",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the cause of death of which person?", "($x | Thing_NP) was the cause of death of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many cause of death does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ($x | Person_NP)?", "the causes of death of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "406",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all diameters of ($x | Thing_NP).", "List all the diameters of ($x | Thing_NP).", "show me all diameters of ($x | Thing_NP).", "What are the diameters of ($x | Thing_NP)?", "What is the diameter of ($x | Thing_NP)?", "What was the diameter of ($x | Thing_NP)?", "What were the diameters of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "407",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many diameter does ($x | Thing_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "408",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of ($x | Thing_NP)?", "the diameters of ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/diameter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "which person is the successor of ($x | Politician_NP)?", "which person was the successor of ($x | Politician_NP)?", "Who is the successor of ($x | Politician_NP)?", "Who was the successor of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the successor of which politician?", "($x | Person_NP) was the successor of which politician?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "411",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many successor does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "412",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "413",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all vice president of ($x | Politician_NP).", "List all the vice president of ($x | Politician_NP).", "show me all vice president of ($x | Politician_NP).", "which politician is the vice president of ($x | Politician_NP)?", "which politician was the vice president of ($x | Politician_NP)?", "which politicians are the vice president of ($x | Politician_NP)?", "which politicians were the vice president of ($x | Politician_NP)?", "Who are the vice president of ($x | Politician_NP)?", "Who is the vice president of ($x | Politician_NP)?", "Who was the vice president of ($x | Politician_NP)?", "Who were the vice president of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Politician_NP) is the vice president of which politician?", "($x | Politician_NP) was the vice president of which politician?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many vice president does ($x | Politician_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "416",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "417",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all governors of ($x | Person_NP).", "List all the governors of ($x | Person_NP).", "show me all governors of ($x | Person_NP).", "which person is the governor of ($x | Person_NP)?", "which person was the governor of ($x | Person_NP)?", "which persons are the governors of ($x | Person_NP)?", "which persons were the governors of ($x | Person_NP)?", "Who are the governors of ($x | Person_NP)?", "Who is the governor of ($x | Person_NP)?", "Who was the governor of ($x | Person_NP)?", "Who were the governors of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "418",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Person_NP) is the governor of which person?", "($x | Person_NP) was the governor of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many governor does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ($x | Person_NP)?", "the governors of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "421",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all addresses of ($x | ArchitecturalStructure_NP).", "List all the addresses of ($x | ArchitecturalStructure_NP).", "show me all addresses of ($x | ArchitecturalStructure_NP).", "What are the addresses of ($x | ArchitecturalStructure_NP)?", "What is the address of ($x | ArchitecturalStructure_NP)?", "What was the address of ($x | ArchitecturalStructure_NP)?", "What were the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "422",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the address of which ArchitecturalStructure?", "($x | Thing_NP) was the address of which ArchitecturalStructure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "423",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many address does ($x | ArchitecturalStructure_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "424",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of ($x | ArchitecturalStructure_NP)?", "the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/address> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all associated Musical Artists of ($x | Band_NP).", "List all the associated Musical Artists of ($x | Band_NP).", "show me all associated Musical Artists of ($x | Band_NP).", "What are the associated Musical Artists of ($x | Band_NP)?", "What is the associated Musical Artist of ($x | Band_NP)?", "What was the associated Musical Artist of ($x | Band_NP)?", "What were the associated Musical Artists of ($x | Band_NP)?", "which place is the associated Musical Artist of ($x | Band_NP)?", "which place was the associated Musical Artist of ($x | Band_NP)?", "which places are the associated Musical Artists of ($x | Band_NP)?", "which places were the associated Musical Artists of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "426",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Band",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Place_NP) is the associated Musical Artist of which band?", "($x | Place_NP) was the associated Musical Artist of which band?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "427",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many associated Musical Artist does ($x | Band_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "428",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of ($x | Band_NP)?", "the associated Musical Artists of ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "429",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all resting places of ($x | Person_NP).", "List all the resting places of ($x | Person_NP).", "show me all resting places of ($x | Person_NP).", "What are the resting places of ($x | Person_NP)?", "What is the resting place of ($x | Person_NP)?", "What was the resting place of ($x | Person_NP)?", "What were the resting places of ($x | Person_NP)?", "which countries are the resting places of ($x | Person_NP)?", "which countries were the resting places of ($x | Person_NP)?", "which country is the resting place of ($x | Person_NP)?", "which country was the resting place of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "430",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Country_NP) is the resting place of which person?", "($x | Country_NP) was the resting place of which person?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "431",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many resting place does ($x | Person_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "432",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?", "the resting places of ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "433",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Give me all nicknames of ($x | City_NP).", "List all the nicknames of ($x | City_NP).", "show me all nicknames of ($x | City_NP).", "What are the nicknames of ($x | City_NP)?", "What is the nickname of ($x | City_NP)?", "What was the nickname of ($x | City_NP)?", "What were the nicknames of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "434",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "City",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Thing_NP) is the nickname of which city?", "($x | Thing_NP) was the nickname of which city?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "435",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many nickname does ($x | City_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "436",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Thing",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nickname of ($x | City_NP)?", "the nicknames of ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "437",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What is the height of ($x | Model_NP)?", "What was the height of ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "438",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Model",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "Copulative_Subject",
    "sentences" : [ "($x | Number_NP) is the height of which model?", "($x | Number_NP) was the height of which model?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "439",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_FORWARD",
    "sentences" : [ "How many height does ($x | Model_NP) have?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "440",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Model",
    "returnType" : "Number",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who leads ($x | Place_NP)?", "Who led ($x | Place_NP)?", "Who was the person that led ($x | Place_NP)?", "which person does ($x | Place_NP) lead?", "which person leads ($x | Place_NP)?", "which person led ($x | Place_NP)?", "which persons did ($x | Place_NP) lead?", "which persons lead ($x | Place_NP)?", "which persons led ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "442",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places led by ($x | Person_NP)?", "List all places led by ($x | Person_NP)?", "What was led by ($x | Person_NP)?", "What were led by ($x | Person_NP)?", "show me the place that ($x | Person_NP) led", "which place did ($x | Person_NP) lead?", "which place was led by ($x | Person_NP)?", "which places did ($x | Person_NP) lead?", "which places were led by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "443",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many places are led by ($x | Person_NP)?", "How often did ($x | Person_NP) lead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "444",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who produced ($x | Film_NP)?", "Who produces ($x | Film_NP)?", "Who was the person that produced ($x | Film_NP)?", "which person does ($x | Film_NP) produce?", "which person produced ($x | Film_NP)?", "which person produces ($x | Film_NP)?", "which persons did ($x | Film_NP) produce?", "which persons produce ($x | Film_NP)?", "which persons produced ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film produced by ($x | Person_NP)?", "List all film produced by ($x | Person_NP)?", "What was produced by ($x | Person_NP)?", "What were produced by ($x | Person_NP)?", "show me the film that ($x | Person_NP) produced", "which film did ($x | Person_NP) produce?", "which film was produced by ($x | Person_NP)?", "which film were produced by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "447",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who created ($x | TelevisionShow_NP)?", "Who creates ($x | TelevisionShow_NP)?", "Who was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "448",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by ($x | Agent_NP)?", "List all television shows created by ($x | Agent_NP)?", "What was created by ($x | Agent_NP)?", "What were created by ($x | Agent_NP)?", "show me the television show that ($x | Agent_NP) created", "which television show did ($x | Agent_NP) create?", "which television show was created by ($x | Agent_NP)?", "which television shows did ($x | Agent_NP) create?", "which television shows were created by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are created by ($x | Agent_NP)?", "How often did ($x | Agent_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "451",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) founded by?", "Who was founded by ($x | Person_NP)?", "Who were founded by ($x | Person_NP)?", "Whom did ($x | Organisation_NP) found?", "which organisation was founded by ($x | Person_NP)?", "which organisations were founded by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "452",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organisations are founded by ($x | Person_NP)?", "How often did ($x | Person_NP) found?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "453",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who directed ($x | Film_NP)?", "Who directs ($x | Film_NP)?", "Who was the person that directed ($x | Film_NP)?", "which person directed ($x | Film_NP)?", "which person directs ($x | Film_NP)?", "which person does ($x | Film_NP) direct?", "which persons did ($x | Film_NP) direct?", "which persons direct ($x | Film_NP)?", "which persons directed ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all movies directed by ($x | Person_NP)?", "List all movies directed by ($x | Person_NP)?", "What was directed by ($x | Person_NP)?", "What were directed by ($x | Person_NP)?", "show me the movie that ($x | Person_NP) directed", "which films did ($x | Person_NP) direct?", "which movie did ($x | Person_NP) direct?","Which movies did ($x | Person_NP) direct?", "which movie was directed by ($x | Person_NP)?", "which movies were directed by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many movies are directed by ($x | Person_NP)?", "How often did ($x | Person_NP) direct?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "456",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who discovered ($x | Place_NP)?", "Who discovers ($x | Place_NP)?", "Who was the person that discovered ($x | Place_NP)?", "which person discovered ($x | Place_NP)?", "which person discovers ($x | Place_NP)?", "which person does ($x | Place_NP) discover?", "which persons did ($x | Place_NP) discover?", "which persons discover ($x | Place_NP)?", "which persons discovered ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "457",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places discovered by ($x | Person_NP)?", "List all places discovered by ($x | Person_NP)?", "What was discovered by ($x | Person_NP)?", "What were discovered by ($x | Person_NP)?", "show me the place that ($x | Person_NP) discovered", "which place did ($x | Person_NP) discover?", "which place was discovered by ($x | Person_NP)?", "which places did ($x | Person_NP) discover?", "which places were discovered by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "458",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many places are discovered by ($x | Person_NP)?", "How often did ($x | Person_NP) discover?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airline",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What served ($x | Airline_NP)?", "What serves ($x | Airline_NP)?", "What was the airport that served ($x | Airline_NP)?", "which airport does ($x | Airline_NP) serve?", "which airport served ($x | Airline_NP)?", "which airport serves ($x | Airline_NP)?", "which airports does ($x | Airline_NP) serve?","which airports did ($x | Airline_NP) serve?", "which airports serve ($x | Airline_NP)?", "which airports served ($x | Airline_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "460",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airlines served by ($x | Airport_NP)?", "List all airlines served by ($x | Airport_NP)?", "What was served by ($x | Airport_NP)?", "What were served by ($x | Airport_NP)?", "show me the airline that ($x | Airport_NP) served", "which airline did ($x | Airport_NP) serve?", "which airline was served by ($x | Airport_NP)?", "which airlines did ($x | Airport_NP) serve?", "which airlines were served by ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "461",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airlines are served by ($x | Airport_NP)?", "How often did ($x | Airport_NP) serve?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "462",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who programmed ($x | Software_NP)?", "Who programs ($x | Software_NP)?", "Who was the person that programmed ($x | Software_NP)?", "which person does ($x | Software_NP) program?", "which person programmed ($x | Software_NP)?", "which person programs ($x | Software_NP)?", "which persons did ($x | Software_NP) program?", "which persons program ($x | Software_NP)?", "which persons programmed ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/programmer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "463",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares programmed by ($x | Person_NP)?", "List all softwares programmed by ($x | Person_NP)?", "What was programmed by ($x | Person_NP)?", "What were programmed by ($x | Person_NP)?", "show me the software that ($x | Person_NP) programmed", "which software did ($x | Person_NP) program?", "which software was programmed by ($x | Person_NP)?", "which softwares did ($x | Person_NP) program?", "which softwares were programmed by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/programmer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are programmed by ($x | Person_NP)?", "How often did ($x | Person_NP) program?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/programmer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "465",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Actor",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who starred ($x | Work_NP)?", "Who stars ($x | Work_NP)?", "Who was the actor that starred ($x | Work_NP)?", "which actor does ($x | Work_NP) star?", "which actor starred ($x | Work_NP)?", "which actor stars ($x | Work_NP)?", "which actors did ($x | Work_NP) star?", "which actors star ($x | Work_NP)?", "which actors starred ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "466",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works starred by ($x | Actor_NP)?", "List all works starred by ($x | Actor_NP)?", "What was starred by ($x | Actor_NP)?", "What were starred by ($x | Actor_NP)?", "show me the work that ($x | Actor_NP) starred", "which work did ($x | Actor_NP) star?", "which work was starred by ($x | Actor_NP)?", "which works did ($x | Actor_NP) star?", "which works were starred by ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "467",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are starred by ($x | Actor_NP)?", "How often did ($x | Actor_NP) star?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | TelevisionShow_NP)?", "Who writes ($x | TelevisionShow_NP)?", "Who wrote the ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) write?", "which person writes ($x | TelevisionShow_NP)?", "which person wrote ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) write?", "which persons write ($x | TelevisionShow_NP)?", "which persons wrote ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows wrote by ($x | Person_NP)?", "List all television shows wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the television show that ($x | Person_NP) wrote", "which television show did ($x | Person_NP) write?", "which television show was wrote by ($x | Person_NP)?", "which television shows did ($x | Person_NP) write?", "which television shows were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "470",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "471",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What preceded ($x | Work_NP)?", "What precedes ($x | Work_NP)?", "What was the work that preceded ($x | Work_NP)?", "which work does ($x | Work_NP) precede?", "which work preceded ($x | Work_NP)?", "which work precedes ($x | Work_NP)?", "which works did ($x | Work_NP) precede?", "which works precede ($x | Work_NP)?", "which works preceded ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "472",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works preceded by ($x | Work_NP)?", "List all works preceded by ($x | Work_NP)?", "What was preceded by ($x | Work_NP)?", "What were preceded by ($x | Work_NP)?", "show me the work that ($x | Work_NP) preceded", "which work did ($x | Work_NP) precede?", "which work was preceded by ($x | Work_NP)?", "which works did ($x | Work_NP) precede?", "which works were preceded by ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are preceded by ($x | Work_NP)?", "How often did ($x | Work_NP) precede?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "474",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who published ($x | Publisher_NP)?", "Who publishes ($x | Publisher_NP)?", "Who was the agent that published ($x | Publisher_NP)?", "which agent does ($x | Publisher_NP) publish?", "which agent published ($x | Publisher_NP)?", "which agent publishes ($x | Publisher_NP)?", "which agents did ($x | Publisher_NP) publish?", "which agents publish ($x | Publisher_NP)?", "which agents published ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "475",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers published by ($x | Agent_NP)?", "List all publishers published by ($x | Agent_NP)?", "What was published by ($x | Agent_NP)?", "What were published by ($x | Agent_NP)?", "show me the publisher that ($x | Agent_NP) published", "which publisher did ($x | Agent_NP) publish?", "which publisher was published by ($x | Agent_NP)?", "which publishers did ($x | Agent_NP) publish?", "which publishers were published by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "476",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many publishers are published by ($x | Agent_NP)?", "How often did ($x | Agent_NP) publish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "477",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who painted ($x | Work_NP)?", "Who paints ($x | Work_NP)?", "Who was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "478",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by ($x | Person_NP)?", "List all works painted by ($x | Person_NP)?", "What was painted by ($x | Person_NP)?", "What were painted by ($x | Person_NP)?", "show me the work that ($x | Person_NP) painted", "which work did ($x | Person_NP) paint?", "which work was painted by ($x | Person_NP)?", "which works did ($x | Person_NP) paint?", "which works were painted by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "479",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are painted by ($x | Person_NP)?", "How often did ($x | Person_NP) paint?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "480",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who maintained ($x | ArchitecturalStructure_NP)?", "Who maintains ($x | ArchitecturalStructure_NP)?", "Who was the agent that maintained ($x | ArchitecturalStructure_NP)?", "which agent does ($x | ArchitecturalStructure_NP) maintain?", "which agent maintained ($x | ArchitecturalStructure_NP)?", "which agent maintains ($x | ArchitecturalStructure_NP)?", "which agents did ($x | ArchitecturalStructure_NP) maintain?", "which agents maintain ($x | ArchitecturalStructure_NP)?", "which agents maintained ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "481",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures maintained by ($x | Agent_NP)?", "List all ArchitecturalStructures maintained by ($x | Agent_NP)?", "What was maintained by ($x | Agent_NP)?", "What were maintained by ($x | Agent_NP)?", "show me the ArchitecturalStructure that ($x | Agent_NP) maintained", "which ArchitecturalStructure did ($x | Agent_NP) maintain?", "which ArchitecturalStructure was maintained by ($x | Agent_NP)?", "which ArchitecturalStructures did ($x | Agent_NP) maintain?", "which ArchitecturalStructures were maintained by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "482",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are maintained by ($x | Agent_NP)?", "How often did ($x | Agent_NP) maintain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "483",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who trained ($x | Athlete_NP)?", "Who trains ($x | Athlete_NP)?", "Who was the person that trained ($x | Athlete_NP)?", "Whom is ($x | Athlete_NP) train?", "Whom was ($x | Athlete_NP) train?", "which person trained ($x | Athlete_NP)?", "which person trains ($x | Athlete_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/trainer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "484",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Athlete",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) trained by?", "Who was trained by ($x | Person_NP)?", "Who were trained by ($x | Person_NP)?", "Whom did ($x | Athlete_NP) train?", "which athlete was trained by ($x | Person_NP)?", "which athlete were trained by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/trainer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "485",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Athlete",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete are trained by ($x | Person_NP)?", "How often did ($x | Person_NP) train?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/trainer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "486",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "EthnicGroup",
    "returnType" : "Country",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What lived ($x | EthnicGroup_NP)?", "What lives ($x | EthnicGroup_NP)?", "What was the country that lived ($x | EthnicGroup_NP)?", "which countries did ($x | EthnicGroup_NP) live?", "which countries live ($x | EthnicGroup_NP)?", "which countries lived ($x | EthnicGroup_NP)?", "which country does ($x | EthnicGroup_NP) live?", "which country lived ($x | EthnicGroup_NP)?", "which country lives ($x | EthnicGroup_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "EthnicGroup",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ethnic groups lived in ($x | Country_NP)?", "List all ethnic groups lived in ($x | Country_NP)?", "What was lived in ($x | Country_NP)?", "What were lived in ($x | Country_NP)?", "show me the ethnic group that ($x | Country_NP) lived", "which ethnic group did ($x | Country_NP) live?", "which ethnic group was lived in ($x | Country_NP)?", "which ethnic groups did ($x | Country_NP) live?", "which ethnic groups were lived in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "488",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "EthnicGroup",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ethnic groups live in ($x | Country_NP)?", "How often did ($x | Country_NP) live?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "489",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who supported ($x | Thing_NP)?", "Who supports ($x | Thing_NP)?", "Who was the agent that supported ($x | Thing_NP)?", "which agent does ($x | Thing_NP) support?", "which agent supported ($x | Thing_NP)?", "which agent supports ($x | Thing_NP)?", "which agents did ($x | Thing_NP) support?", "which agents support ($x | Thing_NP)?", "which agents supported ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ideology> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "490",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ideologies supported by ($x | Agent_NP)?", "List all ideologies supported by ($x | Agent_NP)?", "What was supported by ($x | Agent_NP)?", "What were supported by ($x | Agent_NP)?", "show me the ideology that ($x | Agent_NP) supported", "which ideologies did ($x | Agent_NP) support?", "which ideologies were supported by ($x | Agent_NP)?", "which ideology did ($x | Agent_NP) support?", "which ideology was supported by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ideology> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "491",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ideologies are supported by ($x | Agent_NP)?", "How often did ($x | Agent_NP) support?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ideology> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Award",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What was the award that won ($x | Scientist_NP)?", "What wins ($x | Scientist_NP)?", "What won ($x | Scientist_NP)?", "which award does ($x | Scientist_NP) win?", "which award wins ($x | Scientist_NP)?", "which award won ($x | Scientist_NP)?", "which awards did ($x | Scientist_NP) win?", "which awards win ($x | Scientist_NP)?", "which awards won ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "493",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all scientists won by ($x | Award_NP)?", "List all scientists won by ($x | Award_NP)?", "Who was won by ($x | Award_NP)?", "Who were won by ($x | Award_NP)?", "show me the scientist that ($x | Award_NP) won", "which scientist did ($x | Award_NP) win?", "which scientist was won by ($x | Award_NP)?", "which scientists did ($x | Award_NP) win?", "which scientists were won by ($x | Award_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "494",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many scientists are won by ($x | Award_NP)?", "How often did ($x | Award_NP) win?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "495",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalWork",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who performed ($x | MusicalWork_NP)?", "Who performs ($x | MusicalWork_NP)?", "Who was the agent that performed ($x | MusicalWork_NP)?", "which agent does ($x | MusicalWork_NP) perform?", "which agent performed ($x | MusicalWork_NP)?", "which agent performs ($x | MusicalWork_NP)?", "which agents did ($x | MusicalWork_NP) perform?", "which agents perform ($x | MusicalWork_NP)?", "which agents performed ($x | MusicalWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "496",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "MusicalWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musical works performed by ($x | Agent_NP)?", "List all musical works performed by ($x | Agent_NP)?", "What was performed by ($x | Agent_NP)?", "What were performed by ($x | Agent_NP)?", "show me the musical work that ($x | Agent_NP) performed", "which musical work did ($x | Agent_NP) perform?", "which musical work was performed by ($x | Agent_NP)?", "which musical works did ($x | Agent_NP) perform?", "which musical works were performed by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "MusicalWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musical works are performed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) perform?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "498",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who directed ($x | Software_NP)?", "Who directs ($x | Software_NP)?", "Who was the person that directed ($x | Software_NP)?", "which person directed ($x | Software_NP)?", "which person directs ($x | Software_NP)?", "which person does ($x | Software_NP) direct?", "which persons did ($x | Software_NP) direct?", "which persons direct ($x | Software_NP)?", "which persons directed ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "499",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares directed by ($x | Person_NP)?", "List all softwares directed by ($x | Person_NP)?", "What was directed by ($x | Person_NP)?", "What were directed by ($x | Person_NP)?", "show me the software that ($x | Person_NP) directed", "which software did ($x | Person_NP) direct?", "which software was directed by ($x | Person_NP)?", "which softwares did ($x | Person_NP) direct?", "which softwares were directed by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "500",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are directed by ($x | Person_NP)?", "How often did ($x | Person_NP) direct?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "501",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artwork",
    "returnType" : "Museum",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What exhibited ($x | Artwork_NP)?", "What exhibits ($x | Artwork_NP)?", "What was the museum that exhibited ($x | Artwork_NP)?", "which museum does ($x | Artwork_NP) exhibit?", "which museum exhibited ($x | Artwork_NP)?", "which museum exhibits ($x | Artwork_NP)?", "which museums did ($x | Artwork_NP) exhibit?", "which museums exhibit ($x | Artwork_NP)?", "which museums exhibited ($x | Artwork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all artworks exhibited by ($x | Museum_NP)?", "List all artworks exhibited by ($x | Museum_NP)?", "What was exhibited by ($x | Museum_NP)?", "What were exhibited by ($x | Museum_NP)?", "show me the artwork that ($x | Museum_NP) exhibited", "which artwork did ($x | Museum_NP) exhibit?", "which artwork was exhibited by ($x | Museum_NP)?", "which artworks did ($x | Museum_NP) exhibit?", "which artworks were exhibited by ($x | Museum_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "503",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artworks are exhibited by ($x | Museum_NP)?", "How often did ($x | Museum_NP) exhibit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "504",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "PopulatedPlace",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What speaks ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "505",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by ($x | PopulatedPlace_NP)?", "List all languages spoken by ($x | PopulatedPlace_NP)?", "What was spoken by ($x | PopulatedPlace_NP)?", "What were spoken by ($x | PopulatedPlace_NP)?", "show me the language that ($x | PopulatedPlace_NP) spoke", "which language did ($x | PopulatedPlace_NP) speak?", "which language was spoken by ($x | PopulatedPlace_NP)?", "which languages did ($x | PopulatedPlace_NP) speak?", "which languages were spoken by ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "506",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken by ($x | PopulatedPlace_NP)?", "How often did ($x | PopulatedPlace_NP) speak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "507",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "PopulatedPlace",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What speaks ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "508",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by ($x | PopulatedPlace_NP)?", "List all languages spoken by ($x | PopulatedPlace_NP)?", "What was spoken by ($x | PopulatedPlace_NP)?", "What were spoken by ($x | PopulatedPlace_NP)?", "show me the language that ($x | PopulatedPlace_NP) spoke", "which language did ($x | PopulatedPlace_NP) speak?", "which language was spoken by ($x | PopulatedPlace_NP)?", "which languages did ($x | PopulatedPlace_NP) speak?", "which languages were spoken by ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "509",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken by ($x | PopulatedPlace_NP)?", "How often did ($x | PopulatedPlace_NP) speak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "510",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who bred ($x | Thing_NP)?", "Who breeds ($x | Thing_NP)?", "Who was the person that bred ($x | Thing_NP)?", "which person bred ($x | Thing_NP)?", "which person breeds ($x | Thing_NP)?", "which person does ($x | Thing_NP) breed?", "which persons bred ($x | Thing_NP)?", "which persons breed ($x | Thing_NP)?", "which persons did ($x | Thing_NP) breed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/breeder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "511",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals bred by ($x | Person_NP)?", "List all animals bred by ($x | Person_NP)?", "What was bred by ($x | Person_NP)?", "What were bred by ($x | Person_NP)?", "show me the animal that ($x | Person_NP) bred", "which animal did ($x | Person_NP) breed?", "which animal was bred by ($x | Person_NP)?", "which animals did ($x | Person_NP) breed?", "which animals were bred by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/breeder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "512",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many animals are bred by ($x | Person_NP)?", "How often did ($x | Person_NP) breed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/breeder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "513",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What developed ($x | Company_NP)?", "What develops ($x | Company_NP)?", "What was the software that developed ($x | Company_NP)?", "which software developed ($x | Company_NP)?", "which software develops ($x | Company_NP)?", "which software does ($x | Company_NP) develop?", "which softwares develop ($x | Company_NP)?", "which softwares developed ($x | Company_NP)?", "which softwares did ($x | Company_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "514",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company developed by ($x | Software_NP)?", "List all company developed by ($x | Software_NP)?", "Who was developed by ($x | Software_NP)?", "Who were developed by ($x | Software_NP)?", "show me the company that ($x | Software_NP) developed", "which company did ($x | Software_NP) develop?", "which company was developed by ($x | Software_NP)?", "which company were developed by ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "515",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Software_NP)?", "How often did ($x | Software_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "516",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who developed ($x | VideoGame_NP)?", "Who develops ($x | VideoGame_NP)?", "Who was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "517",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by ($x | Agent_NP)?", "List all video games developed by ($x | Agent_NP)?", "What was developed by ($x | Agent_NP)?", "What were developed by ($x | Agent_NP)?", "show me the video game that ($x | Agent_NP) developed", "which video game did ($x | Agent_NP) develop?", "which video game was developed by ($x | Agent_NP)?", "which video games did ($x | Agent_NP) develop?", "which video games were developed by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "518",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are developed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Who was the politician that preceded ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/after> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "520",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Politician_NP) preceded by?", "Who was preceded by ($x | Politician_NP)?", "Who were preceded by ($x | Politician_NP)?", "Whom did ($x | Politician_NP) precede?", "which politician was preceded by ($x | Politician_NP)?", "which politicians were preceded by ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/after> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "521",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are preceded by ($x | Politician_NP)?", "How often did ($x | Politician_NP) precede?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/after> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "522",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by ($x | Company_NP)?", "List all company developed by ($x | Company_NP)?", "What was developed by ($x | Company_NP)?", "What were developed by ($x | Company_NP)?", "show me the company that ($x | Company_NP) developed", "which company did ($x | Company_NP) develop?", "which company was developed by ($x | Company_NP)?", "which company were developed by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Company_NP)?", "How often did ($x | Company_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "525",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "526",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by ($x | Company_NP)?", "List all company developed by ($x | Company_NP)?", "What was developed by ($x | Company_NP)?", "What were developed by ($x | Company_NP)?", "show me the company that ($x | Company_NP) developed", "which company did ($x | Company_NP) develop?", "which company was developed by ($x | Company_NP)?", "which company were developed by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "527",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Company_NP)?", "How often did ($x | Company_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Actor",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who played ($x | Work_NP)?", "Who plays ($x | Work_NP)?", "Who was the actor that played ($x | Work_NP)?", "which actor does ($x | Work_NP) play?", "which actor played ($x | Work_NP)?", "which actor plays ($x | Work_NP)?", "which actors did ($x | Work_NP) play?", "which actors play ($x | Work_NP)?", "which actors played ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works played by ($x | Actor_NP)?", "List all works played by ($x | Actor_NP)?", "What was played by ($x | Actor_NP)?", "What were played by ($x | Actor_NP)?", "show me the work that ($x | Actor_NP) played", "which work did ($x | Actor_NP) play?", "which work was played by ($x | Actor_NP)?", "which works did ($x | Actor_NP) play?", "which works were played by ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "530",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are played by ($x | Actor_NP)?", "How often did ($x | Actor_NP) play?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "531",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who owned ($x | Thing_NP)?", "Who owns ($x | Thing_NP)?", "Who was the agent that owned ($x | Thing_NP)?", "which agent does ($x | Thing_NP) own?", "which agent owned ($x | Thing_NP)?", "which agent owns ($x | Thing_NP)?", "which agents did ($x | Thing_NP) own?", "which agents own ($x | Thing_NP)?", "which agents owned ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "532",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals owned by ($x | Agent_NP)?", "List all animals owned by ($x | Agent_NP)?", "What was owned by ($x | Agent_NP)?", "What were owned by ($x | Agent_NP)?", "show me the animal that ($x | Agent_NP) owned", "which animal did ($x | Agent_NP) own?", "which animal was owned by ($x | Agent_NP)?", "which animals did ($x | Agent_NP) own?", "which animals were owned by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many animals are owned by ($x | Agent_NP)?", "How often did ($x | Agent_NP) own?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who produced ($x | Ship_NP)?", "Who produces ($x | Ship_NP)?", "which company marry to ($x | Ship_NP)?", "which company produced ($x | Ship_NP)?", "which company produces ($x | Ship_NP)?","Which companies produce ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "535",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Ship",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company produced by ($x | Company_NP)?", "List all company produced by ($x | Company_NP)?", "What was produced by ($x | Company_NP)?", "What were produced by ($x | Company_NP)?", "show me the company that ($x | Company_NP) produced", "which company did ($x | Company_NP) marry to?", "which company was produced by ($x | Company_NP)?", "which company were produced by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "536",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Ship",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are produced by ($x | Company_NP)?", "How often did ($x | Company_NP) marry to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "537",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Magazine",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What covered ($x | Thing_NP)?", "What covers ($x | Thing_NP)?", "What was the academic journal that covered ($x | Thing_NP)?", "which academic journal covered ($x | Thing_NP)?", "which academic journal covers ($x | Thing_NP)?", "which academic journal does ($x | Thing_NP) cover?", "which academic journals cover ($x | Thing_NP)?", "which academic journals covered ($x | Thing_NP)?", "which academic journals did ($x | Thing_NP) cover?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Magazine",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What was covered by ($x | Magazine_NP)?", "What were covered by ($x | Magazine_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Magazine",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How often did ($x | Magazine_NP) cover?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "540",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Award",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What was the award that won ($x | Person_NP)?", "What wins ($x | Person_NP)?", "What won ($x | Person_NP)?", "which award does ($x | Person_NP) win?", "which award wins ($x | Person_NP)?", "which award won ($x | Person_NP)?", "which awards did ($x | Person_NP) win?", "which awards win ($x | Person_NP)?", "which awards won ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "541",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons won by ($x | Award_NP)?", "List all persons won by ($x | Award_NP)?", "Who was won by ($x | Award_NP)?", "Who were won by ($x | Award_NP)?", "show me the person that ($x | Award_NP) won", "which person did ($x | Award_NP) win?", "which person was won by ($x | Award_NP)?", "which persons did ($x | Award_NP) win?", "which persons were won by ($x | Award_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "542",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are won by ($x | Award_NP)?", "How often did ($x | Award_NP) win?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who controlled ($x | Airport_NP)?", "Who controls ($x | Airport_NP)?", "Who was the organisation that controlled ($x | Airport_NP)?", "which organisation controlled ($x | Airport_NP)?", "which organisation controls ($x | Airport_NP)?", "which organisation does ($x | Airport_NP) control?", "which organisations control ($x | Airport_NP)?", "which organisations controlled ($x | Airport_NP)?", "which organisations did ($x | Airport_NP) control?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/controlledby> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports controlled by ($x | Organisation_NP)?", "List all airports controlled by ($x | Organisation_NP)?", "What was controlled by ($x | Organisation_NP)?", "What were controlled by ($x | Organisation_NP)?", "show me the airport that ($x | Organisation_NP) controlled", "which airport did ($x | Organisation_NP) control?", "which airport was controlled by ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) control?", "which airports were controlled by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/controlledby> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "545",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are controlled by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) control?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/controlledby> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "546",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who produced ($x | Person_NP)?", "Who produces ($x | Person_NP)?", "Who was the person that produced ($x | Person_NP)?", "Whom is ($x | Person_NP) marry to?", "Whom was ($x | Person_NP) marry to?", "which person produced ($x | Person_NP)?", "which person produces ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "547",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) married to by?", "Who was married to by ($x | Person_NP)?", "Who were married to by ($x | Person_NP)?", "Whom did ($x | Person_NP) marry to?", "which person was married to by ($x | Person_NP)?", "which persons were married to by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are married by ($x | Person_NP)?", "How often did ($x | Person_NP) marry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | Album_NP)?", "Who writes ($x | Album_NP)?", "Who wrote the ($x | Album_NP)?", "which person does ($x | Album_NP) write?", "which person writes ($x | Album_NP)?", "which person wrote ($x | Album_NP)?", "which persons did ($x | Album_NP) write?", "which persons write ($x | Album_NP)?", "which persons wrote ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/allLyrics> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "550",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums wrote by ($x | Person_NP)?", "List all albums wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the album that ($x | Person_NP) wrote", "which album did ($x | Person_NP) write?", "which album was wrote by ($x | Person_NP)?", "which albums did ($x | Person_NP) write?", "which albums were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/allLyrics> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "551",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/allLyrics> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "552",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Country",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What speaks ($x | Language_NP)?", "What spoke ($x | Language_NP)?", "What was the country that spoke ($x | Language_NP)?", "which countries did ($x | Language_NP) speak?", "which countries speak ($x | Language_NP)?", "which countries spoke ($x | Language_NP)?", "which country does ($x | Language_NP) speak?", "which country speaks ($x | Language_NP)?", "which country spoke ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken in ($x | Country_NP)?", "List all languages spoken in ($x | Country_NP)?", "What was spoken in ($x | Country_NP)?", "What were spoken in ($x | Country_NP)?", "show me the language that ($x | Country_NP) spoke", "which language did ($x | Country_NP) speak?", "which language was spoken in ($x | Country_NP)?", "which languages did ($x | Country_NP) speak?", "which languages were spoken in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken in ($x | Country_NP)?", "How often did ($x | Country_NP) speak?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "555",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who illustrated ($x | WrittenWork_NP)?", "Who illustrates ($x | WrittenWork_NP)?", "Who was the person that illustrated ($x | WrittenWork_NP)?", "which person does ($x | WrittenWork_NP) illustrate?", "which person illustrated ($x | WrittenWork_NP)?", "which person illustrates ($x | WrittenWork_NP)?", "which persons did ($x | WrittenWork_NP) illustrate?", "which persons illustrate ($x | WrittenWork_NP)?", "which persons illustrated ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "556",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "WrittenWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all written work illustrated by ($x | Person_NP)?", "List all written work illustrated by ($x | Person_NP)?", "What was illustrated by ($x | Person_NP)?", "What were illustrated by ($x | Person_NP)?", "show me the written work that ($x | Person_NP) illustrated", "which written work did ($x | Person_NP) illustrate?", "which written work was illustrated by ($x | Person_NP)?", "which written work were illustrated by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "557",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "WrittenWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many written work are illustrated by ($x | Person_NP)?", "How often did ($x | Person_NP) illustrate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What aired ($x | Film_NP)?", "What airs ($x | Film_NP)?", "What was the broadcaster that aired ($x | Film_NP)?", "which broadcaster aired ($x | Film_NP)?", "which broadcaster airs ($x | Film_NP)?", "which broadcaster does ($x | Film_NP) air?", "which broadcasters air ($x | Film_NP)?", "which broadcasters aired ($x | Film_NP)?", "which broadcasters did ($x | Film_NP) air?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/network> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film aired by ($x | Thing_NP)?", "List all film aired by ($x | Thing_NP)?", "What was aired by ($x | Thing_NP)?", "What were aired by ($x | Thing_NP)?", "show me the film that ($x | Thing_NP) aired", "which film did ($x | Thing_NP) air?", "which film was aired by ($x | Thing_NP)?", "which film were aired by ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/network> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "560",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are aired by ($x | Thing_NP)?", "How often did ($x | Thing_NP) air?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/network> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "561",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What followed ($x | Work_NP)?", "What follows ($x | Work_NP)?", "What was the work that followed ($x | Work_NP)?", "which work does ($x | Work_NP) follow?", "which work followed ($x | Work_NP)?", "which work follows ($x | Work_NP)?", "which works did ($x | Work_NP) follow?", "which works follow ($x | Work_NP)?", "which works followed ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works followed by ($x | Work_NP)?", "List all works followed by ($x | Work_NP)?", "What was followed by ($x | Work_NP)?", "What were followed by ($x | Work_NP)?", "show me the work that ($x | Work_NP) followed", "which work did ($x | Work_NP) follow?", "which work was followed by ($x | Work_NP)?", "which works did ($x | Work_NP) follow?", "which works were followed by ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are followed by ($x | Work_NP)?", "How often did ($x | Work_NP) follow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "564",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What followed ($x | Album_NP)?", "What follows ($x | Album_NP)?", "What was the album that followed ($x | Album_NP)?", "which album does ($x | Album_NP) follow?", "which album followed ($x | Album_NP)?", "which album follows ($x | Album_NP)?", "which albums did ($x | Album_NP) follow?", "which albums follow ($x | Album_NP)?", "which albums followed ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nextTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "565",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums followed by ($x | Album_NP)?", "List all albums followed by ($x | Album_NP)?", "What was followed by ($x | Album_NP)?", "What were followed by ($x | Album_NP)?", "show me the album that ($x | Album_NP) followed", "which album did ($x | Album_NP) follow?", "which album was followed by ($x | Album_NP)?", "which albums did ($x | Album_NP) follow?", "which albums were followed by ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nextTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are followed by ($x | Album_NP)?", "How often did ($x | Album_NP) follow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nextTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who designed the ($x | Software_NP)?", "Who designs ($x | Software_NP)?", "Who was the person that designed ($x | Software_NP)?", "which person designed ($x | Software_NP)?", "which person designs ($x | Software_NP)?", "which person does ($x | Software_NP) design?", "which persons design ($x | Software_NP)?", "which persons designed ($x | Software_NP)?", "which persons did ($x | Software_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares designed by ($x | Person_NP)?", "List all softwares designed by ($x | Person_NP)?", "What was designed by ($x | Person_NP)?", "What were designed by ($x | Person_NP)?", "show me the software that ($x | Person_NP) designed", "which software did ($x | Person_NP) design?", "which software was designed by ($x | Person_NP)?", "which softwares did ($x | Person_NP) design?", "which softwares were designed by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are designed by ($x | Person_NP)?", "How often did ($x | Person_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "570",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did ($x | Film_NP) cost?", "How much does ($x | Film_NP) cost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "571",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which film costed by ($x | Number_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are costed by ($x | Number_NP)?", "How often did ($x | Number_NP) cost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who designed the ($x | Building_NP)?", "Who designs ($x | Building_NP)?", "Who was the person that designed ($x | Building_NP)?", "which person designed ($x | Building_NP)?", "which person designs ($x | Building_NP)?", "which person does ($x | Building_NP) design?", "which persons design ($x | Building_NP)?", "which persons designed ($x | Building_NP)?", "which persons did ($x | Building_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "574",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Building",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all dbo:Buildings designed by ($x | Person_NP)?", "List all dbo:Buildings designed by ($x | Person_NP)?", "What was designed by ($x | Person_NP)?", "What were designed by ($x | Person_NP)?", "show me the Building that ($x | Person_NP) designed", "which Building did ($x | Person_NP) design?", "which Building was designed by ($x | Person_NP)?", "which dbo:Buildings did ($x | Person_NP) design?", "which dbo:Buildings were designed by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Building",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many dbo:Buildings are designed by ($x | Person_NP)?", "How often did ($x | Person_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "576",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | Work_NP)?", "Who writes ($x | Work_NP)?", "Who wrote the ($x | Work_NP)?", "Who wrote the song ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works wrote by ($x | Person_NP)?", "List all works wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the work that ($x | Person_NP) wrote", "which work did ($x | Person_NP) write?", "which work was wrote by ($x | Person_NP)?", "which works did ($x | Person_NP) write?", "which works were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "579",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who compose the soundtrack for ($x | Film_NP)?", "Who was the person that compose the soundtrack for ($x | Film_NP)?", "which person compose the soundtrack for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the soundtrack for?", "which persons compose the soundtrack for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the soundtrack for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "580",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film compose the soundtrack for by ($x | Person_NP)?", "List all film compose the soundtrack for by ($x | Person_NP)?", "What was compose the soundtrack for by ($x | Person_NP)?", "What were compose the soundtrack for by ($x | Person_NP)?", "show me the film that ($x | Person_NP) compose the soundtrack for", "which film did ($x | Person_NP) compose the soundtrack for?", "which film was compose the soundtrack for by ($x | Person_NP)?", "which film were compose the soundtrack for by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are compose the soundtrack for by ($x | Person_NP)?", "How often did ($x | Person_NP) compose the soundtrack for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Pope",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Agent_NP)?", "Who founds ($x | Agent_NP)?", "Who was the pope that founded ($x | Agent_NP)?", "Whom is ($x | Agent_NP) found?", "Whom was ($x | Agent_NP) found?", "which pope founded ($x | Agent_NP)?", "which pope founds ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Pope_NP) founded by?", "Who was founded by ($x | Pope_NP)?", "Who were founded by ($x | Pope_NP)?", "Whom did ($x | Agent_NP) found?", "which agent was founded by ($x | Pope_NP)?", "which agents were founded by ($x | Pope_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many agents are founded by ($x | Pope_NP)?", "How often did ($x | Pope_NP) found?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "585",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who developed ($x | VideoGame_NP)?", "Who develops ($x | VideoGame_NP)?", "Who was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "586",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by ($x | Agent_NP)?", "List all video games developed by ($x | Agent_NP)?", "What was developed by ($x | Agent_NP)?", "What were developed by ($x | Agent_NP)?", "show me the video game that ($x | Agent_NP) developed", "which video game did ($x | Agent_NP) develop?", "which video game was developed by ($x | Agent_NP)?", "which video games did ($x | Agent_NP) develop?", "which video games were developed by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are developed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) develop?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who created ($x | TelevisionShow_NP)?", "Who creates ($x | TelevisionShow_NP)?", "Who was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "589",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by ($x | Agent_NP)?", "List all television shows created by ($x | Agent_NP)?", "What was created by ($x | Agent_NP)?", "What were created by ($x | Agent_NP)?", "show me the television show that ($x | Agent_NP) created", "which television show did ($x | Agent_NP) create?", "which television show was created by ($x | Agent_NP)?", "which television shows did ($x | Agent_NP) create?", "which television shows were created by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are created by ($x | Agent_NP)?", "How often did ($x | Agent_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who created ($x | Book_NP)?", "Who creates ($x | Book_NP)?", "Who was the person that created ($x | Book_NP)?", "which person created ($x | Book_NP)?", "which person creates ($x | Book_NP)?", "which person does ($x | Book_NP) create?", "which persons create ($x | Book_NP)?", "which persons created ($x | Book_NP)?", "which persons did ($x | Book_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books created by ($x | Person_NP)?", "List all books created by ($x | Person_NP)?", "What was created by ($x | Person_NP)?", "What were created by ($x | Person_NP)?", "show me the book that ($x | Person_NP) created", "which book did ($x | Person_NP) create?", "which book was created by ($x | Person_NP)?", "which books did ($x | Person_NP) create?", "which books were created by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "594",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who compose the music for ($x | Film_NP)?", "Who was the person that compose the music for ($x | Film_NP)?", "which person compose the music for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the music for?", "which persons compose the music for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the music for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film compose the music for by ($x | Person_NP)?", "List all film compose the music for by ($x | Person_NP)?", "What was compose the music for by ($x | Person_NP)?", "What were compose the music for by ($x | Person_NP)?", "show me the film that ($x | Person_NP) compose the music for", "which film did ($x | Person_NP) compose the music for?", "which film was compose the music for by ($x | Person_NP)?", "which film were compose the music for by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are compose the music for by ($x | Person_NP)?", "How often did ($x | Person_NP) compose the music for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "597",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What called ($x | Person_NP)?", "What calls ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "598",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons called  ($x | Thing_NP)?", "List all persons called  ($x | Thing_NP)?", "Who was called  ($x | Thing_NP)?", "Who were called  ($x | Thing_NP)?", "show me the person that ($x | Thing_NP) called", "which person did ($x | Thing_NP) call?", "which person was called  ($x | Thing_NP)?", "which persons did ($x | Thing_NP) call?", "which persons were called  ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are called  ($x | Thing_NP)?", "How often did ($x | Thing_NP) call?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who owned ($x | Airport_NP)?", "Who owns ($x | Airport_NP)?", "Who was the agent that owned ($x | Airport_NP)?", "which agent does ($x | Airport_NP) own?", "which agent owned ($x | Airport_NP)?", "which agent owns ($x | Airport_NP)?", "which agents did ($x | Airport_NP) own?", "which agents own ($x | Airport_NP)?", "which agents owned ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports owned by ($x | Agent_NP)?", "List all airports owned by ($x | Agent_NP)?", "What was owned by ($x | Agent_NP)?", "What were owned by ($x | Agent_NP)?", "show me the airport that ($x | Agent_NP) owned", "which airport did ($x | Agent_NP) own?", "which airport was owned by ($x | Agent_NP)?", "which airports did ($x | Agent_NP) own?", "which airports were owned by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are owned by ($x | Agent_NP)?", "How often did ($x | Agent_NP) own?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "603",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Who was the politician that preceded ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/predecessor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "604",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Politician_NP) preceded by?", "Who was preceded by ($x | Politician_NP)?", "Who were preceded by ($x | Politician_NP)?", "Whom did ($x | Politician_NP) precede?", "which politician was preceded by ($x | Politician_NP)?", "which politicians were preceded by ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/predecessor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are preceded by ($x | Politician_NP)?", "How often did ($x | Politician_NP) precede?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/predecessor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that won ($x | Work_NP)?", "Who wins ($x | Work_NP)?", "Who won ($x | Work_NP)?", "which person does ($x | Work_NP) win?", "which person wins ($x | Work_NP)?", "which person won ($x | Work_NP)?", "which persons did ($x | Work_NP) win?", "which persons win ($x | Work_NP)?", "which persons won ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "607",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works won by ($x | Person_NP)?", "List all works won by ($x | Person_NP)?", "What was won by ($x | Person_NP)?", "What were won by ($x | Person_NP)?", "show me the work that ($x | Person_NP) won", "which work did ($x | Person_NP) win?", "which work was won by ($x | Person_NP)?", "which works did ($x | Person_NP) win?", "which works were won by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are won by ($x | Person_NP)?", "How often did ($x | Person_NP) win?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Pope",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the pope that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which pope founded ($x | Organisation_NP)?", "which pope founds ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Pope_NP) founded by?", "Who was founded by ($x | Pope_NP)?", "Who were founded by ($x | Pope_NP)?", "Whom did ($x | Organisation_NP) found?", "which organisation was founded by ($x | Pope_NP)?", "which organisations were founded by ($x | Pope_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organisations are founded by ($x | Pope_NP)?", "How often did ($x | Pope_NP) found?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "612",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who played ($x | Film_NP)?", "Who plays ($x | Film_NP)?", "Who was the person that played ($x | Film_NP)?", "which person does ($x | Film_NP) play?", "which person played ($x | Film_NP)?", "which person plays ($x | Film_NP)?", "which persons did ($x | Film_NP) play?", "which persons play ($x | Film_NP)?", "which persons played ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "613",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film played by ($x | Person_NP)?", "List all film played by ($x | Person_NP)?", "What was played by ($x | Person_NP)?", "What were played by ($x | Person_NP)?", "show me the film that ($x | Person_NP) played", "which film did ($x | Person_NP) play?", "which film was played by ($x | Person_NP)?", "which film were played by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are played by ($x | Person_NP)?", "How often did ($x | Person_NP) play?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who played ($x | FictionalCharacter_NP)?", "Who plays ($x | FictionalCharacter_NP)?", "Who was the person that played ($x | FictionalCharacter_NP)?", "Whom is ($x | FictionalCharacter_NP) play?", "Whom was ($x | FictionalCharacter_NP) play?", "which person played ($x | FictionalCharacter_NP)?", "which person plays ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "616",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) played by?", "Who was played by ($x | Person_NP)?", "Who were played by ($x | Person_NP)?", "Whom did ($x | FictionalCharacter_NP) play?", "which fictional character was played by ($x | Person_NP)?", "which fictional characters were played by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many fictional characters are played by ($x | Person_NP)?", "How often did ($x | Person_NP) play?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "618",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | MusicalWork_NP)?", "Who writes ($x | MusicalWork_NP)?", "Who wrote ($x | MusicalWork_NP)?", "which person does ($x | MusicalWork_NP) write?", "which person writes ($x | MusicalWork_NP)?", "which person wrote ($x | MusicalWork_NP)?", "which persons did ($x | MusicalWork_NP) write?", "which persons write ($x | MusicalWork_NP)?", "which persons wrote ($x | MusicalWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "MusicalWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musical works wrote by ($x | Person_NP)?", "List all musical works wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the musical work that ($x | Person_NP) wrote", "which musical work did ($x | Person_NP) write?", "which musical work was wrote by ($x | Person_NP)?", "which musical works did ($x | Person_NP) write?", "which musical works were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "MusicalWork",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musical works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "621",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who composed ($x | Work_NP)?", "Who composes ($x | Work_NP)?", "Who was the person that composed ($x | Work_NP)?", "which person composed ($x | Work_NP)?", "which person composes ($x | Work_NP)?", "which person does ($x | Work_NP) compose?", "which persons compose ($x | Work_NP)?", "which persons composed ($x | Work_NP)?", "which persons did ($x | Work_NP) compose?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "622",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works  by ($x | Person_NP)?", "List all works  by ($x | Person_NP)?", "What was  by ($x | Person_NP)?", "What were  by ($x | Person_NP)?", "show me the work that ($x | Person_NP) composed", "which work did ($x | Person_NP) compose?", "which work was  by ($x | Person_NP)?", "which works did ($x | Person_NP) compose?", "which works were  by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are  by ($x | Person_NP)?", "How often did ($x | Person_NP) compose?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who published ($x | Work_NP)?", "Who publishes ($x | Work_NP)?", "Who was the agent that published ($x | Work_NP)?", "which agent does ($x | Work_NP) publish?", "which agent published ($x | Work_NP)?", "which agent publishes ($x | Work_NP)?", "which agents did ($x | Work_NP) publish?", "which agents publish ($x | Work_NP)?", "which agents published ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works published by ($x | Agent_NP)?", "List all works published by ($x | Agent_NP)?", "What was published by ($x | Agent_NP)?", "What were published by ($x | Agent_NP)?", "show me the work that ($x | Agent_NP) published", "which work did ($x | Agent_NP) publish?", "which work was published by ($x | Agent_NP)?", "which works did ($x | Agent_NP) publish?", "which works were published by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are published by ($x | Agent_NP)?", "How often did ($x | Agent_NP) publish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "627",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Publisher",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What published ($x | Book_NP)?", "What publishes ($x | Book_NP)?", "What was the publisher that published ($x | Book_NP)?", "which publisher does ($x | Book_NP) publish?", "which publisher published ($x | Book_NP)?", "which publisher publishes ($x | Book_NP)?", "which publishers did ($x | Book_NP) publish?", "which publishers publish ($x | Book_NP)?", "which publishers published ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "628",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books published by ($x | Publisher_NP)?", "List all books published by ($x | Publisher_NP)?", "What was published by ($x | Publisher_NP)?", "What were published by ($x | Publisher_NP)?", "show me the book that ($x | Publisher_NP) published", "which book did ($x | Publisher_NP) publish?", "which book was published by ($x | Publisher_NP)?", "which books did ($x | Publisher_NP) publish?", "which books were published by ($x | Publisher_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are published by ($x | Publisher_NP)?", "How often did ($x | Publisher_NP) publish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "River",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What drained ($x | BodyOfWater_NP)?", "What drains ($x | BodyOfWater_NP)?", "What was the river that drained ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) drain?", "which river drained ($x | BodyOfWater_NP)?", "which river drains ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) drain?", "which rivers drain ($x | BodyOfWater_NP)?", "which rivers drained ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/outflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "631",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drained by ($x | River_NP)?", "List all rivers drained by ($x | River_NP)?", "What was drained by ($x | River_NP)?", "What were drained by ($x | River_NP)?", "show me the river that ($x | River_NP) drained", "which river did ($x | River_NP) drain?", "which river was drained by ($x | River_NP)?", "which rivers did ($x | River_NP) drain?", "which rivers were drained by ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/outflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers are drained by ($x | River_NP)?", "How often did ($x | River_NP) drain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/outflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "633",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | Song_NP)?", "Who writes ($x | Song_NP)?", "Who wrote ($x | Song_NP)?", "which person does ($x | Song_NP) write?", "which person writes ($x | Song_NP)?", "which person wrote ($x | Song_NP)?", "which persons did ($x | Song_NP) write?", "which persons write ($x | Song_NP)?", "which persons wrote ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all songs wrote by ($x | Person_NP)?", "List all songs wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the song that ($x | Person_NP) wrote", "which song did ($x | Person_NP) write?", "which song was wrote by ($x | Person_NP)?", "which songs did ($x | Person_NP) write?", "which songs were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many songs are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "636",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired ($x | Person_NP)?", "Who inspires ($x | Person_NP)?", "Who was the person that inspired ($x | Person_NP)?", "Whom is ($x | Person_NP) inspire?", "Whom was ($x | Person_NP) inspire?", "which person inspired ($x | Person_NP)?", "which person inspires ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "637",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) inspired by?", "Who was inspired by ($x | Person_NP)?", "Who were inspired by ($x | Person_NP)?", "Whom did ($x | Person_NP) inspire?", "which person was inspired by ($x | Person_NP)?", "which persons were inspired by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are inspired by ($x | Person_NP)?", "How often did ($x | Person_NP) inspire?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who painted ($x | Work_NP)?", "Who paints ($x | Work_NP)?", "Who was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by ($x | Person_NP)?", "List all works painted by ($x | Person_NP)?", "What was painted by ($x | Person_NP)?", "What were painted by ($x | Person_NP)?", "show me the work that ($x | Person_NP) painted", "which work did ($x | Person_NP) paint?", "which work was painted by ($x | Person_NP)?", "which works did ($x | Person_NP) paint?", "which works were painted by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are painted by ($x | Person_NP)?", "How often did ($x | Person_NP) paint?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "642",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who operated ($x | Airport_NP)?", "Who operates ($x | Airport_NP)?", "Who was the organisation that operated ($x | Airport_NP)?", "which organisation does ($x | Airport_NP) operate?", "which organisation operated ($x | Airport_NP)?", "which organisation operates ($x | Airport_NP)?", "which organisations did ($x | Airport_NP) operate?", "which organisations operate ($x | Airport_NP)?", "which organisations operated ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports designed by ($x | Organisation_NP)?", "List all airports designed by ($x | Organisation_NP)?", "What was designed by ($x | Organisation_NP)?", "What were designed by ($x | Organisation_NP)?", "show me the airport that ($x | Organisation_NP) operated", "which airport did ($x | Organisation_NP) operate?", "which airport was designed by ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) operate?", "which airports were designed by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are designed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) operate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "645",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What operated ($x | Organisation_NP)?", "What operates ($x | Organisation_NP)?", "What was the launch pad that operated ($x | Organisation_NP)?", "which launch pad does ($x | Organisation_NP) operate?", "which launch pad operated ($x | Organisation_NP)?", "which launch pad operates ($x | Organisation_NP)?", "which launch pads did ($x | Organisation_NP) operate?", "which launch pads operate ($x | Organisation_NP)?", "which launch pads operated ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "646",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organisations designed by ($x | LaunchPad_NP)?", "List all organisations designed by ($x | LaunchPad_NP)?", "Who was designed by ($x | LaunchPad_NP)?", "Who were designed by ($x | LaunchPad_NP)?", "show me the organisation that ($x | LaunchPad_NP) operated", "which organisation did ($x | LaunchPad_NP) operate?", "which organisation was designed by ($x | LaunchPad_NP)?", "which organisations did ($x | LaunchPad_NP) operate?", "which organisations were designed by ($x | LaunchPad_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organisations are designed by ($x | LaunchPad_NP)?", "How often did ($x | LaunchPad_NP) operate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Architect",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who designed the ($x | ArchitecturalStructure_NP)?", "Who designs ($x | ArchitecturalStructure_NP)?", "Who was the architect that designed ($x | ArchitecturalStructure_NP)?", "which architect designed ($x | ArchitecturalStructure_NP)?", "which architect designs ($x | ArchitecturalStructure_NP)?", "which architect does ($x | ArchitecturalStructure_NP) design?", "which architects design ($x | ArchitecturalStructure_NP)?", "which architects designed ($x | ArchitecturalStructure_NP)?", "which architects did ($x | ArchitecturalStructure_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "649",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures designed by ($x | Architect_NP)?", "List all ArchitecturalStructures designed by ($x | Architect_NP)?", "What was designed by ($x | Architect_NP)?", "What were designed by ($x | Architect_NP)?", "show me the ArchitecturalStructure that ($x | Architect_NP) designed", "which ArchitecturalStructure did ($x | Architect_NP) design?", "which ArchitecturalStructure was designed by ($x | Architect_NP)?", "which ArchitecturalStructures did ($x | Architect_NP) design?", "which ArchitecturalStructures were designed by ($x | Architect_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are designed by ($x | Architect_NP)?", "How often did ($x | Architect_NP) design?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who operated ($x | Airport_NP)?", "Who operates ($x | Airport_NP)?", "Who was the organisation that operated ($x | Airport_NP)?", "which organisation does ($x | Airport_NP) operate?", "which organisation operated ($x | Airport_NP)?", "which organisation operates ($x | Airport_NP)?", "which organisations did ($x | Airport_NP) operate?", "which organisations operate ($x | Airport_NP)?", "which organisations operated ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports operated by ($x | Organisation_NP)?", "List all airports operated by ($x | Organisation_NP)?", "What was operated by ($x | Organisation_NP)?", "What were operated by ($x | Organisation_NP)?", "show me the airport that ($x | Organisation_NP) operated", "which airport did ($x | Organisation_NP) operate?", "which airport was operated by ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) operate?", "which airports were operated by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are operated by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) operate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "654",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the agent that wrote ($x | Book_NP)?", "Who writes ($x | Book_NP)?", "Who wrote ($x | Book_NP)?", "which agent does ($x | Book_NP) write?", "which agent writes ($x | Book_NP)?", "which agent wrote ($x | Book_NP)?", "which agents did ($x | Book_NP) write?", "which agents write ($x | Book_NP)?", "which agents wrote ($x | Book_NP)?", "Who was the agent that wrote the book ($x | Book_NP)?", "Who writes the book ($x | Book_NP)?", "Who wrote the book ($x | Book_NP)?", "which agent writes the book ($x | Book_NP)?", "which agent wrote the book ($x | Book_NP)?", "which agents did ($x | Book_NP) write?", "which agents write the book ($x | Book_NP)?", "which agents wrote the book ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books wrote by ($x | Agent_NP)?", "List all books wrote by ($x | Agent_NP)?", "What was wrote by ($x | Agent_NP)?", "What were wrote by ($x | Agent_NP)?", "show me the book that ($x | Agent_NP) wrote", "which book did ($x | Agent_NP) write?", "which book was wrote by ($x | Agent_NP)?", "which books did ($x | Agent_NP) write?", "which books were wrote by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are wrote by ($x | Agent_NP)?", "How often did ($x | Agent_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "657",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who distributed ($x | Film_NP)?", "Who distributes ($x | Film_NP)?", "Who was the organisation that distributed ($x | Film_NP)?", "which organisation distributed ($x | Film_NP)?", "which organisation distributes ($x | Film_NP)?", "which organisation does ($x | Film_NP) distribute?", "which organisations did ($x | Film_NP) distribute?", "which organisations distribute ($x | Film_NP)?", "which organisations distributed ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "658",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film distributed by ($x | Organisation_NP)?", "List all film distributed by ($x | Organisation_NP)?", "What was distributed by ($x | Organisation_NP)?", "What were distributed by ($x | Organisation_NP)?", "show me the film that ($x | Organisation_NP) distributed", "which film did ($x | Organisation_NP) distribute?", "which film was distributed by ($x | Organisation_NP)?", "which film were distributed by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are distributed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) distribute?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who distributed ($x | TelevisionShow_NP)?", "Who distributes ($x | TelevisionShow_NP)?", "Who was the organisation that distributed ($x | TelevisionShow_NP)?", "which organisation distributed ($x | TelevisionShow_NP)?", "which organisation distributes ($x | TelevisionShow_NP)?", "which organisation does ($x | TelevisionShow_NP) distribute?", "which organisations did ($x | TelevisionShow_NP) distribute?", "which organisations distribute ($x | TelevisionShow_NP)?", "which organisations distributed ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows distributed by ($x | Organisation_NP)?", "List all television shows distributed by ($x | Organisation_NP)?", "What was distributed by ($x | Organisation_NP)?", "What were distributed by ($x | Organisation_NP)?", "show me the television show that ($x | Organisation_NP) distributed", "which television show did ($x | Organisation_NP) distribute?", "which television show was distributed by ($x | Organisation_NP)?", "which television shows did ($x | Organisation_NP) distribute?", "which television shows were distributed by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are distributed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) distribute?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "663",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | Work_NP)?", "Who writes ($x | Work_NP)?", "Who wrote ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "664",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works wrote by ($x | Person_NP)?", "List all works wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the work that ($x | Person_NP) wrote", "which work did ($x | Person_NP) write?", "which work was wrote by ($x | Person_NP)?", "which works did ($x | Person_NP) write?", "which works were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who presented ($x | TelevisionShow_NP)?", "Who presents ($x | TelevisionShow_NP)?", "Who was the person that presented ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) present?", "which person presented ($x | TelevisionShow_NP)?", "which person presents ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) present?", "which persons present ($x | TelevisionShow_NP)?", "which persons presented ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "667",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows presented by ($x | Person_NP)?", "List all television shows presented by ($x | Person_NP)?", "What was presented by ($x | Person_NP)?", "What were presented by ($x | Person_NP)?", "show me the television show that ($x | Person_NP) presented", "which television show did ($x | Person_NP) present?", "which television show was presented by ($x | Person_NP)?", "which television shows did ($x | Person_NP) present?", "which television shows were presented by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are presented by ($x | Person_NP)?", "How often did ($x | Person_NP) present?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "669",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "River",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What crossed the ($x | Bridge_NP)?", "What crosses ($x | Bridge_NP)?", "What was the river that crossed ($x | Bridge_NP)?", "which river crossed the ($x | Bridge_NP)?", "which river crosses the ($x | Bridge_NP)?", "which river does the ($x | Bridge_NP) cross?", "which rivers cross the ($x | Bridge_NP)?", "which rivers crossed the ($x | Bridge_NP)?", "which rivers did ($x | Bridge_NP) cross?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all dbo:Bridges crossed by ($x | River_NP)?", "List all dbo:Bridges crossed by ($x | River_NP)?", "What was crossed by ($x | River_NP)?", "What were crossed by ($x | River_NP)?", "show me the Bridge that ($x | River_NP) crossed", "which Bridge did ($x | River_NP) cross?", "which Bridge was crossed by ($x | River_NP)?", "which dbo:Bridges did ($x | River_NP) cross?", "which dbo:Bridges were crossed by ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many dbo:Bridges are crossed by ($x | River_NP)?", "How often did ($x | River_NP) cross?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "672",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What preceded ($x | Album_NP)?", "What precedes ($x | Album_NP)?", "What was the album that preceded ($x | Album_NP)?", "which album does ($x | Album_NP) precede?", "which album preceded ($x | Album_NP)?", "which album precedes ($x | Album_NP)?", "which albums did ($x | Album_NP) precede?", "which albums precede ($x | Album_NP)?", "which albums preceded ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/prevTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "673",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums preceded by ($x | Album_NP)?", "List all albums preceded by ($x | Album_NP)?", "What was preceded by ($x | Album_NP)?", "What were preceded by ($x | Album_NP)?", "show me the album that ($x | Album_NP) preceded", "which album did ($x | Album_NP) precede?", "which album was preceded by ($x | Album_NP)?", "which albums did ($x | Album_NP) precede?", "which albums were preceded by ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/prevTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are preceded by ($x | Album_NP)?", "How often did ($x | Album_NP) precede?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/prevTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/before> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Politician_NP) followed by?", "Who was followed by ($x | Politician_NP)?", "Who were followed by ($x | Politician_NP)?", "Whom did ($x | Politician_NP) follow?", "which politician was followed by ($x | Politician_NP)?", "which politicians were followed by ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/before> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are followed by ($x | Politician_NP)?", "How often did ($x | Politician_NP) follow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/before> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "678",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who leaves ($x | Band_NP)?", "Who left ($x | Band_NP)?", "Who was the person that left ($x | Band_NP)?", "which person does ($x | Band_NP) leave?", "which person leaves ($x | Band_NP)?", "which person left ($x | Band_NP)?", "which persons did ($x | Band_NP) leave?", "which persons leave ($x | Band_NP)?", "which persons left ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "679",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all bands left by ($x | Person_NP)?", "List all bands left by ($x | Person_NP)?", "What was left by ($x | Person_NP)?", "What were left by ($x | Person_NP)?", "show me the band that ($x | Person_NP) left", "which band did ($x | Person_NP) leave?", "which band was left by ($x | Person_NP)?", "which bands did ($x | Person_NP) leave?", "which bands were left by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands are left by ($x | Person_NP)?", "How often did ($x | Person_NP) leave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Website",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who created ($x | Website_NP)?", "Who creates ($x | Website_NP)?", "Who was the person that created ($x | Website_NP)?", "which person created ($x | Website_NP)?", "which person creates ($x | Website_NP)?", "which person does ($x | Website_NP) create?", "which persons create ($x | Website_NP)?", "which persons created ($x | Website_NP)?", "which persons did ($x | Website_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "682",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Websites created by ($x | Person_NP)?", "List all Websites created by ($x | Person_NP)?", "What was created by ($x | Person_NP)?", "What were created by ($x | Person_NP)?", "show me the Website that ($x | Person_NP) created", "which Website did ($x | Person_NP) create?", "which Website was created by ($x | Person_NP)?", "which Websites did ($x | Person_NP) create?", "which Websites were created by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many Websites are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "684",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who produced ($x | Work_NP)?", "Who produces ($x | Work_NP)?", "Who was the person that produced ($x | Work_NP)?", "which person does ($x | Work_NP) produce?", "which person produced ($x | Work_NP)?", "which person produces ($x | Work_NP)?", "which persons did ($x | Work_NP) produce?", "which persons produce ($x | Work_NP)?", "which persons produced ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works produced by ($x | Person_NP)?", "List all works produced by ($x | Person_NP)?", "What was produced by ($x | Person_NP)?", "What were produced by ($x | Person_NP)?", "show me the work that ($x | Person_NP) produced", "which work did ($x | Person_NP) produce?", "which work was produced by ($x | Person_NP)?", "which works did ($x | Person_NP) produce?", "which works were produced by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "687",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who created ($x | Work_NP)?", "Who creates ($x | Work_NP)?", "Who was the person that created ($x | Work_NP)?", "which person created ($x | Work_NP)?", "which person creates ($x | Work_NP)?", "which person does ($x | Work_NP) create?", "which persons create ($x | Work_NP)?", "which persons created ($x | Work_NP)?", "which persons did ($x | Work_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "688",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works created by ($x | Person_NP)?", "List all works created by ($x | Person_NP)?", "What was created by ($x | Person_NP)?", "What were created by ($x | Person_NP)?", "show me the work that ($x | Person_NP) created", "which work did ($x | Person_NP) create?", "which work was created by ($x | Person_NP)?", "which works did ($x | Person_NP) create?", "which works were created by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) founded by?", "Who was founded by ($x | Person_NP)?", "Who were founded by ($x | Person_NP)?", "Whom did ($x | Organisation_NP) found?", "which organisation was founded by ($x | Person_NP)?", "which organisations were founded by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organisations are founded by ($x | Person_NP)?", "How often did ($x | Person_NP) found?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "693",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Athlete",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who managed ($x | SportsTeam_NP)?", "Who manages ($x | SportsTeam_NP)?", "Who was the athlete that managed ($x | SportsTeam_NP)?", "which athlete did ($x | SportsTeam_NP) manage?", "which athlete does ($x | SportsTeam_NP) manage?", "which athlete manage ($x | SportsTeam_NP)?", "which athlete managed ($x | SportsTeam_NP)?", "which athlete manages ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "694",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all sports teams managed by ($x | Athlete_NP)?", "List all sports teams managed by ($x | Athlete_NP)?", "What was managed by ($x | Athlete_NP)?", "What were managed by ($x | Athlete_NP)?", "show me the sports team that ($x | Athlete_NP) managed", "which sports team did ($x | Athlete_NP) manage?", "which sports team was managed by ($x | Athlete_NP)?", "which sports teams did ($x | Athlete_NP) manage?", "which sports teams were managed by ($x | Athlete_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many sports teams are managed by ($x | Athlete_NP)?", "How often did ($x | Athlete_NP) manage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "River",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What joined ($x | BodyOfWater_NP)?", "What joins ($x | BodyOfWater_NP)?", "What was the river that joined ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) join?", "which river joined ($x | BodyOfWater_NP)?", "which river joins ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) join?", "which rivers join ($x | BodyOfWater_NP)?", "which rivers joined ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "697",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers joined by ($x | River_NP)?", "List all rivers joined by ($x | River_NP)?", "What was joined by ($x | River_NP)?", "What were joined by ($x | River_NP)?", "show me the river that ($x | River_NP) joined", "which river did ($x | River_NP) join?", "which river was joined by ($x | River_NP)?", "which rivers did ($x | River_NP) join?", "which rivers were joined by ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers are joined by ($x | River_NP)?", "How often did ($x | River_NP) join?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "699",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who succeeded ($x | Person_NP)?", "Who succeeds ($x | Person_NP)?", "Who was the person that succeeded ($x | Person_NP)?", "Whom is ($x | Person_NP) succeed?", "Whom was ($x | Person_NP) succeed?", "which person succeeded ($x | Person_NP)?", "which person succeeds ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Person_NP) succeeded by?", "Who was succeeded by ($x | Person_NP)?", "Who were succeeded by ($x | Person_NP)?", "Whom did ($x | Person_NP) succeed?", "which person was succeeded by ($x | Person_NP)?", "which persons were succeeded by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are succeeded by ($x | Person_NP)?", "How often did ($x | Person_NP) succeed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "702",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Colour",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "What expressed ($x | Thing_NP)?", "What expresses ($x | Thing_NP)?", "which color expressed ($x | Thing_NP)?", "What color expresses ($x | Thing_NP)?","which color expresses ($x | Thing_NP)?", "which colors express ($x | Thing_NP)?", "which colors expressed ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "703",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all colors expressed by ($x | Colour_NP)?", "List all colors expressed by ($x | Colour_NP)?", "What was expressed by ($x | Colour_NP)?", "What were expressed by ($x | Colour_NP)?", "show me the color that ($x | Colour_NP) expressed", "which color did ($x | Colour_NP) express?", "which color was expressed by ($x | Colour_NP)?", "which colors did ($x | Colour_NP) express?", "which colors were expressed by ($x | Colour_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "Thing",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many colors are expressed by ($x | Colour_NP)?", "How often did ($x | Colour_NP) express?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who starred in ($x | Film_NP)?", "Who starring in ($x | Film_NP)?", "Who was the person that starred in ($x | Film_NP)?", "which person does ($x | Film_NP) starring in?", "which person starred in ($x | Film_NP)?", "which person starring in ($x | Film_NP)?", "which persons did ($x | Film_NP) starring in?", "which persons starred in ($x | Film_NP)?", "which persons starring in ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film starred_in by ($x | Person_NP)?", "List all film starred_in by ($x | Person_NP)?", "What was starred_in by ($x | Person_NP)?", "What were starred_in by ($x | Person_NP)?", "show me the film that ($x | Person_NP) starred in", "which film did ($x | Person_NP) starring in?", "which film was starred_in by ($x | Person_NP)?", "which film were starred_in by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are starred_in by ($x | Person_NP)?", "How often did ($x | Person_NP) starring in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "708",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who produced ($x | Beverage_NP)?", "Who produces ($x | Beverage_NP)?", "Who was the organisation that produced ($x | Beverage_NP)?", "which organisation does ($x | Beverage_NP) produce?", "which organisation produced ($x | Beverage_NP)?", "which organisation produces ($x | Beverage_NP)?", "which organisations did ($x | Beverage_NP) produce?", "which organisations produce ($x | Beverage_NP)?", "which organisations produced ($x | Beverage_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "709",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Beverage",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all beverages produced by ($x | Organisation_NP)?", "List all beverages produced by ($x | Organisation_NP)?", "What was produced by ($x | Organisation_NP)?", "What were produced by ($x | Organisation_NP)?", "show me the beverage that ($x | Organisation_NP) produced", "which beverage did ($x | Organisation_NP) produce?", "which beverage was produced by ($x | Organisation_NP)?", "which beverages did ($x | Organisation_NP) produce?", "which beverages were produced by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Beverage",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many beverages are produced by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) produce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "712",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who was ($x | Politician_NP) followed by?", "Who was followed by ($x | Politician_NP)?", "Who were followed by ($x | Politician_NP)?", "Whom did ($x | Politician_NP) follow?", "which politician was followed by ($x | Politician_NP)?", "which politicians were followed by ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are followed by ($x | Politician_NP)?", "How often did ($x | Politician_NP) follow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "714",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who rented ($x | ArchitecturalStructure_NP)?", "Who rents ($x | ArchitecturalStructure_NP)?", "Who was the organisation that rented ($x | ArchitecturalStructure_NP)?", "which organisation does ($x | ArchitecturalStructure_NP) rent?", "which organisation rented ($x | ArchitecturalStructure_NP)?", "which organisation rents ($x | ArchitecturalStructure_NP)?", "which organisations did ($x | ArchitecturalStructure_NP) rent?", "which organisations rent ($x | ArchitecturalStructure_NP)?", "which organisations rented ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/tenant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures rented by ($x | Organisation_NP)?", "List all ArchitecturalStructures rented by ($x | Organisation_NP)?", "What was rented by ($x | Organisation_NP)?", "What were rented by ($x | Organisation_NP)?", "show me the ArchitecturalStructure that ($x | Organisation_NP) rented", "which ArchitecturalStructure did ($x | Organisation_NP) rent?", "which ArchitecturalStructure was rented by ($x | Organisation_NP)?", "which ArchitecturalStructures did ($x | Organisation_NP) rent?", "which ArchitecturalStructures were rented by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/tenant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are rented by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) rent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/tenant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "717",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who discovered ($x | Planet_NP)?", "Who discovers ($x | Planet_NP)?", "Who was the person that discovered ($x | Planet_NP)?", "which person discovered ($x | Planet_NP)?", "which person discovers ($x | Planet_NP)?", "which person does ($x | Planet_NP) discover?", "which persons did ($x | Planet_NP) discover?", "which persons discover ($x | Planet_NP)?", "which persons discovered ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "718",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all planets discovered by ($x | Person_NP)?", "List all planets discovered by ($x | Person_NP)?", "What was discovered by ($x | Person_NP)?", "What were discovered by ($x | Person_NP)?", "show me the plant that ($x | Person_NP) discovered", "which planets did ($x | Person_NP) discover?", "which planets were discovered by ($x | Person_NP)?", "which plant did ($x | Person_NP) discover?", "which plant was discovered by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many planets are discovered by ($x | Person_NP)?", "How often did ($x | Person_NP) discover?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Company",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who published ($x | VideoGame_NP)?", "Who publishes ($x | VideoGame_NP)?", "Who was the company that published ($x | VideoGame_NP)?", "which company did ($x | VideoGame_NP) publish?", "which company does ($x | VideoGame_NP) publish?", "which company publish ($x | VideoGame_NP)?", "which company published ($x | VideoGame_NP)?", "which company publishes ($x | VideoGame_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games published by ($x | Company_NP)?", "List all video games published by ($x | Company_NP)?", "What was published by ($x | Company_NP)?", "What were published by ($x | Company_NP)?", "show me the video game that ($x | Company_NP) published", "which video game did ($x | Company_NP) publish?", "which video game was published by ($x | Company_NP)?", "which video games did ($x | Company_NP) publish?", "which video games were published by ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are published by ($x | Company_NP)?", "How often did ($x | Company_NP) publish?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "723",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who was the person that wrote ($x | Book_NP)?", "Who writes ($x | Book_NP)?", "Who wrote ($x | Book_NP)?", "which person does ($x | Book_NP) write?", "which person writes ($x | Book_NP)?", "which person wrote ($x | Book_NP)?", "which persons did ($x | Book_NP) write?", "which persons write ($x | Book_NP)?", "which persons wrote ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "724",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books wrote by ($x | Person_NP)?", "List all books wrote by ($x | Person_NP)?", "What was wrote by ($x | Person_NP)?", "What were wrote by ($x | Person_NP)?", "show me the book that ($x | Person_NP) wrote", "which book did ($x | Person_NP) write?", "which book was wrote by ($x | Person_NP)?", "which books did ($x | Person_NP) write?", "which books were wrote by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who produced ($x | TelevisionShow_NP)?", "Who produces ($x | TelevisionShow_NP)?", "Who was the person that produced ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) produce?", "which person produced ($x | TelevisionShow_NP)?", "which person produces ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) produce?", "which persons produce ($x | TelevisionShow_NP)?", "which persons produced ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "727",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows produced by ($x | Person_NP)?", "List all television shows produced by ($x | Person_NP)?", "What was produced by ($x | Person_NP)?", "What were produced by ($x | Person_NP)?", "show me the television show that ($x | Person_NP) produced", "which television show did ($x | Person_NP) produce?", "which television show was produced by ($x | Person_NP)?", "which television shows did ($x | Person_NP) produce?", "which television shows were produced by ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "729",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Actor",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who starred in ($x | Film_NP)?", "Who starring in ($x | Film_NP)?", "Who was the actor that starred in ($x | Film_NP)?", "which actor does ($x | Film_NP) starring in?", "which actor starred in ($x | Film_NP)?", "which actor starring in ($x | Film_NP)?", "which actors did ($x | Film_NP) starring in?", "which actors starred in ($x | Film_NP)?", "which actors starring in ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all film starred_in by ($x | Actor_NP)?", "List all film starred_in by ($x | Actor_NP)?", "What was starred_in by ($x | Actor_NP)?", "What were starred_in by ($x | Actor_NP)?", "show me the film that ($x | Actor_NP) starred in", "which film did ($x | Actor_NP) starring in?", "which film was starred_in by ($x | Actor_NP)?", "which film were starred_in by ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film are starred_in by ($x | Actor_NP)?", "How often did ($x | Actor_NP) starring in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "732",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Magazine",
    "returnType" : "Agent",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who edited ($x | Magazine_NP)?", "Who edits ($x | Magazine_NP)?", "Who was the agent that edited ($x | Magazine_NP)?", "which agent does ($x | Magazine_NP) edit?", "which agent edited ($x | Magazine_NP)?", "which agent edits ($x | Magazine_NP)?", "which agents did ($x | Magazine_NP) edit?", "which agents edit ($x | Magazine_NP)?", "which agents edited ($x | Magazine_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "733",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Magazine",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals edited by ($x | Agent_NP)?", "List all academic journals edited by ($x | Agent_NP)?", "What was edited by ($x | Agent_NP)?", "What were edited by ($x | Agent_NP)?", "show me the academic journal that ($x | Agent_NP) edited", "which academic journal did ($x | Agent_NP) edit?", "which academic journal was edited by ($x | Agent_NP)?", "which academic journals did ($x | Agent_NP) edit?", "which academic journals were edited by ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Magazine",
    "frameType" : "VP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many academic journals are edited by ($x | Agent_NP)?", "How often did ($x | Agent_NP) edit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#precede_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/after> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#precede_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/after> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#Develop_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "738",
    "lexicalEntryUri" : "http://localhost:8080#Develop_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "739",
    "lexicalEntryUri" : "http://localhost:8080#Play_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#Play_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "742",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#design_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "744",
    "lexicalEntryUri" : "http://localhost:8080#design_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#produce_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#produce_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "747",
    "lexicalEntryUri" : "http://localhost:8080#air_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/network> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "748",
    "lexicalEntryUri" : "http://localhost:8080#air_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/network> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#found_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#found_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Pope",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#join_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#join_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "753",
    "lexicalEntryUri" : "http://localhost:8080#win_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "754",
    "lexicalEntryUri" : "http://localhost:8080#win_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Award",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#design_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Building",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#design_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Building",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/designer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "757",
    "lexicalEntryUri" : "http://localhost:8080#precede_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#precede_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#precede_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/predecessor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#precede_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/predecessor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#publish_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "762",
    "lexicalEntryUri" : "http://localhost:8080#publish_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#direct_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#direct_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "765",
    "lexicalEntryUri" : "http://localhost:8080#own_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "766",
    "lexicalEntryUri" : "http://localhost:8080#own_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#train_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Athlete",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/trainer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#train_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Athlete",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/trainer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "769",
    "lexicalEntryUri" : "http://localhost:8080#found_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#found_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#drain_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/outflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#drain_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/outflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#win_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "774",
    "lexicalEntryUri" : "http://localhost:8080#win_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#publish_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#publish_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Publisher",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "777",
    "lexicalEntryUri" : "http://localhost:8080#create_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "778",
    "lexicalEntryUri" : "http://localhost:8080#create_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#own_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#own_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/owner> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "781",
    "lexicalEntryUri" : "http://localhost:8080#crossed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#crossed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "783",
    "lexicalEntryUri" : "http://localhost:8080#Develop_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#Develop_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#inspireed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "786",
    "lexicalEntryUri" : "http://localhost:8080#inspireed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "787",
    "lexicalEntryUri" : "http://localhost:8080#paint_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#paint_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#operate_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "790",
    "lexicalEntryUri" : "http://localhost:8080#operate_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#found_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "792",
    "lexicalEntryUri" : "http://localhost:8080#found_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#follow_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/before> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#follow_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/before> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "795",
    "lexicalEntryUri" : "http://localhost:8080#speak_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "796",
    "lexicalEntryUri" : "http://localhost:8080#speak_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "PopulatedPlace",
    "returnType" : "Language",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#play_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#play_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "799",
    "lexicalEntryUri" : "http://localhost:8080#succeed_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#succeed_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#discover_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#discover_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#cover_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Magazine",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "804",
    "lexicalEntryUri" : "http://localhost:8080#cover_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Magazine",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#live_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "EthnicGroup",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#live_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "EthnicGroup",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "807",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "808",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#costed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#costed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#write_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#write_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "813",
    "lexicalEntryUri" : "http://localhost:8080#win_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "814",
    "lexicalEntryUri" : "http://localhost:8080#win_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#present_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#present_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "817",
    "lexicalEntryUri" : "http://localhost:8080#Compose_for_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#Compose_for_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "819",
    "lexicalEntryUri" : "http://localhost:8080#produce_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#produce_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#write_7ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/allLyrics> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "822",
    "lexicalEntryUri" : "http://localhost:8080#write_7ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/allLyrics> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "823",
    "lexicalEntryUri" : "http://localhost:8080#create_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#create_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#breed_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/breeder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#breed_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/breeder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#support_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ideology> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "828",
    "lexicalEntryUri" : "http://localhost:8080#support_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Thing",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ideology> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "829",
    "lexicalEntryUri" : "http://localhost:8080#produce_5ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Beverage",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#produce_5ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Beverage",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#expressed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Colour",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "832",
    "lexicalEntryUri" : "http://localhost:8080#expressed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Colour",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#serve_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "834",
    "lexicalEntryUri" : "http://localhost:8080#serve_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#write_6ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#write_6ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#operate_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#operate_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#distribute_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "840",
    "lexicalEntryUri" : "http://localhost:8080#distribute_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/distributor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#rent_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/tenant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#rent_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/tenant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "843",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "844",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#speak_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#speak_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "847",
    "lexicalEntryUri" : "http://localhost:8080#create_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#create_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "849",
    "lexicalEntryUri" : "http://localhost:8080#write_5ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#write_5ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#follow_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "852",
    "lexicalEntryUri" : "http://localhost:8080#follow_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Work",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "853",
    "lexicalEntryUri" : "http://localhost:8080#follow_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nextTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#follow_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nextTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#write_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "MusicalWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#write_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "MusicalWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#discover_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "858",
    "lexicalEntryUri" : "http://localhost:8080#discover_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "859",
    "lexicalEntryUri" : "http://localhost:8080#call_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#call_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#design_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "862",
    "lexicalEntryUri" : "http://localhost:8080#design_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#leave_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "864",
    "lexicalEntryUri" : "http://localhost:8080#leave_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#program_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/programmer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#program_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Software",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/programmer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#precede_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/prevTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#precede_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Album",
    "returnType" : "Album",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/prevTitle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#star_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#star_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Actor",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#manage_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#manage_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#found_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#found_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#lead_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#lead_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#write_8ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#write_8ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#direct_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#direct_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#write_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#write_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#create_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#create_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#produce_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#produce_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/producer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#Publish_3ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#Publish_3ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#produce_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#produce_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#control_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/controlledby> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#control_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Airport",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/controlledby> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#compose_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#compose_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#publish_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#publish_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#perform_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "MusicalWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#perform_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "MusicalWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#write_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#write_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#follow_4ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#follow_4ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Politician",
    "returnType" : "Politician",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#edit_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Magazine",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#edit_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Magazine",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#illustrate_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "WrittenWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#illustrate_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "WrittenWork",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#marryed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#marryed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#paint_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#paint_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#maintain_1ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#maintain_1ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#Develop_2ed",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#Develop_2ed",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Bridge",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest Bridge in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is the ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#small_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the smallest country in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#small_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ "Who is the oldest person of ($x | Person_NP)?", "Who is the oldest?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?objOfProp WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?objOfProp . ?objOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Person",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How old is ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Lighthouse",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest Lighthouse in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is the ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "BasketballPlayer",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest basketball player in the world?","Who is the tallest basketball player?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "928",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BasketballPlayer",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | BasketballPlayer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Politician",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest politician in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "931",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the highest mountain in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "932",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is the ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Stadium",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the biggest stadium in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Stadium",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How big is ($x | Stadium_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "935",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the highest ArchitecturalStructure in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is the ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "937",
    "lexicalEntryUri" : "http://localhost:8080#Young_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "DartsPlayer",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the youngest DartsPlayer in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#Young_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "DartsPlayer",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How young is ($x | DartsPlayer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#tall_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Model",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who is the tallest model in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "940",
    "lexicalEntryUri" : "http://localhost:8080#tall_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "941",
    "lexicalEntryUri" : "http://localhost:8080#short",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "BodyOfWater",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the shortest river in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/length> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#short",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How short is ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/length> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#small_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the smallest country in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#small_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How small is ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#tall_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the tallest mountain in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "946",
    "lexicalEntryUri" : "http://localhost:8080#tall_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "947",
    "lexicalEntryUri" : "http://localhost:8080#large_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the largest country in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#large_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "What is the largest country in the world?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "950",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How large is ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Building",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What is the highest Building in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "952",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is the ($x | Building_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#long",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "BodyOfWater",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What is the longest river in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/length> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#long",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "Country",
    "frameType" : "AG",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How long is ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/length> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "955",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryConflict_NP) fought?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/combatant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "956",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) fight in?", "What fights in ($x | Thing_NP)?", "What fought in ($x | Thing_NP)?", "Where does ($x | Thing_NP) fight?", "which military conflict fights in ($x | Thing_NP)?", "which military conflicts fight in ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/combatant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military conflicts fight in ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/combatant> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was buried in ($x | City_NP)?", "which person was buried in ($x | City_NP)?", "which persons were buried in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/burialPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "961",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Artist_NP) associated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Artist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Thing_NP) associate?", "Who associated with ($x | Thing_NP)?", "Who does ($x | Thing_NP) associate with?", "which artist associated with ($x | Thing_NP)?", "which artists associate with ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Artist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artists associate with ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/movement> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "964",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is the ($x | River_NP) started?", "in which countries  ($x | River_NP) start?", "in which countries are ($x | River_NP) started?", "in which country does the ($x | River_NP) start?", "in which country is the ($x | River_NP) started?", "which countries does the ($x | River_NP) start in?", "which country does the ($x | River_NP) start in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "965",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) start in?", "What started in ($x | Country_NP)?", "What starts in ($x | Country_NP)?", "Where does ($x | Country_NP) start?", "which river starts in ($x | Country_NP)?", "which rivers start in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers start in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Organisation_NP) located?", "Where was ($x | Organisation_NP) located?", "in which place did ($x | Organisation_NP) locate?", "which place does ($x | Organisation_NP) locate in?", "which place was ($x | Organisation_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "968",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was located in ($x | Place_NP)?", "which organisation was located in ($x | Place_NP)?", "which organisations were located in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Agent_NP) belonged?", "to which politicalParties  ($x | Agent_NP) belong?", "to which politicalParties are ($x | Agent_NP) belonged?", "to which politicalParty does ($x | Agent_NP) belong?", "to which politicalParty is ($x | Agent_NP) belonged?", "which politicalParties does ($x | Agent_NP) belong to?", "which politicalParty does ($x | Agent_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "Agent",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | PoliticalParty_NP) belong?", "Who belonged to ($x | PoliticalParty_NP)?", "Who belongs to ($x | PoliticalParty_NP)?", "Who does ($x | PoliticalParty_NP) belong to?", "which agent belongs to ($x | PoliticalParty_NP)?", "which agents belong to ($x | PoliticalParty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "Agent",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many agents belong to ($x | PoliticalParty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "973",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) die from?", "What does ($x | Person_NP) die from?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "974",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is died from ($x | Thing_NP)?", "Who was died from ($x | Thing_NP)?", "which person is died from ($x | Thing_NP)?", "which person was died from ($x | Thing_NP)?", "which persons are died from ($x | Thing_NP)?", "which persons were died from ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) die from?", "What does ($x | Person_NP) die from?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "977",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is died from ($x | Thing_NP)?", "Who was died from ($x | Thing_NP)?", "which person is died from ($x | Thing_NP)?", "which person was died from ($x | Thing_NP)?", "which persons are died from ($x | Thing_NP)?", "which persons were died from ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "979",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "PopulatedPlace",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "which populated place does ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) end in?", "What ended in ($x | PopulatedPlace_NP)?", "What ends in ($x | PopulatedPlace_NP)?", "Where does ($x | PopulatedPlace_NP) end?", "which river ends in ($x | PopulatedPlace_NP)?", "which rivers end in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers end in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "982",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "983",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | Country_NP)?", "which actor was born in ($x | Country_NP)?", "which actors were born in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Play",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which play does ($x | Person_NP) play?", "in which play is ($x | Person_NP) played?", "in which plays  ($x | Person_NP) play?", "in which plays are ($x | Person_NP) played?", "which play does ($x | Person_NP) play in?", "which plays does ($x | Person_NP) play in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Play",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Play_NP) play?", "Who does ($x | Play_NP) play in?", "Who played in ($x | Play_NP)?", "Who plays in ($x | Play_NP)?", "which person plays in ($x | Play_NP)?", "which persons play in ($x | Play_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Play",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons play in ($x | Play_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "988",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | LaunchPad_NP) operated?", "by which organisation does ($x | LaunchPad_NP) operate?", "by which organisation is ($x | LaunchPad_NP) operated?", "by which organisations  ($x | LaunchPad_NP) operate?", "by which organisations are ($x | LaunchPad_NP) operated?", "which organisation does ($x | LaunchPad_NP) operate by?", "which organisations does ($x | LaunchPad_NP) operate by?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "989",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Organisation_NP) operate by?", "What operated by ($x | Organisation_NP)?", "What operates by ($x | Organisation_NP)?", "Give me all launch pads operated by ($x | Organisation_NP).","Where does ($x | Organisation_NP) operate?", "which launch pad operates by ($x | Organisation_NP)?", "which launch pads operate by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many launch pads operate by ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Single",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Single_NP) lived?", "in which cities  ($x | Single_NP) live?", "in which cities are ($x | Single_NP) lived?", "in which city does ($x | Single_NP) live?", "in which city is ($x | Single_NP) lived?", "which cities does ($x | Single_NP) live in?", "which city does ($x | Single_NP) live in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "992",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Single",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) live in?", "What lived in ($x | City_NP)?", "What lives in ($x | City_NP)?", "Where does ($x | City_NP) live?", "which person lives in ($x | City_NP)?", "which persons live in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Single",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons live in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "994",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What discontinued in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "997",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "998",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What destroyed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Article",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Article_NP) publish?", "When was ($x | Article_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Article",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Article",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1003",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is the ($x | River_NP) flown?", "through which countries the ($x | River_NP) flow?", "through which countries does the ($x | River_NP) flow?","through which countries are the ($x | River_NP) flown?", "through which country does the ($x | River_NP) flow?", "through which country is the ($x | River_NP) flown?", "which countries does the ($x | River_NP) flow through?", "which country does the ($x | River_NP) flow through?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1004",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) flow through?", "What flowed through ($x | Country_NP)?", "What flows through ($x | Country_NP)?", "Where does ($x | Country_NP) flow?", "which river flows through ($x | Country_NP)?", "which rivers flow through ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers flow through ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1007",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What opened in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Event",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Event_NP) commence?", "When was ($x | Event_NP) commenced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Event",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What commenced on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Event",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1012",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which place did ($x | Person_NP) born?", "which place does ($x | Person_NP) born in?", "which place was ($x | Person_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | Place_NP)?", "which person was born in ($x | Place_NP)?", "which persons were born in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1015",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1016",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which ArchitecturalStructure locates in ($x | Location_NP)?", "which ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1019",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which ArchitecturalStructure locates in ($x | Location_NP)?", "which ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Work_NP) complete?", "When was ($x | Work_NP) completed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What completed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1024",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryPerson",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryPerson_NP) participated?", "in which military conflict does ($x | MilitaryPerson_NP) participate?", "in which military conflict is ($x | MilitaryPerson_NP) participated?", "in which military conflicts  ($x | MilitaryPerson_NP) participate?", "in which military conflicts are ($x | MilitaryPerson_NP) participated?", "which military conflict does ($x | MilitaryPerson_NP) participate in?", "which military conflicts does ($x | MilitaryPerson_NP) participate in?","In which military conflicts did ($x | MilitaryPerson_NP) participate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1025",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "MilitaryPerson",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | MilitaryConflict_NP) participate?", "Who does ($x | MilitaryConflict_NP) participate in?", "Who participated in ($x | MilitaryConflict_NP)?", "Who participates in ($x | MilitaryConflict_NP)?", "which person participates in ($x | MilitaryConflict_NP)?", "which persons participate in ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "MilitaryPerson",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons participate in ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Scientist_NP) known for?", "What does ($x | Scientist_NP) known for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1028",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryUnit",
    "returnType" : "Scientist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is known for ($x | MilitaryUnit_NP)?", "Who was known for ($x | MilitaryUnit_NP)?", "which scientist is known for ($x | MilitaryUnit_NP)?", "which scientist was known for ($x | MilitaryUnit_NP)?", "which scientists are known for ($x | MilitaryUnit_NP)?", "which scientists were known for ($x | MilitaryUnit_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryUnit",
    "returnType" : "Scientist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1030",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) belonged?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Thing_NP)?", "What belongs to ($x | Thing_NP)?", "What does ($x | Thing_NP) belong to?", "Where does ($x | Thing_NP) belong?", "which software belongs to ($x | Thing_NP)?", "which softwares belong to ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares belong to ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1033",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "EducationalInstitution",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "which educational institution does ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1034",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "EducationalInstitution",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | EducationalInstitution_NP) study?", "Who does ($x | EducationalInstitution_NP) study at?", "Who studied at ($x | EducationalInstitution_NP)?", "Who studies at ($x | EducationalInstitution_NP)?", "which person studies at ($x | EducationalInstitution_NP)?", "which persons study at ($x | EducationalInstitution_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "EducationalInstitution",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons study at ($x | EducationalInstitution_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "EducationalInstitution",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "which educational institution does ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "EducationalInstitution",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | EducationalInstitution_NP) study?", "Who does ($x | EducationalInstitution_NP) study at?", "Who studied at ($x | EducationalInstitution_NP)?", "Who studies at ($x | EducationalInstitution_NP)?", "which person studies at ($x | EducationalInstitution_NP)?", "which persons study at ($x | EducationalInstitution_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "EducationalInstitution",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons study at ($x | EducationalInstitution_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/education> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1039",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) initially used?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) initially use for?", "What initially used for ($x | Thing_NP)?", "What initially uses for ($x | Thing_NP)?", "Where does ($x | Thing_NP) initially use?", "which ArchitecturalStructure initially uses for ($x | Thing_NP)?", "which ArchitecturalStructures initially use for ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures initially use for ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1042",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which city did ($x | Politician_NP) die?", "which city does ($x | Politician_NP) die in?", "which city was ($x | Politician_NP) die in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1043",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Politician",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ($x | City_NP)?", "which politician was died in ($x | City_NP)?", "which politicians were died in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Politician",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which place did ($x | Writer_NP) die?", "which place does ($x | Writer_NP) die in?", "which place was ($x | Writer_NP) die in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1046",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Writer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ($x | Place_NP)?", "which writer was died in ($x | Place_NP)?", "which writers were died in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Writer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) release on?", "What released on ($x | Thing_NP)?", "What releases on ($x | Thing_NP)?", "Where does ($x | Thing_NP) release?", "which software releases on ($x | Thing_NP)?", "which softwares release on ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares release on ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1051",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "which river does ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1052",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | River_NP) flow into?", "What flowed into ($x | River_NP)?", "What flows into ($x | River_NP)?", "Where does ($x | River_NP) flow?", "which river flows into ($x | River_NP)?", "which rivers flow into ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers flow into ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which place does ($x | BodyOfWater_NP) locate?", "in which place is ($x | BodyOfWater_NP) located?", "in which places  ($x | BodyOfWater_NP) locate?", "in which places are ($x | BodyOfWater_NP) located?", "which place does ($x | BodyOfWater_NP) locate in?", "which places does ($x | BodyOfWater_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1055",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Place_NP) locate in?", "What located in ($x | Place_NP)?", "What locates in ($x | Place_NP)?", "Where does ($x | Place_NP) locate?", "which river locates in ($x | Place_NP)?", "which rivers locate in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers locate in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1057",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ($x | date_NP)?", "which person was died in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1060",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) publish?", "When was ($x | Song_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1061",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded on ($x | date_NP)?", "which organisation was founded on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1066",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) complete?", "When was ($x | ArchitecturalStructure_NP) completed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1067",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What completed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryUnit",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "which location does ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1070",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which military unit locates in ($x | Location_NP)?", "which military units locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military units locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1072",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryUnit",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "which location does ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which military unit locates in ($x | Location_NP)?", "which military units locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military units locate in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1075",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "which person does ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1076",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for ($x | Person_NP)?", "What composes for ($x | Person_NP)?", "What does ($x | Person_NP) compose for?", "Where does ($x | Person_NP) compose?", "which work composes for ($x | Person_NP)?", "which works compose for ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works compose for ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which city did ($x | Person_NP) born?", "which city does ($x | Person_NP) born in?", "which city was ($x | Person_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | City_NP)?", "which person was born in ($x | City_NP)?", "which persons were born in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1081",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | TelevisionShow_NP) release?", "When was ($x | TelevisionShow_NP) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1082",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "TelevisionShow",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What released at ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "TelevisionShow",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) belonged?", "to which genre does ($x | Band_NP) belong?", "to which genre is ($x | Band_NP) belonged?", "to which genres  ($x | Band_NP) belong?", "to which genres are ($x | Band_NP) belonged?", "which genre does ($x | Band_NP) belong to?", "which genres does ($x | Band_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1085",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which band belongs to ($x | Genre_NP)?", "which bands belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1087",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which countries are ($x | BodyOfWater_NP) located?", "in which country are the ($x | BodyOfWater_NP)?", "in which country is ($x | BodyOfWater_NP) located?", "in which country is the ($x | BodyOfWater_NP)?", "what country is ($x | BodyOfWater_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which river locate in ($x | Country_NP)?", "which rivers locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1090",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Athlete_NP) end his active career?", "When was ($x | Athlete_NP) ended his active career?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1091",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was ended his active career on ($x | date_NP)?", "which athlete was ended his active career on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Who did ($x | Award_NP) known for?", "Who does ($x | Award_NP) known for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Award",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What is known for ($x | Person_NP)?", "What was known for ($x | Person_NP)?", "which award is known for ($x | Person_NP)?", "which award was known for ($x | Person_NP)?", "which awards are known for ($x | Person_NP)?", "which awards were known for ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Award",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1096",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Athlete_NP) played?", "for which sports team does ($x | Athlete_NP) play?", "for which sports team is ($x | Athlete_NP) played?", "for which sports teams  ($x | Athlete_NP) play?", "for which sports teams are ($x | Athlete_NP) played?", "which sports team does ($x | Athlete_NP) play for?", "which sports teams does ($x | Athlete_NP) play for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1097",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) play?", "Who does ($x | SportsTeam_NP) play for?", "Who played for ($x | SportsTeam_NP)?", "Who plays for ($x | SportsTeam_NP)?", "which athlete play for ($x | SportsTeam_NP)?", "which athlete plays for ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete play for ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Thing_NP) born?", "in which countries are ($x | Thing_NP) born?", "in which country are the ($x | Thing_NP)?", "in which country is ($x | Thing_NP) born?", "in which country is the ($x | Thing_NP)?", "what country is ($x | Thing_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1100",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What born in ($x | Country_NP)?", "What does ($x | Country_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1102",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Disease",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) died?", "from which disease does ($x | Person_NP) die?", "from which disease is ($x | Person_NP) died?", "from which diseases  ($x | Person_NP) die?", "from which diseases are ($x | Person_NP) died?", "which disease does ($x | Person_NP) die from?", "which diseases does ($x | Person_NP) die from?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Disease",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Disease_NP) die?", "Who died from ($x | Disease_NP)?", "Who dies from ($x | Disease_NP)?", "Who does ($x | Disease_NP) die from?", "which person dies from ($x | Disease_NP)?", "which persons die from ($x | Disease_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Disease",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons die from ($x | Disease_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1105",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is the ($x | River_NP) flown?", "through which cities  the ($x | River_NP) flow?", "through which cities are the ($x | River_NP) flown?", "through which city does the ($x | River_NP) flow?", "through which city is the ($x | River_NP) flown?", "which cities does the ($x | River_NP) flow through?", "which city does the ($x | River_NP) flow through?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1106",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) flow through?", "What flowed through ($x | City_NP)?", "What flows through ($x | City_NP)?", "Where does ($x | City_NP) flow?", "which river flows through ($x | City_NP)?", "which rivers flow through ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers flow through ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "MusicalArtist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which musical artist does ($x | Band_NP) associate with?", "which musical artists does ($x | Band_NP) associate with?", "with which musical artist does ($x | Band_NP) associate?", "with which musical artist is ($x | Band_NP) associated?", "with which musical artists  ($x | Band_NP) associate?", "with which musical artists are ($x | Band_NP) associated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalArtist",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with ($x | MusicalArtist_NP)?", "What does ($x | MusicalArtist_NP) associate with?", "Where does ($x | MusicalArtist_NP) associate?", "which band associated with ($x | MusicalArtist_NP)?", "which bands associate with ($x | MusicalArtist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalArtist",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands associate with ($x | MusicalArtist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1111",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Actor_NP) stop acting?", "When was ($x | Actor_NP) stopped acting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was stopped acting on ($x | date_NP)?", "which actor was stopped acting on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1114",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | WrittenWork_NP) belonged?", "to which genre does ($x | WrittenWork_NP) belong?", "to which genre is ($x | WrittenWork_NP) belonged?", "to which genres  ($x | WrittenWork_NP) belong?", "to which genres are ($x | WrittenWork_NP) belonged?", "which genre does ($x | WrittenWork_NP) belong to?", "which genres does ($x | WrittenWork_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1115",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "WrittenWork",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which written work belong to ($x | Genre_NP)?", "which written work belongs to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "WrittenWork",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many written work belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Album",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Song_NP) belonged?", "to which album does ($x | Song_NP) belong?", "to which album is ($x | Song_NP) belonged?", "to which albums  ($x | Song_NP) belong?", "to which albums are ($x | Song_NP) belonged?", "which album does ($x | Song_NP) belong to?", "which albums does ($x | Song_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1118",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Album_NP)?", "What belongs to ($x | Album_NP)?", "What does ($x | Album_NP) belong to?", "Where does ($x | Album_NP) belong?", "which song belongs to ($x | Album_NP)?", "which songs belong to ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many songs belong to ($x | Album_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/album> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which politicalParties  ($x | Person_NP) belong?", "to which politicalParties are ($x | Person_NP) belonged?", "to which politicalParty does ($x | Person_NP) belong?", "to which politicalParty is ($x | Person_NP) belonged?", "which politicalParties does ($x | Person_NP) belong to?", "which politicalParty does ($x | Person_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | PoliticalParty_NP) belong?", "Who belonged to ($x | PoliticalParty_NP)?", "Who belongs to ($x | PoliticalParty_NP)?", "Who does ($x | PoliticalParty_NP) belong to?", "which person belongs to ($x | PoliticalParty_NP)?", "which persons belong to ($x | PoliticalParty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | PoliticalParty_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1123",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1124",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What discontinued on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1127",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What introduced in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1129",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "AmericanFootballPlayer",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | AmericanFootballPlayer_NP) draft?", "When was ($x | AmericanFootballPlayer_NP) drafted?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "AmericanFootballPlayer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was drafted in ($x | date_NP)?", "which american football player was drafted in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "AmericanFootballPlayer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1132",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1133",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Beverage_NP) related?", "to which beverage does ($x | Beverage_NP) relate?", "to which beverage is ($x | Beverage_NP) related?", "to which beverages  ($x | Beverage_NP) relate?", "to which beverages are ($x | Beverage_NP) related?", "which beverage does ($x | Beverage_NP) relate to?", "which beverages does ($x | Beverage_NP) relate to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/related> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1136",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Beverage_NP) relate to?", "What is related to ($x | Beverage_NP)?", "What related to ($x | Beverage_NP)?", "Where does ($x | Beverage_NP) relate?", "which beverage is related to ($x | Beverage_NP)?", "which beverages relate to ($x | Beverage_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/related> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many beverages relate to ($x | Beverage_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/related> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What opened on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1141",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "which person does ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/music> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1142",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for ($x | Person_NP)?", "What composes for ($x | Person_NP)?", "What does ($x | Person_NP) compose for?", "Where does ($x | Person_NP) compose?", "which work composes for ($x | Person_NP)?", "which works compose for ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/music> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works compose for ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/music> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Place_NP) located?", "in which place are the ($x | Place_NP)?", "in which place is ($x | Place_NP) located?", "in which place is the ($x | Place_NP)?", "in which places are ($x | Place_NP) located?", "what place is ($x | Place_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1145",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Place_NP) locate in?", "What locate in ($x | Place_NP)?", "What located in ($x | Place_NP)?", "which place locate in ($x | Place_NP)?", "which places locate in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1147",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Road",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Road_NP) started?", "in which road does ($x | Road_NP) start?", "in which road is ($x | Road_NP) started?", "in which roads  ($x | Road_NP) start?", "in which roads are ($x | Road_NP) started?", "which road does ($x | Road_NP) start in?", "which roads does ($x | Road_NP) start in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Road",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Road_NP) start in?", "What started in ($x | Road_NP)?", "What starts in ($x | Road_NP)?", "Where does ($x | Road_NP) start?", "which road starts in ($x | Road_NP)?", "which roads start in ($x | Road_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Road",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many roads start in ($x | Road_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1150",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are the ($x | River_NP) ended?", "in which country does the ($x | River_NP) end?", "in which country is the ($x | River_NP) ended?", "which countries does the ($x | River_NP) end in?", "which country does the ($x | River_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1151",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) end in?", "What ended in ($x | Country_NP)?", "What ends in ($x | Country_NP)?", "Where does ($x | Country_NP) end?", "which river ends in ($x | Country_NP)?", "which rivers end in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers end in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) ended?", "in which location does ($x | ArchitecturalStructure_NP) end?", "in which location is ($x | ArchitecturalStructure_NP) ended?", "in which locations  ($x | ArchitecturalStructure_NP) end?", "in which locations are ($x | ArchitecturalStructure_NP) ended?", "which location does ($x | ArchitecturalStructure_NP) end in?", "which locations does ($x | ArchitecturalStructure_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1154",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "Where does ($x | Location_NP) end?", "which ArchitecturalStructure ends in ($x | Location_NP)?", "which ArchitecturalStructures end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Thing_NP) establish?", "When was ($x | Thing_NP) established?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What established in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1159",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Software_NP) belonged?", "to which genre does ($x | Software_NP) belong?", "to which genre is ($x | Software_NP) belonged?", "to which genres  ($x | Software_NP) belong?", "to which genres are ($x | Software_NP) belonged?", "which genre does ($x | Software_NP) belong to?", "which genres does ($x | Software_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1160",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which software belongs to ($x | Genre_NP)?", "which softwares belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) began?", "at which countries  ($x | River_NP) begin?", "at which countries are ($x | River_NP) began?", "at which country does ($x | River_NP) begin?", "at which country is ($x | River_NP) began?", "which countries does ($x | River_NP) begin at?", "which country does ($x | River_NP) begin at?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source1Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1163",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at ($x | Country_NP)?", "What begins at ($x | Country_NP)?", "What does ($x | Country_NP) begin at?", "Where does ($x | Country_NP) begin?", "which river begins at ($x | Country_NP)?", "which rivers begin at ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source1Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers begin at ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source1Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1165",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) release?", "When was ($x | Song_NP) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What released at ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1168",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Software_NP) release?", "When was ($x | Software_NP) released?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1169",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What released at ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Software",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Film_NP) starred?", "in which actor does ($x | Film_NP) star?", "in which actor is ($x | Film_NP) starred?", "in which actors  ($x | Film_NP) star?", "in which actors are ($x | Film_NP) starred?", "which actor does ($x | Film_NP) star in?", "which actors does ($x | Film_NP) star in?","Give me all actors starring in ($x | Film_NP)." ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1172",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Actor_NP) star in?", "What starred in ($x | Actor_NP)?", "What stars in ($x | Actor_NP)?", "Where does ($x | Actor_NP) star?", "which film star in ($x | Actor_NP)?", "which film stars in ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film star in ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What rebuilt in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1177",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) began?", "at which cities  ($x | River_NP) begin?", "at which cities are ($x | River_NP) began?", "at which city does ($x | River_NP) begin?", "at which city is ($x | River_NP) began?", "which cities does ($x | River_NP) begin at?", "which city does ($x | River_NP) begin at?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source2Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at ($x | City_NP)?", "What begins at ($x | City_NP)?", "What does ($x | City_NP) begin at?", "Where does ($x | City_NP) begin?", "which river begins at ($x | City_NP)?", "which rivers begin at ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source2Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers begin at ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/source2Location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1180",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many People live in ($x | Country_NP)?", "How many People lived in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1181",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "PopulatedPlace",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "which populated place does ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) end in?", "What ended in ($x | PopulatedPlace_NP)?", "What ends in ($x | PopulatedPlace_NP)?", "Where does ($x | PopulatedPlace_NP) end?", "which river ends in ($x | PopulatedPlace_NP)?", "which rivers end in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers end in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1186",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Road_NP) ended?", "in which cities  the ($x | Road_NP) end?", "in which cities are the ($x | Road_NP) ended?", "in which city does the ($x | Road_NP) end?", "in which city is the ($x | Road_NP) ended?", "which cities does the ($x | Road_NP) end in?", "which city does the ($x | Road_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1187",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Road",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) end in?", "What ended in ($x | City_NP)?", "What ends in ($x | City_NP)?", "Where does ($x | City_NP) end?", "which road ends in ($x | City_NP)?", "which roads end in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Road",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many roads end in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/position> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1190",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Thing_NP) play?", "Who does ($x | Thing_NP) play in?", "Who played in ($x | Thing_NP)?", "Who plays in ($x | Thing_NP)?", "which person plays in ($x | Thing_NP)?", "which persons play in ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/position> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons play in ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/position> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1192",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which mountain locate in ($x | Country_NP)?", "which mountains locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1195",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Agent",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) named?", "after which agent does ($x | Settlement_NP) name?", "after which agent is ($x | Settlement_NP) named?", "after which agents  ($x | Settlement_NP) name?", "after which agents are ($x | Settlement_NP) named?", "which agent does ($x | Settlement_NP) name after?", "which agents does ($x | Settlement_NP) name after?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1196",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Agent_NP) name after?", "What named after ($x | Agent_NP)?", "Where does ($x | Agent_NP) name?", "which settlement named after ($x | Agent_NP)?", "which settlements name after ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many settlements name after ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Athlete",
    "returnType" : "SportsTeam",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Athlete_NP) belonged?", "to which sports team does ($x | Athlete_NP) belong?", "to which sports team is ($x | Athlete_NP) belonged?", "to which sports teams  ($x | Athlete_NP) belong?", "to which sports teams are ($x | Athlete_NP) belonged?", "which sports team does ($x | Athlete_NP) belong to?", "which sports teams does ($x | Athlete_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) belong?", "Who belonged to ($x | SportsTeam_NP)?", "Who belongs to ($x | SportsTeam_NP)?", "Who does ($x | SportsTeam_NP) belong to?", "which athlete belong to ($x | SportsTeam_NP)?", "which athlete belongs to ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Athlete",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete belong to ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1201",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?", "In which year was ($x | Person_NP) born?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1202",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | date_NP)?", "which person was born in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) complete?", "When was ($x | Bridge_NP) completed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1205",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What completed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1207",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | BodyOfWater_NP) flown?", "into which river does ($x | BodyOfWater_NP) flow?", "into which river is ($x | BodyOfWater_NP) flown?", "into which rivers  ($x | BodyOfWater_NP) flow?", "into which rivers are ($x | BodyOfWater_NP) flown?", "which river does ($x | BodyOfWater_NP) flow into?", "which rivers does ($x | BodyOfWater_NP) flow into?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | BodyOfWater_NP) flow into?", "What flowed into ($x | BodyOfWater_NP)?", "What flows into ($x | BodyOfWater_NP)?", "Where does ($x | BodyOfWater_NP) flow?", "which river flows into ($x | BodyOfWater_NP)?", "which rivers flow into ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers flow into ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1210",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | MilitaryConflict_NP) fight?", "When was ($x | MilitaryConflict_NP) fought?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1211",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What fought in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Book_NP) publish?", "When was ($x | Book_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Book",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Book",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1216",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1217",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was buried in ($x | City_NP)?", "which person was buried in ($x | City_NP)?", "which persons were buried in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which band does ($x | Band_NP) associate with?", "which bands does ($x | Band_NP) associate with?", "with which band does ($x | Band_NP) associate?", "with which band is ($x | Band_NP) associated?", "with which bands  ($x | Band_NP) associate?", "with which bands are ($x | Band_NP) associated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1220",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with ($x | Band_NP)?", "What does ($x | Band_NP) associate with?", "Where does ($x | Band_NP) associate?", "which band associated with ($x | Band_NP)?", "which bands associate with ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands associate with ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1222",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What founded in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1225",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "MountainRange",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) belonged?", "to which mountain range does ($x | Mountain_NP) belong?", "to which mountain range is ($x | Mountain_NP) belonged?", "to which mountain ranges  ($x | Mountain_NP) belong?", "to which mountain ranges are ($x | Mountain_NP) belonged?", "which mountain range does ($x | Mountain_NP) belong to?", "which mountain ranges does ($x | Mountain_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1226",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MountainRange",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | MountainRange_NP)?", "What belongs to ($x | MountainRange_NP)?", "What does ($x | MountainRange_NP) belong to?", "Where does ($x | MountainRange_NP) belong?", "which mountain belongs to ($x | MountainRange_NP)?", "which mountains belong to ($x | MountainRange_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MountainRange",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many mountains belong to ($x | MountainRange_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Band_NP) form?", "When was ($x | Band_NP) formed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What formed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1231",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1232",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which cities locate in ($x | Country_NP)?", "which city locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1235",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which cities locate in ($x | Country_NP)?", "which city locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in ($x | date_NP)?", "which organisation was founded in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1240",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) build?", "When was ($x | Bridge_NP) built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1241",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What built in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which place does ($x | Airport_NP) locate?", "in which place is ($x | Airport_NP) located?", "in which places  ($x | Airport_NP) locate?", "in which places are ($x | Airport_NP) located?", "which place does ($x | Airport_NP) locate in?", "which places does ($x | Airport_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1244",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Airport",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Place_NP) locate in?", "What located in ($x | Place_NP)?", "What locates in ($x | Place_NP)?", "Where does ($x | Place_NP) locate?", "which airport locates in ($x | Place_NP)?", "which airports locate in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Airport",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports locate in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1246",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which mountain locate in ($x | Country_NP)?", "which mountains locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1249",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/keyPeople> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1250",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/keyPeople> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/keyPeople> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Ship_NP) complete?", "When was the ($x | Ship_NP) completed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What completed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1255",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1256",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What rebuilt on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Number",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many People live in ($x | City_NP)?", "How many People lived in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1259",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1261",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which country did ($x | Person_NP) born?", "which country does ($x | Person_NP) born in?", "which country was ($x | Person_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | Country_NP)?", "which person was born in ($x | Country_NP)?", "which persons were born in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1264",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did the ($x | Place_NP) dissolve?", "When was the ($x | Place_NP) dissolved?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1265",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What dissolved on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Band_NP) split ?", "When was ($x | Band_NP) splited?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What splited up ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1270",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Writer",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which city did ($x | Writer_NP) die?", "which city does ($x | Writer_NP) die in?", "which city was ($x | Writer_NP) die in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1271",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Writer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ($x | City_NP)?", "which writer was died in ($x | City_NP)?", "which writers were died in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Writer",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) belonged?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1274",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Thing_NP)?", "What belongs to ($x | Thing_NP)?", "What does ($x | Thing_NP) belong to?", "Where does ($x | Thing_NP) belong?", "which ArchitecturalStructure belongs to ($x | Thing_NP)?", "which ArchitecturalStructures belong to ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures belong to ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1276",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) currently used?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What currently used for ($x | Thing_NP)?", "What currently uses for ($x | Thing_NP)?", "What does ($x | Thing_NP) currently use for?", "Where does ($x | Thing_NP) currently use?", "which ArchitecturalStructure currently uses for ($x | Thing_NP)?", "which ArchitecturalStructures currently use for ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures currently use for ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1279",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) produce?", "When was ($x | Song_NP) produced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1280",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What produced in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which band does ($x | Person_NP) belong?", "to which band is ($x | Person_NP) belonged?", "to which bands  ($x | Person_NP) belong?", "to which bands are ($x | Person_NP) belonged?", "which band does ($x | Person_NP) belong to?", "which bands does ($x | Person_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Band_NP) belong?", "Who belonged to ($x | Band_NP)?", "Who belongs to ($x | Band_NP)?", "Who does ($x | Band_NP) belong to?", "which person belongs to ($x | Band_NP)?", "which persons belong to ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1285",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Artist_NP) belonged?", "to which genre does ($x | Artist_NP) belong?", "to which genre is ($x | Artist_NP) belonged?", "to which genres  ($x | Artist_NP) belong?", "to which genres are ($x | Artist_NP) belonged?", "which genre does ($x | Artist_NP) belong to?", "which genres does ($x | Artist_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1286",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Artist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Genre_NP) belong?", "Who belonged to ($x | Genre_NP)?", "Who belongs to ($x | Genre_NP)?", "Who does ($x | Genre_NP) belong to?", "which artist belongs to ($x | Genre_NP)?", "which artists belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Artist",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artists belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Company_NP) produced?", "Where was ($x | Company_NP) produced?", "in which location did ($x | Company_NP) produce?", "which location does ($x | Company_NP) produce in?", "which location was ($x | Company_NP) produce in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1289",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Company",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was produced in ($x | Location_NP)?", "which company was produced in ($x | Location_NP)?", "which company were produced in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Company",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1291",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) complete?", "When was ($x | Building_NP) completed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What completed in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1294",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Stadium",
    "returnType" : "Number",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "How many had  ($x | Stadium_NP)?", "How many have  ($x | Stadium_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1295",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Stadium",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Stadium",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WineRegion",
    "returnType" : "Grape",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What grew in ($x | WineRegion_NP)?", "What grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?","which types of grapes grow in ($x | WineRegion_NP)?"],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "WineRegion",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which wine region does ($x | Grape_NP) grow?", "in which wine region is ($x | Grape_NP) grown?", "in which wine regions are ($x | Grape_NP) grown?", "in which wine regions does ($x | Grape_NP) grow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "WineRegion",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1300",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) lived?", "Where was ($x | Person_NP) lived?", "in which city did ($x | Person_NP) live?", "which city does ($x | Person_NP) live in?", "which city was ($x | Person_NP) live in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1301",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was lived in ($x | City_NP)?", "which person was lived in ($x | City_NP)?", "which persons were lived in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1304",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was born on ($x | date_NP)?", "which person was born on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Infrastructure",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Infrastructure_NP) ended?", "in which location does ($x | Infrastructure_NP) end?", "in which location is ($x | Infrastructure_NP) ended?", "in which locations  ($x | Infrastructure_NP) end?", "in which locations are ($x | Infrastructure_NP) ended?", "which location does ($x | Infrastructure_NP) end in?", "which locations does ($x | Infrastructure_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Infrastructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "Where does ($x | Location_NP) end?", "which infrastructure ends in ($x | Location_NP)?", "which infrastructures end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Infrastructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many infrastructures end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1309",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | MilitaryConflict_NP) commence?", "When was ($x | MilitaryConflict_NP) commenced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What commenced on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1312",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) located?", "in which countries are ($x | Settlement_NP) located?", "in which country are the ($x | Settlement_NP)?", "in which country is ($x | Settlement_NP) located?", "in which country is the ($x | Settlement_NP)?", "what country is ($x | Settlement_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1313",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which settlement locate in ($x | Country_NP)?", "which settlements locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "State",
    "returnType" : "State",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | State_NP) bordered?", "in which state does ($x | State_NP) border?", "in which state is ($x | State_NP) bordered?", "in which states  ($x | State_NP) border?", "in which states are ($x | State_NP) bordered?", "which state does ($x | State_NP) border in?", "which states does ($x | State_NP) border in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1316",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "State",
    "returnType" : "State",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What bordered in ($x | State_NP)?", "What borders in ($x | State_NP)?", "What does ($x | State_NP) border in?", "Where does ($x | State_NP) border?", "which state borders in ($x | State_NP)?", "which states border in ($x | State_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "State",
    "returnType" : "State",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many states border in ($x | State_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Book_NP) publish?", "When was ($x | Book_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Book",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Book",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1321",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "MusicalWork",
    "returnType" : "PopulatedPlace",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | MusicalWork_NP) recored?", "in which populated place does ($x | MusicalWork_NP) record?", "in which populated place is ($x | MusicalWork_NP) recored?", "in which populated places  ($x | MusicalWork_NP) record?", "in which populated places are ($x | MusicalWork_NP) recored?", "which populated place does ($x | MusicalWork_NP) record in?", "which populated places does ($x | MusicalWork_NP) record in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "MusicalWork",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) record in?", "What records in ($x | PopulatedPlace_NP)?", "What recored in ($x | PopulatedPlace_NP)?", "Where does ($x | PopulatedPlace_NP) record?", "which musical work records in ($x | PopulatedPlace_NP)?", "which musical works record in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "MusicalWork",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musical works record in ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1324",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Thing_NP) stood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1325",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) stand for?", "What stands for ($x | Thing_NP)?", "What stood for ($x | Thing_NP)?", "Where does ($x | Thing_NP) stand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Actor_NP) start acting?", "When was ($x | Actor_NP) started acting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was started acting on ($x | date_NP)?", "which actor was started acting on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1329",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1330",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) build?", "When was ($x | Building_NP) built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1331",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What built in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1333",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are ($x | River_NP) ended?", "in which country does ($x | River_NP) end?", "in which country is ($x | River_NP) ended?", "which countries does ($x | River_NP) end in?", "which country does ($x | River_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1334",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) end in?", "What ended in ($x | Country_NP)?", "What ends in ($x | Country_NP)?", "Where does ($x | Country_NP) end?", "which river ends in ($x | Country_NP)?", "which rivers end in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1335",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers end in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1336",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Work_NP) wrote?", "in which language does ($x | Work_NP) write?", "in which language is ($x | Work_NP) wrote?", "in which languages  ($x | Work_NP) write?", "in which languages are ($x | Work_NP) wrote?", "which language does ($x | Work_NP) write in?", "which languages does ($x | Work_NP) write in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1337",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Language_NP) write in?", "What writes in ($x | Language_NP)?", "What wrote in ($x | Language_NP)?", "Where does ($x | Language_NP) write?", "which work writes in ($x | Language_NP)?", "which works write in ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works write in ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1339",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "RouteOfTransportation",
    "returnType" : "Location",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | RouteOfTransportation_NP) ended?", "in which location does ($x | RouteOfTransportation_NP) end?", "in which location is ($x | RouteOfTransportation_NP) ended?", "in which locations  ($x | RouteOfTransportation_NP) end?", "in which locations are ($x | RouteOfTransportation_NP) ended?", "which location does ($x | RouteOfTransportation_NP) end in?", "which locations does ($x | RouteOfTransportation_NP) end in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1340",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "RouteOfTransportation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "Where does ($x | Location_NP) end?", "which route of transportation ends in ($x | Location_NP)?", "which routes of transportation end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "RouteOfTransportation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many routes of transportation end in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1342",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) build?", "When was ($x | ArchitecturalStructure_NP) built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1343",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What built in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1344",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1345",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1346",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was born in ($x | Country_NP)?", "which actor was born in ($x | Country_NP)?", "which actors were born in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1347",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1348",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which cities  ($x | Airport_NP) locate?", "in which cities are ($x | Airport_NP) located?", "in which city does ($x | Airport_NP) locate?", "in which city is ($x | Airport_NP) located?", "which cities does ($x | Airport_NP) locate in?", "which city does ($x | Airport_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1349",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Airport",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) locate in?", "What located in ($x | City_NP)?", "What locates in ($x | City_NP)?", "Where does ($x | City_NP) locate?", "which airport locates in ($x | City_NP)?", "which airports locate in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Airport",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports locate in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1351",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1352",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What reopened in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1354",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1355",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What founded on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1356",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1357",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1358",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What destroyed on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1360",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Article",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Article_NP) publish?", "When was ($x | Article_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1361",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Article",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1362",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Article",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1363",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) inaugurate?", "When was ($x | ArchitecturalStructure_NP) inaugurated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1364",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What inaugurated in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1365",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1366",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Company_NP) founded?", "Where was ($x | Company_NP) founded?", "in which country did ($x | Company_NP) found?", "which country does ($x | Company_NP) found in?", "which country was ($x | Company_NP) found in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1367",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Company",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in ($x | Country_NP)?", "which company was founded in ($x | Country_NP)?", "which company were founded in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Company",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1369",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Band",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which band does ($x | Person_NP) play?", "in which band is ($x | Person_NP) played?", "in which bands  ($x | Person_NP) play?", "in which bands are ($x | Person_NP) played?", "which band does ($x | Person_NP) play in?", "which bands does ($x | Person_NP) play in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1370",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Band_NP) play?", "Who does ($x | Band_NP) play in?", "Who played in ($x | Band_NP)?", "Who plays in ($x | Band_NP)?", "which person plays in ($x | Band_NP)?", "which persons play in ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1371",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons play in ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/member> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1372",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1373",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_ACTIVITY",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1374",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1375",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1376",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What founded in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1378",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Album_NP) belonged?", "to which genre does ($x | Album_NP) belong?", "to which genre is ($x | Album_NP) belonged?", "to which genres  ($x | Album_NP) belong?", "to which genres are ($x | Album_NP) belonged?", "which genre does ($x | Album_NP) belong to?", "which genres does ($x | Album_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1379",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Album",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which album belongs to ($x | Genre_NP)?", "which albums belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1380",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Album",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1381",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Building",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Building_NP) inaugurate?", "When was ($x | Building_NP) inaugurated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1382",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What inaugurated in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Building",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1384",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Album",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Album_NP) produce?", "When was ($x | Album_NP) produced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1385",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Album",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What produced on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1386",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Album",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1387",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Film_NP) produce?", "When was ($x | Film_NP) produced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1388",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What produced on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1389",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1390",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) come?", "Where was ($x | Person_NP) come?", "from which country did ($x | Person_NP) come?", "which country does ($x | Person_NP) come from?", "which country was ($x | Person_NP) come from?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1391",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was come from ($x | Country_NP)?", "which person was come from ($x | Country_NP)?", "which persons were come from ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1393",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "which river does ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1394",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | River_NP) flow into?", "What flowed into ($x | River_NP)?", "What flows into ($x | River_NP)?", "Where does ($x | River_NP) flow?", "which river flows into ($x | River_NP)?", "which rivers flow into ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1395",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers flow into ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/inflow> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1396",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Settlement",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Settlement_NP) belonged?", "to which place does ($x | Settlement_NP) belong?", "to which place is ($x | Settlement_NP) belonged?", "to which places  ($x | Settlement_NP) belong?", "to which places are ($x | Settlement_NP) belonged?", "which place does ($x | Settlement_NP) belong to?", "which places does ($x | Settlement_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1397",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Place_NP)?", "What belongs to ($x | Place_NP)?", "What does ($x | Place_NP) belong to?", "Where does ($x | Place_NP) belong?", "which settlement belongs to ($x | Place_NP)?", "which settlements belong to ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1398",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Settlement",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many settlements belong to ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1399",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "SportsTeam",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which sports team does ($x | Person_NP) belong?", "to which sports team is ($x | Person_NP) belonged?", "to which sports teams  ($x | Person_NP) belong?", "to which sports teams are ($x | Person_NP) belonged?", "which sports team does ($x | Person_NP) belong to?", "which sports teams does ($x | Person_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/team> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1400",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) belong?", "Who belonged to ($x | SportsTeam_NP)?", "Who belongs to ($x | SportsTeam_NP)?", "Who does ($x | SportsTeam_NP) belong to?", "which person belongs to ($x | SportsTeam_NP)?", "which persons belong to ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/team> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "SportsTeam",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | SportsTeam_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/team> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1402",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Song_NP) publish?", "When was ($x | Song_NP) published?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1403",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What published in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1404",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Song",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/published> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1405",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1406",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was died on ($x | date_NP)?", "which person was died on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1407",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1408",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | River_NP) originated?", "in which countries  ($x | River_NP) originate?", "in which countries are ($x | River_NP) originated?", "in which country does ($x | River_NP) originate?", "in which country is ($x | River_NP) originated?", "which countries does ($x | River_NP) originate in?", "which country does ($x | River_NP) originate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1409",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) originate in?", "What originated in ($x | Country_NP)?", "What originates in ($x | Country_NP)?", "Where does ($x | Country_NP) originate?", "which stream originates in ($x | Country_NP)?", "which streams originate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1410",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many streams originate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1411",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PoliticalParty",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1412",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What founded on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1413",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "PoliticalParty",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1414",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Lake",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Lake_NP) located?", "in which countries are ($x | Lake_NP) located?", "in which country are the ($x | Lake_NP)?", "in which country is ($x | Lake_NP) located?", "in which country is the ($x | Lake_NP)?", "what country is ($x | Lake_NP) in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1415",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Lake",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which lake locate in ($x | Country_NP)?", "which lakes locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1416",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Lake",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1417",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries  ($x | City_NP) locate?", "in which countries are ($x | City_NP) located?", "in which country does ($x | City_NP) locate?", "in which country is ($x | City_NP) located?", "which countries does ($x | City_NP) locate in?", "which country does ($x | City_NP) locate in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1418",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What located in ($x | Country_NP)?", "What locates in ($x | Country_NP)?", "Where does ($x | Country_NP) locate?", "which cities locate in ($x | Country_NP)?", "which city locates in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1419",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many cities locate in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1420",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Beverage",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1421",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What introduced on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1422",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Beverage",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/introduced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1423",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Bridge_NP) inaugurate?", "When was ($x | Bridge_NP) inaugurated?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1424",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What inaugurated in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1425",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1426",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1427",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What reopened on ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1428",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1429",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "date",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "When did ($x | Organisation_NP) find?", "When was ($x | Organisation_NP) founded?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1430",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who was founded in ($x | date_NP)?", "which organisation was founded in ($x | date_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1431",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Organisation",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1432",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Thing",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What did ($x | Person_NP) call ?", "What does ($x | Person_NP) call ?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1433",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who is called  ($x | Thing_NP)?", "Who was called  ($x | Thing_NP)?", "which person is called  ($x | Thing_NP)?", "which person was called  ($x | Thing_NP)?", "which persons are called  ($x | Thing_NP)?", "which persons were called  ($x | Thing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1434",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Thing",
    "returnType" : "Person",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1435",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Place",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which place did ($x | Politician_NP) die?", "which place does ($x | Politician_NP) die in?", "which place was ($x | Politician_NP) die in?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1436",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Politician",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Who was died in ($x | Place_NP)?", "which politician was died in ($x | Place_NP)?", "which politicians were died in ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1437",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Politician",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1438",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "WineRegion",
    "returnType" : "Grape",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "What grew in ($x | WineRegion_NP)?", "What grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1439",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "WineRegion",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which wine region does ($x | Grape_NP) grow?", "in which wine region is ($x | Grape_NP) grown?", "in which wine regions are ($x | Grape_NP) grown?", "in which wine regions does ($x | Grape_NP) grow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1440",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "WineRegion",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1441",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Genre",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is ($x | Film_NP) belonged?", "to which genre does ($x | Film_NP) belong?", "to which genre is ($x | Film_NP) belonged?", "to which genres  ($x | Film_NP) belong?", "to which genres are ($x | Film_NP) belonged?", "which genre does ($x | Film_NP) belong to?", "which genres does ($x | Film_NP) belong to?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1442",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which film belong to ($x | Genre_NP)?", "which film belongs to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1443",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Genre",
    "returnType" : "Film",
    "frameType" : "IPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many film belong to ($x | Genre_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/genre> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  },{
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Is ($x | Person_NP) the wife of ($x | Person_NP)?"],
    "queryType" : "ASK",
    "sparqlQuery" : "ASK WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp . }",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, 
    {
    "id" : "1444",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "grammarRuleNo" : null,
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n  ))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  } ]
}

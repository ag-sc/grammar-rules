{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Politician_NP) death place.", "List all the places with death place of ($x | Politician_NP).", "What place is ($x | Politician_NP) 's death place?", "What place is the death place of ($x | Politician_NP)?", "What place is the death place of the ($x | Politician_NP)?", "What place was ($x | Politician_NP) 's death place?", "What place was the death place of ($x | Politician_NP)?", "What place was the death place of the ($x | Politician_NP)?", "which place is the death place of ($x | Politician_NP)?", "which place is the death place of the ($x | Politician_NP)?", "which place was the death place of ($x | Politician_NP)?", "which place was the death place of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death place of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all delivery Dates of ($x | MeanOfTransportation_NP).", "Give me the ($x | MeanOfTransportation_NP) delivery Date.", "Give me the ($x | MeanOfTransportation_NP) delivery Dates.", "List all delivery Dates of ($x | MeanOfTransportation_NP).", "List all the delivery Dates of ($x | MeanOfTransportation_NP).", "show me all delivery Dates of ($x | MeanOfTransportation_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#deliveryDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "MeanOfTransportation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the delivery Date of ($x | MeanOfTransportation_NP)?", "the delivery Dates of ($x | MeanOfTransportation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deliveryDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all number Of Seasons of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) number Of Season.", "Give me the ($x | TelevisionShow_NP) number Of Seasons.", "List all number Of Seasons of ($x | TelevisionShow_NP).", "List all the number Of Seasons of ($x | TelevisionShow_NP).", "show me all number Of Seasons of ($x | TelevisionShow_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Season of ($x | TelevisionShow_NP)?", "the number Of Seasons of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Place_NP) location.", "List all the places with location of ($x | Place_NP).", "What place is ($x | Place_NP) 's location?", "What place is the location of ($x | Place_NP)?", "What place is the location of the ($x | Place_NP)?", "What place was ($x | Place_NP) 's location?", "What place was the location of ($x | Place_NP)?", "What place was the location of the ($x | Place_NP)?", "which place is the location of ($x | Place_NP)?", "which place is the location of the ($x | Place_NP)?", "which place was the location of ($x | Place_NP)?", "which place was the location of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#location-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all editors of ($x | Work_NP).", "Give me the ($x | Work_NP) editor.", "Give me the ($x | Work_NP) editors.", "List all editors of ($x | Work_NP).", "List all the editors of ($x | Work_NP).", "List all the persons with editor of ($x | Work_NP).", "show me all editors of ($x | Work_NP).", "which person is the editor of ($x | Work_NP)?", "which person is the editor of the ($x | Work_NP)?", "which person was the editor of ($x | Work_NP)?", "which person was the editor of the ($x | Work_NP)?", "which persons are the editors of ($x | Work_NP)?", "which persons are the editors of the ($x | Work_NP)?", "which persons were the editors of ($x | Work_NP)?", "which persons were the editors of the ($x | Work_NP)?", "Who person are the editors of ($x | Work_NP)?", "Who person are the editors of the ($x | Work_NP)?", "Who person is ($x | Work_NP) 's editor?", "Who person is the editor of ($x | Work_NP)?", "Who person is the editor of the ($x | Work_NP)?", "Who person was ($x | Work_NP) 's editor?", "Who person was the editor of ($x | Work_NP)?", "Who person was the editor of the ($x | Work_NP)?", "Who person were the editors of ($x | Work_NP)?", "Who person were the editors of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the editor of ($x | Work_NP)?", "the editors of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all loyalties  ($x | Loyalty_NP).", "Give me the ($x | Loyalty_NP) loyalties.", "Give me the ($x | Loyalty_NP) loyalty.", "List all loyalties  ($x | Loyalty_NP).", "List all the colors with loyalty  ($x | Loyalty_NP).", "List all the loyalties  ($x | Loyalty_NP).", "show me all loyalties  ($x | Loyalty_NP).", "What color are the loyalties  ($x | Loyalty_NP)?", "What color are the loyalties  the ($x | Loyalty_NP)?", "What color is ($x | Loyalty_NP) 's loyalty?", "What color is the loyalty  ($x | Loyalty_NP)?", "What color is the loyalty  the ($x | Loyalty_NP)?", "What color was ($x | Loyalty_NP) 's loyalty?", "What color was the loyalty  ($x | Loyalty_NP)?", "What color was the loyalty  the ($x | Loyalty_NP)?", "What color were the loyalties  ($x | Loyalty_NP)?", "What color were the loyalties  the ($x | Loyalty_NP)?", "which color is the loyalty  ($x | Loyalty_NP)?", "which color is the loyalty  the ($x | Loyalty_NP)?", "which color was the loyalty  ($x | Loyalty_NP)?", "which color was the loyalty  the ($x | Loyalty_NP)?", "which colors are the loyalties  ($x | Loyalty_NP)?", "which colors are the loyalties  the ($x | Loyalty_NP)?", "which colors were the loyalties  ($x | Loyalty_NP)?", "which colors were the loyalties  the ($x | Loyalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the loyalties  ($x | Loyalty_NP)?", "the loyalty  ($x | Loyalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | ComicsCharacter_NP) alter ego.", "List all the persons with alter ego of ($x | ComicsCharacter_NP).", "which person is the alter ego of ($x | ComicsCharacter_NP)?", "which person is the alter ego of the ($x | ComicsCharacter_NP)?", "which person was the alter ego of ($x | ComicsCharacter_NP)?", "which person was the alter ego of the ($x | ComicsCharacter_NP)?", "Who person is ($x | ComicsCharacter_NP) 's alter ego?", "Who person is the alter ego of ($x | ComicsCharacter_NP)?", "Who person is the alter ego of the ($x | ComicsCharacter_NP)?", "Who person was ($x | ComicsCharacter_NP) 's alter ego?", "Who person was the alter ego of ($x | ComicsCharacter_NP)?", "Who person was the alter ego of the ($x | ComicsCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ComicsCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the alter ego of ($x | ComicsCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all first Ascent Persons of ($x | Mountain_NP).", "Give me the ($x | Mountain_NP) first Ascent Person.", "Give me the ($x | Mountain_NP) first Ascent Persons.", "List all first Ascent Persons of ($x | Mountain_NP).", "List all the first Ascent Persons of ($x | Mountain_NP).", "List all the places with first Ascent Person of ($x | Mountain_NP).", "show me all first Ascent Persons of ($x | Mountain_NP).", "What place are the first Ascent Persons of ($x | Mountain_NP)?", "What place are the first Ascent Persons of the ($x | Mountain_NP)?", "What place is ($x | Mountain_NP) 's first Ascent Person?", "What place is the first Ascent Person of ($x | Mountain_NP)?", "What place is the first Ascent Person of the ($x | Mountain_NP)?", "What place was ($x | Mountain_NP) 's first Ascent Person?", "What place was the first Ascent Person of ($x | Mountain_NP)?", "What place was the first Ascent Person of the ($x | Mountain_NP)?", "What place were the first Ascent Persons of ($x | Mountain_NP)?", "What place were the first Ascent Persons of the ($x | Mountain_NP)?", "which place is the first Ascent Person of ($x | Mountain_NP)?", "which place is the first Ascent Person of the ($x | Mountain_NP)?", "which place was the first Ascent Person of ($x | Mountain_NP)?", "which place was the first Ascent Person of the ($x | Mountain_NP)?", "which places are the first Ascent Persons of ($x | Mountain_NP)?", "which places are the first Ascent Persons of the ($x | Mountain_NP)?", "which places were the first Ascent Persons of ($x | Mountain_NP)?", "which places were the first Ascent Persons of the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#firstAscentPerson-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Ascent Person of ($x | Mountain_NP)?", "the first Ascent Persons of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all isbns of ($x | Book_NP).", "Give me the ($x | Book_NP) isbn.", "Give me the ($x | Book_NP) isbns.", "List all isbns of ($x | Book_NP).", "List all the isbns of ($x | Book_NP).", "show me all isbns of ($x | Book_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#isbn-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the isbn of ($x | Book_NP)?", "the isbns of ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isbn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "Give me the ($x | City_NP) mayor.", "Give me the ($x | City_NP) mayors.", "List all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "List all the persons with mayor of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "which person is the mayor of ($x | City_NP)?", "which person is the mayor of the ($x | City_NP)?", "which person was the mayor of ($x | City_NP)?", "which person was the mayor of the ($x | City_NP)?", "which persons are the mayors of ($x | City_NP)?", "which persons are the mayors of the ($x | City_NP)?", "which persons were the mayors of ($x | City_NP)?", "which persons were the mayors of the ($x | City_NP)?", "Who person are the mayors of ($x | City_NP)?", "Who person are the mayors of the ($x | City_NP)?", "Who person is ($x | City_NP) 's mayor?", "Who person is the mayor of ($x | City_NP)?", "Who person is the mayor of the ($x | City_NP)?", "Who person was ($x | City_NP) 's mayor?", "Who person was the mayor of ($x | City_NP)?", "Who person was the mayor of the ($x | City_NP)?", "Who person were the mayors of ($x | City_NP)?", "Who person were the mayors of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "Give me the ($x | Country_NP) official language.", "Give me the ($x | Country_NP) official languages.", "List all official languages of ($x | Country_NP).", "List all the languages with official language of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What language are the official languages of ($x | Country_NP)?", "What language are the official languages of the ($x | Country_NP)?", "What language is ($x | Country_NP) 's official language?", "What language is the official language of ($x | Country_NP)?", "What language is the official language of the ($x | Country_NP)?", "What language was ($x | Country_NP) 's official language?", "What language was the official language of ($x | Country_NP)?", "What language was the official language of the ($x | Country_NP)?", "What language were the official languages of ($x | Country_NP)?", "What language were the official languages of the ($x | Country_NP)?", "which language is the official language of ($x | Country_NP)?", "which language is the official language of the ($x | Country_NP)?", "which language was the official language of ($x | Country_NP)?", "which language was the official language of the ($x | Country_NP)?", "which languages are the official languages of ($x | Country_NP)?", "which languages are the official languages of the ($x | Country_NP)?", "which languages were the official languages of ($x | Country_NP)?", "which languages were the official languages of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all leaders of ($x | Legislature_NP).", "Give me the ($x | Legislature_NP) leader.", "Give me the ($x | Legislature_NP) leaders.", "List all leaders of ($x | Legislature_NP).", "List all the leaders of ($x | Legislature_NP).", "List all the organizations with leader of ($x | Legislature_NP).", "show me all leaders of ($x | Legislature_NP).", "which organization is the leader of ($x | Legislature_NP)?", "which organization is the leader of the ($x | Legislature_NP)?", "which organization was the leader of ($x | Legislature_NP)?", "which organization was the leader of the ($x | Legislature_NP)?", "which organizations are the leaders of ($x | Legislature_NP)?", "which organizations are the leaders of the ($x | Legislature_NP)?", "which organizations were the leaders of ($x | Legislature_NP)?", "which organizations were the leaders of the ($x | Legislature_NP)?", "Who organization are the leaders of ($x | Legislature_NP)?", "Who organization are the leaders of the ($x | Legislature_NP)?", "Who organization is ($x | Legislature_NP) 's leader?", "Who organization is the leader of ($x | Legislature_NP)?", "Who organization is the leader of the ($x | Legislature_NP)?", "Who organization was ($x | Legislature_NP) 's leader?", "Who organization was the leader of ($x | Legislature_NP)?", "Who organization was the leader of the ($x | Legislature_NP)?", "Who organization were the leaders of ($x | Legislature_NP)?", "Who organization were the leaders of the ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#Leader-of-1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the leader of ($x | Legislature_NP)?", "the leaders of ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all programming languages of ($x | Work_NP).", "Give me the ($x | Work_NP) programming language.", "Give me the ($x | Work_NP) programming languages.", "List all programming languages of ($x | Work_NP).", "List all the programming languages of ($x | Work_NP).", "List all the programming languages with programming language of ($x | Work_NP).", "show me all programming languages of ($x | Work_NP).", "What programming language are the programming languages of ($x | Work_NP)?", "What programming language are the programming languages of the ($x | Work_NP)?", "What programming language is ($x | Work_NP) 's programming language?", "What programming language is the programming language of ($x | Work_NP)?", "What programming language is the programming language of the ($x | Work_NP)?", "What programming language was ($x | Work_NP) 's programming language?", "What programming language was the programming language of ($x | Work_NP)?", "What programming language was the programming language of the ($x | Work_NP)?", "What programming language were the programming languages of ($x | Work_NP)?", "What programming language were the programming languages of the ($x | Work_NP)?", "which programming language is the programming language of ($x | Work_NP)?", "which programming language is the programming language of the ($x | Work_NP)?", "which programming language was the programming language of ($x | Work_NP)?", "which programming language was the programming language of the ($x | Work_NP)?", "which programming languages are the programming languages of ($x | Work_NP)?", "which programming languages are the programming languages of the ($x | Work_NP)?", "which programming languages were the programming languages of ($x | Work_NP)?", "which programming languages were the programming languages of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the programming language of ($x | Work_NP)?", "the programming languages of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) resting place." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all employers of ($x | Person_NP).", "Give me the ($x | Person_NP) employer.", "Give me the ($x | Person_NP) employers.", "List all employers of ($x | Person_NP).", "List all the employers of ($x | Person_NP).", "List all the places with employer of ($x | Person_NP).", "show me all employers of ($x | Person_NP).", "What place are the employers of ($x | Person_NP)?", "What place are the employers of the ($x | Person_NP)?", "What place is ($x | Person_NP) 's employer?", "What place is the employer of ($x | Person_NP)?", "What place is the employer of the ($x | Person_NP)?", "What place was ($x | Person_NP) 's employer?", "What place was the employer of ($x | Person_NP)?", "What place was the employer of the ($x | Person_NP)?", "What place were the employers of ($x | Person_NP)?", "What place were the employers of the ($x | Person_NP)?", "which place is the employer of ($x | Person_NP)?", "which place is the employer of the ($x | Person_NP)?", "which place was the employer of ($x | Person_NP)?", "which place was the employer of the ($x | Person_NP)?", "which places are the employers of ($x | Person_NP)?", "which places are the employers of the ($x | Person_NP)?", "which places were the employers of ($x | Person_NP)?", "which places were the employers of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#employer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employer of ($x | Person_NP)?", "the employers of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/employer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all doctoral supervisors of ($x | Scientist_NP).", "Give me the ($x | Scientist_NP) doctoral supervisor.", "Give me the ($x | Scientist_NP) doctoral supervisors.", "List all doctoral supervisors of ($x | Scientist_NP).", "List all the doctoral supervisors of ($x | Scientist_NP).", "List all the persons with doctoral supervisor of ($x | Scientist_NP).", "show me all doctoral supervisors of ($x | Scientist_NP).", "which person is the doctoral supervisor of ($x | Scientist_NP)?", "which person is the doctoral supervisor of the ($x | Scientist_NP)?", "which person was the doctoral supervisor of ($x | Scientist_NP)?", "which person was the doctoral supervisor of the ($x | Scientist_NP)?", "which persons are the doctoral supervisors of ($x | Scientist_NP)?", "which persons are the doctoral supervisors of the ($x | Scientist_NP)?", "which persons were the doctoral supervisors of ($x | Scientist_NP)?", "which persons were the doctoral supervisors of the ($x | Scientist_NP)?", "Who person are the doctoral supervisors of ($x | Scientist_NP)?", "Who person are the doctoral supervisors of the ($x | Scientist_NP)?", "Who person is ($x | Scientist_NP) 's doctoral supervisor?", "Who person is the doctoral supervisor of ($x | Scientist_NP)?", "Who person is the doctoral supervisor of the ($x | Scientist_NP)?", "Who person was ($x | Scientist_NP) 's doctoral supervisor?", "Who person was the doctoral supervisor of ($x | Scientist_NP)?", "Who person was the doctoral supervisor of the ($x | Scientist_NP)?", "Who person were the doctoral supervisors of ($x | Scientist_NP)?", "Who person were the doctoral supervisors of the ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the doctoral supervisor of ($x | Scientist_NP)?", "the doctoral supervisors of ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all producers of ($x | Film_NP).", "Give me the ($x | Film_NP) producer.", "Give me the ($x | Film_NP) producers.", "List all producers of ($x | Film_NP).", "List all the company with producer of ($x | Film_NP).", "List all the producers of ($x | Film_NP).", "show me all producers of ($x | Film_NP).", "which company are the producers of ($x | Film_NP)?", "which company are the producers of the ($x | Film_NP)?", "which company is the producer of ($x | Film_NP)?", "which company is the producer of the ($x | Film_NP)?", "which company was the producer of ($x | Film_NP)?", "which company was the producer of the ($x | Film_NP)?", "which company were the producers of ($x | Film_NP)?", "which company were the producers of the ($x | Film_NP)?", "Who company are the producers of ($x | Film_NP)?", "Who company are the producers of the ($x | Film_NP)?", "Who company is ($x | Film_NP) 's producer?", "Who company is the producer of ($x | Film_NP)?", "Who company is the producer of the ($x | Film_NP)?", "Who company was ($x | Film_NP) 's producer?", "Who company was the producer of ($x | Film_NP)?", "Who company was the producer of the ($x | Film_NP)?", "Who company were the producers of ($x | Film_NP)?", "Who company were the producers of the ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the producer of ($x | Film_NP)?", "the producers of ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all hosts of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) host.", "Give me the ($x | TelevisionShow_NP) hosts.", "List all hosts of ($x | TelevisionShow_NP).", "List all the hosts of ($x | TelevisionShow_NP).", "List all the persons with host of ($x | TelevisionShow_NP).", "show me all hosts of ($x | TelevisionShow_NP).", "which person is the host of ($x | TelevisionShow_NP)?", "which person is the host of the ($x | TelevisionShow_NP)?", "which person was the host of ($x | TelevisionShow_NP)?", "which person was the host of the ($x | TelevisionShow_NP)?", "which persons are the hosts of ($x | TelevisionShow_NP)?", "which persons are the hosts of the ($x | TelevisionShow_NP)?", "which persons were the hosts of ($x | TelevisionShow_NP)?", "which persons were the hosts of the ($x | TelevisionShow_NP)?", "Who person are the hosts of ($x | TelevisionShow_NP)?", "Who person are the hosts of the ($x | TelevisionShow_NP)?", "Who person is ($x | TelevisionShow_NP) 's host?", "Who person is the host of ($x | TelevisionShow_NP)?", "Who person is the host of the ($x | TelevisionShow_NP)?", "Who person was ($x | TelevisionShow_NP) 's host?", "Who person was the host of ($x | TelevisionShow_NP)?", "Who person was the host of the ($x | TelevisionShow_NP)?", "Who person were the hosts of ($x | TelevisionShow_NP)?", "Who person were the hosts of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the host of ($x | TelevisionShow_NP)?", "the hosts of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all owners of ($x | Company_NP).", "Give me the ($x | Company_NP) owner.", "Give me the ($x | Company_NP) owners.", "List all owners of ($x | Company_NP).", "List all the owners of ($x | Company_NP).", "List all the persons with owner of ($x | Company_NP).", "show me all owners of ($x | Company_NP).", "which person is the owner of ($x | Company_NP)?", "which person is the owner of the ($x | Company_NP)?", "which person was the owner of ($x | Company_NP)?", "which person was the owner of the ($x | Company_NP)?", "which persons are the owners of ($x | Company_NP)?", "which persons are the owners of the ($x | Company_NP)?", "which persons were the owners of ($x | Company_NP)?", "which persons were the owners of the ($x | Company_NP)?", "Who person are the owners of ($x | Company_NP)?", "Who person are the owners of the ($x | Company_NP)?", "Who person is ($x | Company_NP) 's owner?", "Who person is the owner of ($x | Company_NP)?", "Who person is the owner of the ($x | Company_NP)?", "Who person was ($x | Company_NP) 's owner?", "Who person was the owner of ($x | Company_NP)?", "Who person was the owner of the ($x | Company_NP)?", "Who person were the owners of ($x | Company_NP)?", "Who person were the owners of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#owner_of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the owner of ($x | Company_NP)?", "the owners of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all residences of ($x | Place_NP).", "Give me the ($x | Place_NP) residence.", "Give me the ($x | Place_NP) residences.", "List all residences of ($x | Place_NP).", "List all the persons with residence of ($x | Place_NP).", "List all the residences of ($x | Place_NP).", "show me all residences of ($x | Place_NP).", "which person is the residence of ($x | Place_NP)?", "which person is the residence of the ($x | Place_NP)?", "which person was the residence of ($x | Place_NP)?", "which person was the residence of the ($x | Place_NP)?", "which persons are the residences of ($x | Place_NP)?", "which persons are the residences of the ($x | Place_NP)?", "which persons were the residences of ($x | Place_NP)?", "which persons were the residences of the ($x | Place_NP)?", "Who person are the residences of ($x | Place_NP)?", "Who person are the residences of the ($x | Place_NP)?", "Who person is ($x | Place_NP) 's residence?", "Who person is the residence of ($x | Place_NP)?", "Who person is the residence of the ($x | Place_NP)?", "Who person was ($x | Place_NP) 's residence?", "Who person was the residence of ($x | Place_NP)?", "Who person was the residence of the ($x | Place_NP)?", "Who person were the residences of ($x | Place_NP)?", "Who person were the residences of the ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Place_NP)?", "the residences of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all closing Dates of ($x | Company_NP).", "Give me the ($x | Company_NP) closing Date.", "Give me the ($x | Company_NP) closing Dates.", "List all closing Dates of ($x | Company_NP).", "List all the closing Dates of ($x | Company_NP).", "show me all closing Dates of ($x | Company_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#closingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the closing Date of ($x | Company_NP)?", "the closing Dates of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/closingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all residences of ($x | Person_NP).", "Give me the ($x | Person_NP) residence.", "Give me the ($x | Person_NP) residences.", "List all residences of ($x | Person_NP).", "List all the cities with residence of ($x | Person_NP).", "List all the residences of ($x | Person_NP).", "show me all residences of ($x | Person_NP).", "What city are the residences of ($x | Person_NP)?", "What city are the residences of the ($x | Person_NP)?", "What city is ($x | Person_NP) 's residence?", "What city is the residence of ($x | Person_NP)?", "What city is the residence of the ($x | Person_NP)?", "What city was ($x | Person_NP) 's residence?", "What city was the residence of ($x | Person_NP)?", "What city was the residence of the ($x | Person_NP)?", "What city were the residences of ($x | Person_NP)?", "What city were the residences of the ($x | Person_NP)?", "which cities are the residences of ($x | Person_NP)?", "which cities are the residences of the ($x | Person_NP)?", "which cities were the residences of ($x | Person_NP)?", "which cities were the residences of the ($x | Person_NP)?", "which city is the residence of ($x | Person_NP)?", "which city is the residence of the ($x | Person_NP)?", "which city was the residence of ($x | Person_NP)?", "which city was the residence of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#residence_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the residence of ($x | Person_NP)?", "the residences of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Building_NP) headquarter.", "List all the cities with headquarter of ($x | Building_NP).", "What city is ($x | Building_NP) 's headquarter?", "What city is the headquarter of ($x | Building_NP)?", "What city is the headquarter of the ($x | Building_NP)?", "What city was ($x | Building_NP) 's headquarter?", "What city was the headquarter of ($x | Building_NP)?", "What city was the headquarter of the ($x | Building_NP)?", "which city is the headquarter of ($x | Building_NP)?", "which city is the headquarter of the ($x | Building_NP)?", "which city was the headquarter of ($x | Building_NP)?", "which city was the headquarter of the ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Building" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Organisation_NP) headquarter.", "List all the populated places with headquarter of ($x | Organisation_NP).", "What populated place is ($x | Organisation_NP) 's headquarter?", "What populated place is the headquarter of ($x | Organisation_NP)?", "What populated place is the headquarter of the ($x | Organisation_NP)?", "What populated place was ($x | Organisation_NP) 's headquarter?", "What populated place was the headquarter of ($x | Organisation_NP)?", "What populated place was the headquarter of the ($x | Organisation_NP)?", "which populated place is the headquarter of ($x | Organisation_NP)?", "which populated place is the headquarter of the ($x | Organisation_NP)?", "which populated place was the headquarter of ($x | Organisation_NP)?", "which populated place was the headquarter of the ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the headquarter of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | City_NP) area code." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the area code of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all presidents of ($x | Country_NP).", "Give me the ($x | Country_NP) president.", "Give me the ($x | Country_NP) presidents.", "List all presidents of ($x | Country_NP).", "List all the persons with president of ($x | Country_NP).", "List all the presidents of ($x | Country_NP).", "show me all presidents of ($x | Country_NP).", "which person is the president of ($x | Country_NP)?", "which person is the president of the ($x | Country_NP)?", "which person was the president of ($x | Country_NP)?", "which person was the president of the ($x | Country_NP)?", "which persons are the presidents of ($x | Country_NP)?", "which persons are the presidents of the ($x | Country_NP)?", "which persons were the presidents of ($x | Country_NP)?", "which persons were the presidents of the ($x | Country_NP)?", "Who person are the presidents of ($x | Country_NP)?", "Who person are the presidents of the ($x | Country_NP)?", "Who person is ($x | Country_NP) 's president?", "Who person is the president of ($x | Country_NP)?", "Who person is the president of the ($x | Country_NP)?", "Who person was ($x | Country_NP) 's president?", "Who person was the president of ($x | Country_NP)?", "Who person was the president of the ($x | Country_NP)?", "Who person were the presidents of ($x | Country_NP)?", "Who person were the presidents of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Country_NP)?", "the presidents of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Company_NP) number of locations." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of locations of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) music composer.", "Give me the ($x | TelevisionShow_NP) music composers.", "List all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "List all the persons with music composer of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person is the music composer of the ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of the ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons are the music composers of the ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of the ($x | TelevisionShow_NP)?", "Who person are the music composers of ($x | TelevisionShow_NP)?", "Who person are the music composers of the ($x | TelevisionShow_NP)?", "Who person is ($x | TelevisionShow_NP) 's music composer?", "Who person is the music composer of ($x | TelevisionShow_NP)?", "Who person is the music composer of the ($x | TelevisionShow_NP)?", "Who person was ($x | TelevisionShow_NP) 's music composer?", "Who person was the music composer of ($x | TelevisionShow_NP)?", "Who person was the music composer of the ($x | TelevisionShow_NP)?", "Who person were the music composers of ($x | TelevisionShow_NP)?", "Who person were the music composers of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Mountain_NP) first to climb.", "List all the persons with first to climb  ($x | Mountain_NP).", "which person is the first to climb  ($x | Mountain_NP)?", "which person is the first to climb  the ($x | Mountain_NP)?", "which person was the first to climb  ($x | Mountain_NP)?", "which person was the first to climb  the ($x | Mountain_NP)?", "Who person is ($x | Mountain_NP) 's first to climb?", "Who person is the first to climb  ($x | Mountain_NP)?", "Who person is the first to climb  the ($x | Mountain_NP)?", "Who person was ($x | Mountain_NP) 's first to climb?", "Who person was the first to climb  ($x | Mountain_NP)?", "Who person was the first to climb  the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#first_to_climb",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first to climb  ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "Give me the ($x | Food_NP) ingredient.", "Give me the ($x | Food_NP) ingredients.", "List all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all ingredients of ($x | Food_NP).", "Give me the ($x | Food_NP) ingredient.", "Give me the ($x | Food_NP) ingredients.", "List all ingredients of ($x | Food_NP).", "List all the ingredients of ($x | Food_NP).", "show me all ingredients of ($x | Food_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the ingredient of ($x | Food_NP)?", "the ingredients of ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all cities of ($x | AdministrativeRegion_NP).", "Give me the ($x | AdministrativeRegion_NP) cities.", "Give me the ($x | AdministrativeRegion_NP) city.", "List all cities of ($x | AdministrativeRegion_NP).", "List all the cities of ($x | AdministrativeRegion_NP).", "List all the cities with city of ($x | AdministrativeRegion_NP).", "show me all cities of ($x | AdministrativeRegion_NP).", "What city are the cities of ($x | AdministrativeRegion_NP)?", "What city are the cities of the ($x | AdministrativeRegion_NP)?", "What city is ($x | AdministrativeRegion_NP) 's city?", "What city is the city of ($x | AdministrativeRegion_NP)?", "What city is the city of the ($x | AdministrativeRegion_NP)?", "What city was ($x | AdministrativeRegion_NP) 's city?", "What city was the city of ($x | AdministrativeRegion_NP)?", "What city was the city of the ($x | AdministrativeRegion_NP)?", "What city were the cities of ($x | AdministrativeRegion_NP)?", "What city were the cities of the ($x | AdministrativeRegion_NP)?", "which cities are the cities of ($x | AdministrativeRegion_NP)?", "which cities are the cities of the ($x | AdministrativeRegion_NP)?", "which cities were the cities of ($x | AdministrativeRegion_NP)?", "which cities were the cities of the ($x | AdministrativeRegion_NP)?", "which city is the city of ($x | AdministrativeRegion_NP)?", "which city is the city of the ($x | AdministrativeRegion_NP)?", "which city was the city of ($x | AdministrativeRegion_NP)?", "which city was the city of the ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities of ($x | AdministrativeRegion_NP)?", "the city of ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all flags of ($x | Place_NP).", "Give me the ($x | Place_NP) flag.", "Give me the ($x | Place_NP) flags.", "List all flags of ($x | Place_NP).", "List all the flags of ($x | Place_NP).", "show me all flags of ($x | Place_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#flag-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the flag of ($x | Place_NP)?", "the flags of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/flag> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "Give me the ($x | Person_NP) son.", "Give me the ($x | Person_NP) sons.", "List all sons of ($x | Person_NP).", "List all the persons with son of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person is the son of the ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which person was the son of the ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons are the sons of the ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "which persons were the sons of the ($x | Person_NP)?", "Who person are the sons of ($x | Person_NP)?", "Who person are the sons of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's son?", "Who person is the son of ($x | Person_NP)?", "Who person is the son of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's son?", "Who person was the son of ($x | Person_NP)?", "Who person was the son of the ($x | Person_NP)?", "Who person were the sons of ($x | Person_NP)?", "Who person were the sons of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all sons of ($x | Person_NP).", "Give me the ($x | Person_NP) son.", "Give me the ($x | Person_NP) sons.", "List all sons of ($x | Person_NP).", "List all the persons with son of ($x | Person_NP).", "List all the sons of ($x | Person_NP).", "show me all sons of ($x | Person_NP).", "which person is the son of ($x | Person_NP)?", "which person is the son of the ($x | Person_NP)?", "which person was the son of ($x | Person_NP)?", "which person was the son of the ($x | Person_NP)?", "which persons are the sons of ($x | Person_NP)?", "which persons are the sons of the ($x | Person_NP)?", "which persons were the sons of ($x | Person_NP)?", "which persons were the sons of the ($x | Person_NP)?", "Who person are the sons of ($x | Person_NP)?", "Who person are the sons of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's son?", "Who person is the son of ($x | Person_NP)?", "Who person is the son of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's son?", "Who person was the son of ($x | Person_NP)?", "Who person was the son of the ($x | Person_NP)?", "Who person were the sons of ($x | Person_NP)?", "Who person were the sons of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the son of ($x | Person_NP)?", "the sons of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all boardgames by ($x | Work_NP).", "Give me the ($x | Work_NP) boardgame.", "Give me the ($x | Work_NP) boardgames.", "List all boardgames by ($x | Work_NP).", "List all the agents with boardgame by ($x | Work_NP).", "List all the boardgames by ($x | Work_NP).", "show me all boardgames by ($x | Work_NP).", "which agent is the boardgame by ($x | Work_NP)?", "which agent is the boardgame by the ($x | Work_NP)?", "which agent was the boardgame by ($x | Work_NP)?", "which agent was the boardgame by the ($x | Work_NP)?", "which agents are the boardgames by ($x | Work_NP)?", "which agents are the boardgames by the ($x | Work_NP)?", "which agents were the boardgames by ($x | Work_NP)?", "which agents were the boardgames by the ($x | Work_NP)?", "Who agent are the boardgames by ($x | Work_NP)?", "Who agent are the boardgames by the ($x | Work_NP)?", "Who agent is ($x | Work_NP) 's boardgame?", "Who agent is the boardgame by ($x | Work_NP)?", "Who agent is the boardgame by the ($x | Work_NP)?", "Who agent was ($x | Work_NP) 's boardgame?", "Who agent was the boardgame by ($x | Work_NP)?", "Who agent was the boardgame by the ($x | Work_NP)?", "Who agent were the boardgames by ($x | Work_NP)?", "Who agent were the boardgames by the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#boardgame_by_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the boardgame by ($x | Work_NP)?", "the boardgames by ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all kings of ($x | Legislature_NP).", "Give me the ($x | Legislature_NP) king.", "Give me the ($x | Legislature_NP) kings.", "List all kings of ($x | Legislature_NP).", "List all the kings of ($x | Legislature_NP).", "List all the persons with king of ($x | Legislature_NP).", "show me all kings of ($x | Legislature_NP).", "which person is the king of ($x | Legislature_NP)?", "which person is the king of the ($x | Legislature_NP)?", "which person was the king of ($x | Legislature_NP)?", "which person was the king of the ($x | Legislature_NP)?", "which persons are the kings of ($x | Legislature_NP)?", "which persons are the kings of the ($x | Legislature_NP)?", "which persons were the kings of ($x | Legislature_NP)?", "which persons were the kings of the ($x | Legislature_NP)?", "Who person are the kings of ($x | Legislature_NP)?", "Who person are the kings of the ($x | Legislature_NP)?", "Who person is ($x | Legislature_NP) 's king?", "Who person is the king of ($x | Legislature_NP)?", "Who person is the king of the ($x | Legislature_NP)?", "Who person was ($x | Legislature_NP) 's king?", "Who person was the king of ($x | Legislature_NP)?", "Who person was the king of the ($x | Legislature_NP)?", "Who person were the kings of ($x | Legislature_NP)?", "Who person were the kings of the ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#king-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the king of ($x | Legislature_NP)?", "the kings of ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Mountain_NP) location.", "List all the countries with location of ($x | Mountain_NP).", "What country is ($x | Mountain_NP) 's location?", "What country is the location of ($x | Mountain_NP)?", "What country is the location of the ($x | Mountain_NP)?", "What country was ($x | Mountain_NP) 's location?", "What country was the location of ($x | Mountain_NP)?", "What country was the location of the ($x | Mountain_NP)?", "which country is the location of ($x | Mountain_NP)?", "which country is the location of the ($x | Mountain_NP)?", "which country was the location of ($x | Mountain_NP)?", "which country was the location of the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#location-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the location of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all games by ($x | Company_NP).", "Give me the ($x | Company_NP) game.", "Give me the ($x | Company_NP) games.", "List all games by ($x | Company_NP).", "List all the company with game by ($x | Company_NP).", "List all the games by ($x | Company_NP).", "show me all games by ($x | Company_NP).", "What company are the games by ($x | Company_NP)?", "What company are the games by the ($x | Company_NP)?", "What company is ($x | Company_NP) 's game?", "What company is the game by ($x | Company_NP)?", "What company is the game by the ($x | Company_NP)?", "What company was ($x | Company_NP) 's game?", "What company was the game by ($x | Company_NP)?", "What company was the game by the ($x | Company_NP)?", "What company were the games by ($x | Company_NP)?", "What company were the games by the ($x | Company_NP)?", "which company are the games by ($x | Company_NP)?", "which company are the games by the ($x | Company_NP)?", "which company is the game by ($x | Company_NP)?", "which company is the game by the ($x | Company_NP)?", "which company was the game by ($x | Company_NP)?", "which company was the game by the ($x | Company_NP)?", "which company were the games by ($x | Company_NP)?", "which company were the games by the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#game_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the game by ($x | Company_NP)?", "the games by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all borough of ($x | Thing_NP).", "Give me the ($x | Thing_NP) borough.", "List all borough of ($x | Thing_NP).", "List all the borough of ($x | Thing_NP).", "show me all borough of ($x | Thing_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#borough-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the borough of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all musics by ($x | Musical_NP).", "Give me the ($x | Musical_NP) music.", "Give me the ($x | Musical_NP) musics.", "List all musics by ($x | Musical_NP).", "List all the musicals with music by ($x | Musical_NP).", "List all the musics by ($x | Musical_NP).", "show me all musics by ($x | Musical_NP).", "which musical is the music by ($x | Musical_NP)?", "which musical is the music by the ($x | Musical_NP)?", "which musical was the music by ($x | Musical_NP)?", "which musical was the music by the ($x | Musical_NP)?", "which musicals are the musics by ($x | Musical_NP)?", "which musicals are the musics by the ($x | Musical_NP)?", "which musicals were the musics by ($x | Musical_NP)?", "which musicals were the musics by the ($x | Musical_NP)?", "Who musical are the musics by ($x | Musical_NP)?", "Who musical are the musics by the ($x | Musical_NP)?", "Who musical is ($x | Musical_NP) 's music?", "Who musical is the music by ($x | Musical_NP)?", "Who musical is the music by the ($x | Musical_NP)?", "Who musical was ($x | Musical_NP) 's music?", "Who musical was the music by ($x | Musical_NP)?", "Who musical was the music by the ($x | Musical_NP)?", "Who musical were the musics by ($x | Musical_NP)?", "Who musical were the musics by the ($x | Musical_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Musical" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music by ($x | Musical_NP)?", "the musics by ($x | Musical_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all foundation series of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) foundation series.", "List all foundation series of ($x | TelevisionShow_NP).", "List all the foundation series of ($x | TelevisionShow_NP).", "List all the persons with foundation series of ($x | TelevisionShow_NP).", "show me all foundation series of ($x | TelevisionShow_NP).", "which person is the foundation series of ($x | TelevisionShow_NP)?", "which person is the foundation series of the ($x | TelevisionShow_NP)?", "which person was the foundation series of ($x | TelevisionShow_NP)?", "which person was the foundation series of the ($x | TelevisionShow_NP)?", "which persons are the foundation series of ($x | TelevisionShow_NP)?", "which persons are the foundation series of the ($x | TelevisionShow_NP)?", "which persons were the foundation series of ($x | TelevisionShow_NP)?", "which persons were the foundation series of the ($x | TelevisionShow_NP)?", "Who person are the foundation series of ($x | TelevisionShow_NP)?", "Who person are the foundation series of the ($x | TelevisionShow_NP)?", "Who person is ($x | TelevisionShow_NP) 's foundation series?", "Who person is the foundation series of ($x | TelevisionShow_NP)?", "Who person is the foundation series of the ($x | TelevisionShow_NP)?", "Who person was ($x | TelevisionShow_NP) 's foundation series?", "Who person was the foundation series of ($x | TelevisionShow_NP)?", "Who person was the foundation series of the ($x | TelevisionShow_NP)?", "Who person were the foundation series of ($x | TelevisionShow_NP)?", "Who person were the foundation series of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation series of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all presidents of ($x | Person_NP).", "Give me the ($x | Person_NP) president.", "Give me the ($x | Person_NP) presidents.", "List all presidents of ($x | Person_NP).", "List all the presidents of ($x | Person_NP).", "show me all presidents of ($x | Person_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#president-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the president of ($x | Person_NP)?", "the presidents of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "Give me the ($x | Politician_NP) parties.", "Give me the ($x | Politician_NP) party.", "List all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all parties of ($x | Politician_NP).", "Give me the ($x | Politician_NP) parties.", "Give me the ($x | Politician_NP) party.", "List all parties of ($x | Politician_NP).", "List all the parties of ($x | Politician_NP).", "show me all parties of ($x | Politician_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parties of ($x | Politician_NP)?", "the party of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | PopulatedPlace_NP) population." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#population-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the population of ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all official languages of ($x | Country_NP).", "Give me the ($x | Country_NP) official language.", "Give me the ($x | Country_NP) official languages.", "List all official languages of ($x | Country_NP).", "List all the languages with official language of ($x | Country_NP).", "List all the official languages of ($x | Country_NP).", "show me all official languages of ($x | Country_NP).", "What language are the official languages of ($x | Country_NP)?", "What language are the official languages of the ($x | Country_NP)?", "What language is ($x | Country_NP) 's official language?", "What language is the official language of ($x | Country_NP)?", "What language is the official language of the ($x | Country_NP)?", "What language was ($x | Country_NP) 's official language?", "What language was the official language of ($x | Country_NP)?", "What language was the official language of the ($x | Country_NP)?", "What language were the official languages of ($x | Country_NP)?", "What language were the official languages of the ($x | Country_NP)?", "which language is the official language of ($x | Country_NP)?", "which language is the official language of the ($x | Country_NP)?", "which language was the official language of ($x | Country_NP)?", "which language was the official language of the ($x | Country_NP)?", "which languages are the official languages of ($x | Country_NP)?", "which languages are the official languages of the ($x | Country_NP)?", "which languages were the official languages of ($x | Country_NP)?", "which languages were the official languages of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the official language of ($x | Country_NP)?", "the official languages of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Country_NP) form of government.", "List all the countries with form of government of ($x | Country_NP).", "What country is ($x | Country_NP) 's form of government?", "What country is the form of government of ($x | Country_NP)?", "What country is the form of government of the ($x | Country_NP)?", "What country was ($x | Country_NP) 's form of government?", "What country was the form of government of ($x | Country_NP)?", "What country was the form of government of the ($x | Country_NP)?", "which country is the form of government of ($x | Country_NP)?", "which country is the form of government of the ($x | Country_NP)?", "which country was the form of government of ($x | Country_NP)?", "which country was the form of government of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the form of government of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | AdministrativeRegion_NP) dissolution date." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the dissolution date of ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "Give me the ($x | Country_NP) currencies.", "Give me the ($x | Country_NP) currency.", "List all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "List all the currencies with currency of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What currency are the currencies of ($x | Country_NP)?", "What currency are the currencies of the ($x | Country_NP)?", "What currency is ($x | Country_NP) 's currency?", "What currency is the currency of ($x | Country_NP)?", "What currency is the currency of the ($x | Country_NP)?", "What currency was ($x | Country_NP) 's currency?", "What currency was the currency of ($x | Country_NP)?", "What currency was the currency of the ($x | Country_NP)?", "What currency were the currencies of ($x | Country_NP)?", "What currency were the currencies of the ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies are the currencies of the ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currencies were the currencies of the ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency is the currency of the ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?", "which currency was the currency of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all currencies of ($x | Country_NP).", "Give me the ($x | Country_NP) currencies.", "Give me the ($x | Country_NP) currency.", "List all currencies of ($x | Country_NP).", "List all the currencies of ($x | Country_NP).", "List all the currencies with currency of ($x | Country_NP).", "show me all currencies of ($x | Country_NP).", "What currency are the currencies of ($x | Country_NP)?", "What currency are the currencies of the ($x | Country_NP)?", "What currency is ($x | Country_NP) 's currency?", "What currency is the currency of ($x | Country_NP)?", "What currency is the currency of the ($x | Country_NP)?", "What currency was ($x | Country_NP) 's currency?", "What currency was the currency of ($x | Country_NP)?", "What currency was the currency of the ($x | Country_NP)?", "What currency were the currencies of ($x | Country_NP)?", "What currency were the currencies of the ($x | Country_NP)?", "which currencies are the currencies of ($x | Country_NP)?", "which currencies are the currencies of the ($x | Country_NP)?", "which currencies were the currencies of ($x | Country_NP)?", "which currencies were the currencies of the ($x | Country_NP)?", "which currency is the currency of ($x | Country_NP)?", "which currency is the currency of the ($x | Country_NP)?", "which currency was the currency of ($x | Country_NP)?", "which currency was the currency of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the currencies of ($x | Country_NP)?", "the currency of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) religion." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the religion of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all founders of ($x | Thing_NP).", "Give me the ($x | Thing_NP) founder.", "Give me the ($x | Thing_NP) founders.", "List all founders of ($x | Thing_NP).", "List all the company with founder of ($x | Thing_NP).", "List all the founders of ($x | Thing_NP).", "show me all founders of ($x | Thing_NP).", "which company are the founders of ($x | Thing_NP)?", "which company are the founders of the ($x | Thing_NP)?", "which company is the founder of ($x | Thing_NP)?", "which company is the founder of the ($x | Thing_NP)?", "which company was the founder of ($x | Thing_NP)?", "which company was the founder of the ($x | Thing_NP)?", "which company were the founders of ($x | Thing_NP)?", "which company were the founders of the ($x | Thing_NP)?", "Who company are the founders of ($x | Thing_NP)?", "Who company are the founders of the ($x | Thing_NP)?", "Who company is ($x | Thing_NP) 's founder?", "Who company is the founder of ($x | Thing_NP)?", "Who company is the founder of the ($x | Thing_NP)?", "Who company was ($x | Thing_NP) 's founder?", "Who company was the founder of ($x | Thing_NP)?", "Who company was the founder of the ($x | Thing_NP)?", "Who company were the founders of ($x | Thing_NP)?", "Who company were the founders of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Thing_NP)?", "the founders of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all children of ($x | Person_NP).", "Give me the ($x | Person_NP) child.", "Give me the ($x | Person_NP) children.", "List all children of ($x | Person_NP).", "List all the children of ($x | Person_NP).", "List all the persons with child of ($x | Person_NP).", "show me all children of ($x | Person_NP).", "which person is the child of ($x | Person_NP)?", "which person is the child of the ($x | Person_NP)?", "which person was the child of ($x | Person_NP)?", "which person was the child of the ($x | Person_NP)?", "which persons are the children of ($x | Person_NP)?", "which persons are the children of the ($x | Person_NP)?", "which persons were the children of ($x | Person_NP)?", "which persons were the children of the ($x | Person_NP)?", "Who person are the children of ($x | Person_NP)?", "Who person are the children of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's child?", "Who person is the child of ($x | Person_NP)?", "Who person is the child of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's child?", "Who person was the child of ($x | Person_NP)?", "Who person was the child of the ($x | Person_NP)?", "Who person were the children of ($x | Person_NP)?", "Who person were the children of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the child of ($x | Person_NP)?", "the children of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all founders of ($x | Publisher_NP).", "Give me the ($x | Publisher_NP) founder.", "Give me the ($x | Publisher_NP) founders.", "List all founders of ($x | Publisher_NP).", "List all the agents with founder of ($x | Publisher_NP).", "List all the founders of ($x | Publisher_NP).", "show me all founders of ($x | Publisher_NP).", "which agent is the founder of ($x | Publisher_NP)?", "which agent is the founder of the ($x | Publisher_NP)?", "which agent was the founder of ($x | Publisher_NP)?", "which agent was the founder of the ($x | Publisher_NP)?", "which agents are the founders of ($x | Publisher_NP)?", "which agents are the founders of the ($x | Publisher_NP)?", "which agents were the founders of ($x | Publisher_NP)?", "which agents were the founders of the ($x | Publisher_NP)?", "Who agent are the founders of ($x | Publisher_NP)?", "Who agent are the founders of the ($x | Publisher_NP)?", "Who agent is ($x | Publisher_NP) 's founder?", "Who agent is the founder of ($x | Publisher_NP)?", "Who agent is the founder of the ($x | Publisher_NP)?", "Who agent was ($x | Publisher_NP) 's founder?", "Who agent was the founder of ($x | Publisher_NP)?", "Who agent was the founder of the ($x | Publisher_NP)?", "Who agent were the founders of ($x | Publisher_NP)?", "Who agent were the founders of the ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_1",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Publisher_NP)?", "the founders of ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Company_NP) foundation place.", "List all the cities with foundation place of ($x | Company_NP).", "What city is ($x | Company_NP) 's foundation place?", "What city is the foundation place of ($x | Company_NP)?", "What city is the foundation place of the ($x | Company_NP)?", "What city was ($x | Company_NP) 's foundation place?", "What city was the foundation place of ($x | Company_NP)?", "What city was the foundation place of the ($x | Company_NP)?", "which city is the foundation place of ($x | Company_NP)?", "which city is the foundation place of the ($x | Company_NP)?", "which city was the foundation place of ($x | Company_NP)?", "which city was the foundation place of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the foundation place of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) nationality.", "List all the countries with nationality of ($x | Person_NP).", "What country is ($x | Person_NP) 's nationality?", "What country is the nationality of ($x | Person_NP)?", "What country is the nationality of the ($x | Person_NP)?", "What country was ($x | Person_NP) 's nationality?", "What country was the nationality of ($x | Person_NP)?", "What country was the nationality of the ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country is the nationality of the ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?", "which country was the nationality of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Royalty_NP) father.", "List all the persons with father of ($x | Royalty_NP).", "which person is the father of ($x | Royalty_NP)?", "which person is the father of the ($x | Royalty_NP)?", "which person was the father of ($x | Royalty_NP)?", "which person was the father of the ($x | Royalty_NP)?", "Who person is ($x | Royalty_NP) 's father?", "Who person is the father of ($x | Royalty_NP)?", "Who person is the father of the ($x | Royalty_NP)?", "Who person was ($x | Royalty_NP) 's father?", "Who person was the father of ($x | Royalty_NP)?", "Who person was the father of the ($x | Royalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the father of ($x | Royalty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all music composers of ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) music composer.", "Give me the ($x | TelevisionShow_NP) music composers.", "List all music composers of ($x | TelevisionShow_NP).", "List all the music composers of ($x | TelevisionShow_NP).", "List all the persons with music composer of ($x | TelevisionShow_NP).", "show me all music composers of ($x | TelevisionShow_NP).", "which person is the music composer of ($x | TelevisionShow_NP)?", "which person is the music composer of the ($x | TelevisionShow_NP)?", "which person was the music composer of ($x | TelevisionShow_NP)?", "which person was the music composer of the ($x | TelevisionShow_NP)?", "which persons are the music composers of ($x | TelevisionShow_NP)?", "which persons are the music composers of the ($x | TelevisionShow_NP)?", "which persons were the music composers of ($x | TelevisionShow_NP)?", "which persons were the music composers of the ($x | TelevisionShow_NP)?", "Who person are the music composers of ($x | TelevisionShow_NP)?", "Who person are the music composers of the ($x | TelevisionShow_NP)?", "Who person is ($x | TelevisionShow_NP) 's music composer?", "Who person is the music composer of ($x | TelevisionShow_NP)?", "Who person is the music composer of the ($x | TelevisionShow_NP)?", "Who person was ($x | TelevisionShow_NP) 's music composer?", "Who person was the music composer of ($x | TelevisionShow_NP)?", "Who person was the music composer of the ($x | TelevisionShow_NP)?", "Who person were the music composers of ($x | TelevisionShow_NP)?", "Who person were the music composers of the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the music composer of ($x | TelevisionShow_NP)?", "the music composers of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Country_NP) largest city.", "List all the cities with largest city of ($x | Country_NP).", "What city is ($x | Country_NP) 's largest city?", "What city is the largest city of ($x | Country_NP)?", "What city is the largest city of the ($x | Country_NP)?", "What city was ($x | Country_NP) 's largest city?", "What city was the largest city of ($x | Country_NP)?", "What city was the largest city of the ($x | Country_NP)?", "which city is the largest city of ($x | Country_NP)?", "which city is the largest city of the ($x | Country_NP)?", "which city was the largest city of ($x | Country_NP)?", "which city was the largest city of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest city of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) birth year." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth year of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | TelevisionShow_NP) first season." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first season of ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Company_NP) founding year." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founding year of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all parents of ($x | Person_NP).", "Give me the ($x | Person_NP) parent.", "Give me the ($x | Person_NP) parents.", "List all parents of ($x | Person_NP).", "List all the parents of ($x | Person_NP).", "List all the persons with parent of ($x | Person_NP).", "show me all parents of ($x | Person_NP).", "which person is the parent of ($x | Person_NP)?", "which person is the parent of the ($x | Person_NP)?", "which person was the parent of ($x | Person_NP)?", "which person was the parent of the ($x | Person_NP)?", "which persons are the parents of ($x | Person_NP)?", "which persons are the parents of the ($x | Person_NP)?", "which persons were the parents of ($x | Person_NP)?", "which persons were the parents of the ($x | Person_NP)?", "Who person are the parents of ($x | Person_NP)?", "Who person are the parents of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's parent?", "Who person is the parent of ($x | Person_NP)?", "Who person is the parent of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's parent?", "Who person was the parent of ($x | Person_NP)?", "Who person was the parent of the ($x | Person_NP)?", "Who person were the parents of ($x | Person_NP)?", "Who person were the parents of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the parent of ($x | Person_NP)?", "the parents of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all books by ($x | Writer_NP).", "Give me the ($x | Writer_NP) book.", "Give me the ($x | Writer_NP) books.", "List all books by ($x | Writer_NP).", "List all the books by ($x | Writer_NP).", "List all the writers with book by ($x | Writer_NP).", "show me all books by ($x | Writer_NP).", "What writer are the books by ($x | Writer_NP)?", "What writer are the books by the ($x | Writer_NP)?", "What writer is ($x | Writer_NP) 's book?", "What writer is the book by ($x | Writer_NP)?", "What writer is the book by the ($x | Writer_NP)?", "What writer was ($x | Writer_NP) 's book?", "What writer was the book by ($x | Writer_NP)?", "What writer was the book by the ($x | Writer_NP)?", "What writer were the books by ($x | Writer_NP)?", "What writer were the books by the ($x | Writer_NP)?", "which writer is the book by ($x | Writer_NP)?", "which writer is the book by the ($x | Writer_NP)?", "which writer was the book by ($x | Writer_NP)?", "which writer was the book by the ($x | Writer_NP)?", "which writers are the books by ($x | Writer_NP)?", "which writers are the books by the ($x | Writer_NP)?", "which writers were the books by ($x | Writer_NP)?", "which writers were the books by the ($x | Writer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#book_by",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book by ($x | Writer_NP)?", "the books by ($x | Writer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all coaches of ($x | IceHockeyLeague_NP).", "Give me the ($x | IceHockeyLeague_NP) coach.", "Give me the ($x | IceHockeyLeague_NP) coaches.", "List all coaches of ($x | IceHockeyLeague_NP).", "List all the coaches of ($x | IceHockeyLeague_NP).", "List all the persons with coach of ($x | IceHockeyLeague_NP).", "show me all coaches of ($x | IceHockeyLeague_NP).", "which person is the coach of ($x | IceHockeyLeague_NP)?", "which person is the coach of the ($x | IceHockeyLeague_NP)?", "which person was the coach of ($x | IceHockeyLeague_NP)?", "which person was the coach of the ($x | IceHockeyLeague_NP)?", "which persons are the coaches of ($x | IceHockeyLeague_NP)?", "which persons are the coaches of the ($x | IceHockeyLeague_NP)?", "which persons were the coaches of ($x | IceHockeyLeague_NP)?", "which persons were the coaches of the ($x | IceHockeyLeague_NP)?", "Who person are the coaches of ($x | IceHockeyLeague_NP)?", "Who person are the coaches of the ($x | IceHockeyLeague_NP)?", "Who person is ($x | IceHockeyLeague_NP) 's coach?", "Who person is the coach of ($x | IceHockeyLeague_NP)?", "Who person is the coach of the ($x | IceHockeyLeague_NP)?", "Who person was ($x | IceHockeyLeague_NP) 's coach?", "Who person was the coach of ($x | IceHockeyLeague_NP)?", "Who person was the coach of the ($x | IceHockeyLeague_NP)?", "Who person were the coaches of ($x | IceHockeyLeague_NP)?", "Who person were the coaches of the ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | IceHockeyLeague_NP)?", "the coaches of ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all coaches of ($x | HockeyTeam_NP).", "Give me the ($x | HockeyTeam_NP) coach.", "Give me the ($x | HockeyTeam_NP) coaches.", "List all coaches of ($x | HockeyTeam_NP).", "List all the coaches of ($x | HockeyTeam_NP).", "List all the persons with coach of ($x | HockeyTeam_NP).", "show me all coaches of ($x | HockeyTeam_NP).", "which person is the coach of ($x | HockeyTeam_NP)?", "which person is the coach of the ($x | HockeyTeam_NP)?", "which person was the coach of ($x | HockeyTeam_NP)?", "which person was the coach of the ($x | HockeyTeam_NP)?", "which persons are the coaches of ($x | HockeyTeam_NP)?", "which persons are the coaches of the ($x | HockeyTeam_NP)?", "which persons were the coaches of ($x | HockeyTeam_NP)?", "which persons were the coaches of the ($x | HockeyTeam_NP)?", "Who person are the coaches of ($x | HockeyTeam_NP)?", "Who person are the coaches of the ($x | HockeyTeam_NP)?", "Who person is ($x | HockeyTeam_NP) 's coach?", "Who person is the coach of ($x | HockeyTeam_NP)?", "Who person is the coach of the ($x | HockeyTeam_NP)?", "Who person was ($x | HockeyTeam_NP) 's coach?", "Who person was the coach of ($x | HockeyTeam_NP)?", "Who person was the coach of the ($x | HockeyTeam_NP)?", "Who person were the coaches of ($x | HockeyTeam_NP)?", "Who person were the coaches of the ($x | HockeyTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "HockeyTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the coach of ($x | HockeyTeam_NP)?", "the coaches of ($x | HockeyTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all albums of ($x | Song_NP).", "Give me the ($x | Song_NP) album.", "Give me the ($x | Song_NP) albums.", "List all albums of ($x | Song_NP).", "List all the albums of ($x | Song_NP).", "List all the albums with album of ($x | Song_NP).", "show me all albums of ($x | Song_NP).", "What album are the albums of ($x | Song_NP)?", "What album are the albums of the ($x | Song_NP)?", "What album is ($x | Song_NP) 's album?", "What album is the album of ($x | Song_NP)?", "What album is the album of the ($x | Song_NP)?", "What album was ($x | Song_NP) 's album?", "What album was the album of ($x | Song_NP)?", "What album was the album of the ($x | Song_NP)?", "What album were the albums of ($x | Song_NP)?", "What album were the albums of the ($x | Song_NP)?", "which album is the album of ($x | Song_NP)?", "which album is the album of the ($x | Song_NP)?", "which album was the album of ($x | Song_NP)?", "which album was the album of the ($x | Song_NP)?", "which albums are the albums of ($x | Song_NP)?", "which albums are the albums of the ($x | Song_NP)?", "which albums were the albums of ($x | Song_NP)?", "which albums were the albums of the ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#album-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the album of ($x | Song_NP)?", "the albums of ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all members of ($x | Band_NP).", "Give me the ($x | Band_NP) member.", "Give me the ($x | Band_NP) members.", "List all members of ($x | Band_NP).", "List all the members of ($x | Band_NP).", "List all the musical artists with member of ($x | Band_NP).", "show me all members of ($x | Band_NP).", "which musical artist is the member of ($x | Band_NP)?", "which musical artist is the member of the ($x | Band_NP)?", "which musical artist was the member of ($x | Band_NP)?", "which musical artist was the member of the ($x | Band_NP)?", "which musical artists are the members of ($x | Band_NP)?", "which musical artists are the members of the ($x | Band_NP)?", "which musical artists were the members of ($x | Band_NP)?", "which musical artists were the members of the ($x | Band_NP)?", "Who musical artist are the members of ($x | Band_NP)?", "Who musical artist are the members of the ($x | Band_NP)?", "Who musical artist is ($x | Band_NP) 's member?", "Who musical artist is the member of ($x | Band_NP)?", "Who musical artist is the member of the ($x | Band_NP)?", "Who musical artist was ($x | Band_NP) 's member?", "Who musical artist was the member of ($x | Band_NP)?", "Who musical artist was the member of the ($x | Band_NP)?", "Who musical artist were the members of ($x | Band_NP)?", "Who musical artist were the members of the ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the member of ($x | Band_NP)?", "the members of ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all last Election Dates of ($x | Organisation_NP).", "Give me the ($x | Organisation_NP) last Election Date.", "Give me the ($x | Organisation_NP) last Election Dates.", "List all last Election Dates of ($x | Organisation_NP).", "List all the last Election Dates of ($x | Organisation_NP).", "show me all last Election Dates of ($x | Organisation_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#lastElectionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the last Election Date of ($x | Organisation_NP)?", "the last Election Dates of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/lastElectionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all opening Dates of ($x | ArchitecturalStructure_NP).", "Give me the ($x | ArchitecturalStructure_NP) opening Date.", "Give me the ($x | ArchitecturalStructure_NP) opening Dates.", "List all opening Dates of ($x | ArchitecturalStructure_NP).", "List all the opening Dates of ($x | ArchitecturalStructure_NP).", "show me all opening Dates of ($x | ArchitecturalStructure_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#openingDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the opening Date of ($x | ArchitecturalStructure_NP)?", "the opening Dates of ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "Give me the ($x | Artist_NP) artistic movement.", "Give me the ($x | Artist_NP) artistic movements.", "List all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all artistic movements of ($x | Artist_NP).", "Give me the ($x | Artist_NP) artistic movement.", "Give me the ($x | Artist_NP) artistic movements.", "List all artistic movements of ($x | Artist_NP).", "List all the artistic movements of ($x | Artist_NP).", "show me all artistic movements of ($x | Artist_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the artistic movement of ($x | Artist_NP)?", "the artistic movements of ($x | Artist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all number Of Students of ($x | School_NP).", "Give me the ($x | School_NP) number Of Student.", "Give me the ($x | School_NP) number Of Students.", "List all number Of Students of ($x | School_NP).", "List all the number Of Students of ($x | School_NP).", "show me all number Of Students of ($x | School_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "School" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number Of Student of ($x | School_NP)?", "the number Of Students of ($x | School_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all influencers of ($x | Person_NP).", "Give me the ($x | Person_NP) influencer.", "Give me the ($x | Person_NP) influencers.", "List all influencers of ($x | Person_NP).", "List all the influencers of ($x | Person_NP).", "List all the persons with influencer of ($x | Person_NP).", "show me all influencers of ($x | Person_NP).", "which person is the influencer of ($x | Person_NP)?", "which person is the influencer of the ($x | Person_NP)?", "which person was the influencer of ($x | Person_NP)?", "which person was the influencer of the ($x | Person_NP)?", "which persons are the influencers of ($x | Person_NP)?", "which persons are the influencers of the ($x | Person_NP)?", "which persons were the influencers of ($x | Person_NP)?", "which persons were the influencers of the ($x | Person_NP)?", "Who person are the influencers of ($x | Person_NP)?", "Who person are the influencers of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's influencer?", "Who person is the influencer of ($x | Person_NP)?", "Who person is the influencer of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's influencer?", "Who person was the influencer of ($x | Person_NP)?", "Who person was the influencer of the ($x | Person_NP)?", "Who person were the influencers of ($x | Person_NP)?", "Who person were the influencers of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the influencer of ($x | Person_NP)?", "the influencers of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all founders of ($x | Organisation_NP).", "Give me the ($x | Organisation_NP) founder.", "Give me the ($x | Organisation_NP) founders.", "List all founders of ($x | Organisation_NP).", "List all the founders of ($x | Organisation_NP).", "List all the popes with founder of ($x | Organisation_NP).", "show me all founders of ($x | Organisation_NP).", "which pope is the founder of ($x | Organisation_NP)?", "which pope is the founder of the ($x | Organisation_NP)?", "which pope was the founder of ($x | Organisation_NP)?", "which pope was the founder of the ($x | Organisation_NP)?", "which popes are the founders of ($x | Organisation_NP)?", "which popes are the founders of the ($x | Organisation_NP)?", "which popes were the founders of ($x | Organisation_NP)?", "which popes were the founders of the ($x | Organisation_NP)?", "Who pope are the founders of ($x | Organisation_NP)?", "Who pope are the founders of the ($x | Organisation_NP)?", "Who pope is ($x | Organisation_NP) 's founder?", "Who pope is the founder of ($x | Organisation_NP)?", "Who pope is the founder of the ($x | Organisation_NP)?", "Who pope was ($x | Organisation_NP) 's founder?", "Who pope was the founder of ($x | Organisation_NP)?", "Who pope was the founder of the ($x | Organisation_NP)?", "Who pope were the founders of ($x | Organisation_NP)?", "Who pope were the founders of the ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#founder-of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the founder of ($x | Organisation_NP)?", "the founders of ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all record labels of ($x | Genre_NP).", "Give me the ($x | Genre_NP) record label.", "Give me the ($x | Genre_NP) record labels.", "List all record labels of ($x | Genre_NP).", "List all the record labels of ($x | Genre_NP).", "show me all record labels of ($x | Genre_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the record label of ($x | Genre_NP)?", "the record labels of ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Thing_NP) autobiography.", "List all the authors with autobiography of ($x | Thing_NP).", "What author is ($x | Thing_NP) 's autobiography?", "What author is the autobiography of ($x | Thing_NP)?", "What author is the autobiography of the ($x | Thing_NP)?", "What author was ($x | Thing_NP) 's autobiography?", "What author was the autobiography of ($x | Thing_NP)?", "What author was the autobiography of the ($x | Thing_NP)?", "which author is the autobiography of ($x | Thing_NP)?", "which author is the autobiography of the ($x | Thing_NP)?", "which author was the autobiography of ($x | Thing_NP)?", "which author was the autobiography of the ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the autobiography of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all wives of ($x | Person_NP).", "Give me the ($x | Person_NP) wife.", "Give me the ($x | Person_NP) wives.", "List all the persons with wife of ($x | Person_NP).", "List all the wives of ($x | Person_NP).", "List all wives of ($x | Person_NP).", "show me all wives of ($x | Person_NP).", "which person is the wife of ($x | Person_NP)?", "which person is the wife of the ($x | Person_NP)?", "which person was the wife of ($x | Person_NP)?", "which person was the wife of the ($x | Person_NP)?", "which persons are the wives of ($x | Person_NP)?", "which persons are the wives of the ($x | Person_NP)?", "which persons were the wives of ($x | Person_NP)?", "which persons were the wives of the ($x | Person_NP)?", "Who person are the wives of ($x | Person_NP)?", "Who person are the wives of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's wife?", "Who person is the wife of ($x | Person_NP)?", "Who person is the wife of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's wife?", "Who person was the wife of ($x | Person_NP)?", "Who person was the wife of the ($x | Person_NP)?", "Who person were the wives of ($x | Person_NP)?", "Who person were the wives of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wife of ($x | Person_NP)?", "the wives of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all first Air Dates of ($x | Thing_NP).", "Give me the ($x | Thing_NP) first Air Date.", "Give me the ($x | Thing_NP) first Air Dates.", "List all first Air Dates of ($x | Thing_NP).", "List all the first Air Dates of ($x | Thing_NP).", "show me all first Air Dates of ($x | Thing_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#firstAirDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the first Air Date of ($x | Thing_NP)?", "the first Air Dates of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstAirDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#museum_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all museums in ($x | City_NP).", "Give me the ($x | City_NP) museum.", "Give me the ($x | City_NP) museums.", "List all museums in ($x | City_NP).", "List all the cities with museum in ($x | City_NP).", "List all the museums in ($x | City_NP).", "show me all museums in ($x | City_NP).", "What city are the museums in ($x | City_NP)?", "What city are the museums in the ($x | City_NP)?", "What city is ($x | City_NP) 's museum?", "What city is the museum in ($x | City_NP)?", "What city is the museum in the ($x | City_NP)?", "What city was ($x | City_NP) 's museum?", "What city was the museum in ($x | City_NP)?", "What city was the museum in the ($x | City_NP)?", "What city were the museums in ($x | City_NP)?", "What city were the museums in the ($x | City_NP)?", "which cities are the museums in ($x | City_NP)?", "which cities are the museums in the ($x | City_NP)?", "which cities were the museums in ($x | City_NP)?", "which cities were the museums in the ($x | City_NP)?", "which city is the museum in ($x | City_NP)?", "which city is the museum in the ($x | City_NP)?", "which city was the museum in ($x | City_NP)?", "which city was the museum in the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#museum_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the museum in ($x | City_NP)?", "the museums in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all cities in ($x | AdministrativeRegion_NP).", "Give me the ($x | AdministrativeRegion_NP) cities.", "Give me the ($x | AdministrativeRegion_NP) city.", "List all cities in ($x | AdministrativeRegion_NP).", "List all the cities in ($x | AdministrativeRegion_NP).", "List all the cities with city in ($x | AdministrativeRegion_NP).", "show me all cities in ($x | AdministrativeRegion_NP).", "What city are the cities in ($x | AdministrativeRegion_NP)?", "What city are the cities in the ($x | AdministrativeRegion_NP)?", "What city is ($x | AdministrativeRegion_NP) 's city?", "What city is the city in ($x | AdministrativeRegion_NP)?", "What city is the city in the ($x | AdministrativeRegion_NP)?", "What city was ($x | AdministrativeRegion_NP) 's city?", "What city was the city in ($x | AdministrativeRegion_NP)?", "What city was the city in the ($x | AdministrativeRegion_NP)?", "What city were the cities in ($x | AdministrativeRegion_NP)?", "What city were the cities in the ($x | AdministrativeRegion_NP)?", "which cities are the cities in ($x | AdministrativeRegion_NP)?", "which cities are the cities in the ($x | AdministrativeRegion_NP)?", "which cities were the cities in ($x | AdministrativeRegion_NP)?", "which cities were the cities in the ($x | AdministrativeRegion_NP)?", "which city is the city in ($x | AdministrativeRegion_NP)?", "which city is the city in the ($x | AdministrativeRegion_NP)?", "which city was the city in ($x | AdministrativeRegion_NP)?", "which city was the city in the ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#city-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cities in ($x | AdministrativeRegion_NP)?", "the city in ($x | AdministrativeRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all wine productions of ($x | Company_NP).", "Give me the ($x | Company_NP) wine production.", "Give me the ($x | Company_NP) wine productions.", "List all the locations with wine production of ($x | Company_NP).", "List all the wine productions of ($x | Company_NP).", "List all wine productions of ($x | Company_NP).", "show me all wine productions of ($x | Company_NP).", "What location are the wine productions of ($x | Company_NP)?", "What location are the wine productions of the ($x | Company_NP)?", "What location is ($x | Company_NP) 's wine production?", "What location is the wine production of ($x | Company_NP)?", "What location is the wine production of the ($x | Company_NP)?", "What location was ($x | Company_NP) 's wine production?", "What location was the wine production of ($x | Company_NP)?", "What location was the wine production of the ($x | Company_NP)?", "What location were the wine productions of ($x | Company_NP)?", "What location were the wine productions of the ($x | Company_NP)?", "which location is the wine production of ($x | Company_NP)?", "which location is the wine production of the ($x | Company_NP)?", "which location was the wine production of ($x | Company_NP)?", "which location was the wine production of the ($x | Company_NP)?", "which locations are the wine productions of ($x | Company_NP)?", "which locations are the wine productions of the ($x | Company_NP)?", "which locations were the wine productions of ($x | Company_NP)?", "which locations were the wine productions of the ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine production of ($x | Company_NP)?", "the wine productions of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all daughters of ($x | Person_NP).", "Give me the ($x | Person_NP) daughter.", "Give me the ($x | Person_NP) daughters.", "List all daughters of ($x | Person_NP).", "List all the daughters of ($x | Person_NP).", "List all the persons with daughter of ($x | Person_NP).", "show me all daughters of ($x | Person_NP).", "which person is the daughter of ($x | Person_NP)?", "which person is the daughter of the ($x | Person_NP)?", "which person was the daughter of ($x | Person_NP)?", "which person was the daughter of the ($x | Person_NP)?", "which persons are the daughters of ($x | Person_NP)?", "which persons are the daughters of the ($x | Person_NP)?", "which persons were the daughters of ($x | Person_NP)?", "which persons were the daughters of the ($x | Person_NP)?", "Who person are the daughters of ($x | Person_NP)?", "Who person are the daughters of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's daughter?", "Who person is the daughter of ($x | Person_NP)?", "Who person is the daughter of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's daughter?", "Who person was the daughter of ($x | Person_NP)?", "Who person was the daughter of the ($x | Person_NP)?", "Who person were the daughters of ($x | Person_NP)?", "Who person were the daughters of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#daughter_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the daughter of ($x | Person_NP)?", "the daughters of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#mission-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all missions of ($x | Event_NP).", "Give me the ($x | Event_NP) mission.", "Give me the ($x | Event_NP) missions.", "List all missions of ($x | Event_NP).", "List all the missions of ($x | Event_NP).", "List all the television shows with mission of ($x | Event_NP).", "show me all missions of ($x | Event_NP).", "What television show are the missions of ($x | Event_NP)?", "What television show are the missions of the ($x | Event_NP)?", "What television show is ($x | Event_NP) 's mission?", "What television show is the mission of ($x | Event_NP)?", "What television show is the mission of the ($x | Event_NP)?", "What television show was ($x | Event_NP) 's mission?", "What television show was the mission of ($x | Event_NP)?", "What television show was the mission of the ($x | Event_NP)?", "What television show were the missions of ($x | Event_NP)?", "What television show were the missions of the ($x | Event_NP)?", "which television show is the mission of ($x | Event_NP)?", "which television show is the mission of the ($x | Event_NP)?", "which television show was the mission of ($x | Event_NP)?", "which television show was the mission of the ($x | Event_NP)?", "which television shows are the missions of ($x | Event_NP)?", "which television shows are the missions of the ($x | Event_NP)?", "which television shows were the missions of ($x | Event_NP)?", "which television shows were the missions of the ($x | Event_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programme> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#mission-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Event" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mission of ($x | Event_NP)?", "the missions of ($x | Event_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programme> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | WrittenWork_NP) number of pages." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the number of pages of ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all net incomes of ($x | Company_NP).", "Give me the ($x | Company_NP) net income.", "Give me the ($x | Company_NP) net incomes.", "List all net incomes of ($x | Company_NP).", "List all the net incomes of ($x | Company_NP).", "show me all net incomes of ($x | Company_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#net-income-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the net income of ($x | Company_NP)?", "the net incomes of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#employee-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all employees of ($x | Company_NP).", "Give me the ($x | Company_NP) employee.", "Give me the ($x | Company_NP) employees.", "List all employees of ($x | Company_NP).", "List all the employees of ($x | Company_NP).", "show me all employees of ($x | Company_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#employee-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the employee of ($x | Company_NP)?", "the employees of ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all home stadiums of ($x | SportsClub_NP).", "Give me the ($x | SportsClub_NP) home stadium.", "Give me the ($x | SportsClub_NP) home stadiums.", "List all home stadiums of ($x | SportsClub_NP).", "List all the home stadiums of ($x | SportsClub_NP).", "List all the stadiums with home stadium of ($x | SportsClub_NP).", "show me all home stadiums of ($x | SportsClub_NP).", "What stadium are the home stadiums of ($x | SportsClub_NP)?", "What stadium are the home stadiums of the ($x | SportsClub_NP)?", "What stadium is ($x | SportsClub_NP) 's home stadium?", "What stadium is the home stadium of ($x | SportsClub_NP)?", "What stadium is the home stadium of the ($x | SportsClub_NP)?", "What stadium was ($x | SportsClub_NP) 's home stadium?", "What stadium was the home stadium of ($x | SportsClub_NP)?", "What stadium was the home stadium of the ($x | SportsClub_NP)?", "What stadium were the home stadiums of ($x | SportsClub_NP)?", "What stadium were the home stadiums of the ($x | SportsClub_NP)?", "which stadium is the home stadium of ($x | SportsClub_NP)?", "which stadium is the home stadium of the ($x | SportsClub_NP)?", "which stadium was the home stadium of ($x | SportsClub_NP)?", "which stadium was the home stadium of the ($x | SportsClub_NP)?", "which stadiums are the home stadiums of ($x | SportsClub_NP)?", "which stadiums are the home stadiums of the ($x | SportsClub_NP)?", "which stadiums were the home stadiums of ($x | SportsClub_NP)?", "which stadiums were the home stadiums of the ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#home_stadium_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the home stadium of ($x | SportsClub_NP)?", "the home stadiums of ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all mayors of ($x | City_NP).", "Give me the ($x | City_NP) mayor.", "Give me the ($x | City_NP) mayors.", "List all mayors of ($x | City_NP).", "List all the mayors of ($x | City_NP).", "List all the persons with mayor of ($x | City_NP).", "show me all mayors of ($x | City_NP).", "which person is the mayor of ($x | City_NP)?", "which person is the mayor of the ($x | City_NP)?", "which person was the mayor of ($x | City_NP)?", "which person was the mayor of the ($x | City_NP)?", "which persons are the mayors of ($x | City_NP)?", "which persons are the mayors of the ($x | City_NP)?", "which persons were the mayors of ($x | City_NP)?", "which persons were the mayors of the ($x | City_NP)?", "Who person are the mayors of ($x | City_NP)?", "Who person are the mayors of the ($x | City_NP)?", "Who person is ($x | City_NP) 's mayor?", "Who person is the mayor of ($x | City_NP)?", "Who person is the mayor of the ($x | City_NP)?", "Who person was ($x | City_NP) 's mayor?", "Who person was the mayor of ($x | City_NP)?", "Who person was the mayor of the ($x | City_NP)?", "Who person were the mayors of ($x | City_NP)?", "Who person were the mayors of the ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "424",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the mayor of ($x | City_NP)?", "the mayors of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Country_NP) largest country.", "List all the countries with largest country of ($x | Country_NP).", "What country is ($x | Country_NP) 's largest country?", "What country is the largest country of ($x | Country_NP)?", "What country is the largest country of the ($x | Country_NP)?", "What country was ($x | Country_NP) 's largest country?", "What country was the largest country of ($x | Country_NP)?", "What country was the largest country of the ($x | Country_NP)?", "which country is the largest country of ($x | Country_NP)?", "which country is the largest country of the ($x | Country_NP)?", "which country was the largest country of ($x | Country_NP)?", "which country was the largest country of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "428",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the largest country of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "429",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all teams of ($x | IceHockeyLeague_NP).", "Give me the ($x | IceHockeyLeague_NP) team.", "Give me the ($x | IceHockeyLeague_NP) teams.", "List all teams of ($x | IceHockeyLeague_NP).", "List all the Ice Hockey Leagues with team of ($x | IceHockeyLeague_NP).", "List all the teams of ($x | IceHockeyLeague_NP).", "show me all teams of ($x | IceHockeyLeague_NP).", "What Ice Hockey League are the teams of ($x | IceHockeyLeague_NP)?", "What Ice Hockey League are the teams of the ($x | IceHockeyLeague_NP)?", "What Ice Hockey League is ($x | IceHockeyLeague_NP) 's team?", "What Ice Hockey League is the team of ($x | IceHockeyLeague_NP)?", "What Ice Hockey League is the team of the ($x | IceHockeyLeague_NP)?", "What Ice Hockey League was ($x | IceHockeyLeague_NP) 's team?", "What Ice Hockey League was the team of ($x | IceHockeyLeague_NP)?", "What Ice Hockey League was the team of the ($x | IceHockeyLeague_NP)?", "What Ice Hockey League were the teams of ($x | IceHockeyLeague_NP)?", "What Ice Hockey League were the teams of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey League is the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League is the team of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey League was the team of ($x | IceHockeyLeague_NP)?", "which Ice Hockey League was the team of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues are the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues are the teams of the ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues were the teams of ($x | IceHockeyLeague_NP)?", "which Ice Hockey Leagues were the teams of the ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "433",
    "lexicalEntryUri" : "http://localhost:8080#team_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "HockeyTeam" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the team of ($x | IceHockeyLeague_NP)?", "the teams of ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/league> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "434",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Mountain_NP) elevation." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "437",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the elevation of ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "438",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) birth place.", "List all the countries with birth place of ($x | Person_NP).", "What country is ($x | Person_NP) 's birth place?", "What country is the birth place of ($x | Person_NP)?", "What country is the birth place of the ($x | Person_NP)?", "What country was ($x | Person_NP) 's birth place?", "What country was the birth place of ($x | Person_NP)?", "What country was the birth place of the ($x | Person_NP)?", "which country is the birth place of ($x | Person_NP)?", "which country is the birth place of the ($x | Person_NP)?", "which country was the birth place of ($x | Person_NP)?", "which country was the birth place of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the birth place of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "442",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Country_NP) capital.", "List all the cities with capital of ($x | Country_NP).", "What city is ($x | Country_NP) 's capital?", "What city is the capital of ($x | Country_NP)?", "What city is the capital of the ($x | Country_NP)?", "What city was ($x | Country_NP) 's capital?", "What city was the capital of ($x | Country_NP)?", "What city was the capital of the ($x | Country_NP)?", "which city is the capital of ($x | Country_NP)?", "which city is the capital of the ($x | Country_NP)?", "which city was the capital of ($x | Country_NP)?", "which city was the capital of the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the capital of ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) death date." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the death date of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all costs of ($x | Film_NP).", "Give me the ($x | Film_NP) cost.", "Give me the ($x | Film_NP) costs.", "List all costs of ($x | Film_NP).", "List all the costs of ($x | Film_NP).", "show me all costs of ($x | Film_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cost of ($x | Film_NP)?", "the costs of ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Ship_NP) completion date." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "458",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the completion date of ($x | Ship_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all authors of ($x | Work_NP).", "Give me the ($x | Work_NP) author.", "Give me the ($x | Work_NP) authors.", "List all authors of ($x | Work_NP).", "List all the authors of ($x | Work_NP).", "List all the persons with author of ($x | Work_NP).", "show me all authors of ($x | Work_NP).", "which person is the author of ($x | Work_NP)?", "which person is the author of the ($x | Work_NP)?", "which person was the author of ($x | Work_NP)?", "which person was the author of the ($x | Work_NP)?", "which persons are the authors of ($x | Work_NP)?", "which persons are the authors of the ($x | Work_NP)?", "which persons were the authors of ($x | Work_NP)?", "which persons were the authors of the ($x | Work_NP)?", "Who person are the authors of ($x | Work_NP)?", "Who person are the authors of the ($x | Work_NP)?", "Who person is ($x | Work_NP) 's author?", "Who person is the author of ($x | Work_NP)?", "Who person is the author of the ($x | Work_NP)?", "Who person was ($x | Work_NP) 's author?", "Who person was the author of ($x | Work_NP)?", "Who person was the author of the ($x | Work_NP)?", "Who person were the authors of ($x | Work_NP)?", "Who person were the authors of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "463",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the author of ($x | Work_NP)?", "the authors of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all books in ($x | TelevisionShow_NP).", "Give me the ($x | TelevisionShow_NP) book.", "Give me the ($x | TelevisionShow_NP) books.", "List all books in ($x | TelevisionShow_NP).", "List all the books in ($x | TelevisionShow_NP).", "List all the television shows with book in ($x | TelevisionShow_NP).", "show me all books in ($x | TelevisionShow_NP).", "What television show are the books in ($x | TelevisionShow_NP)?", "What television show are the books in the ($x | TelevisionShow_NP)?", "What television show is ($x | TelevisionShow_NP) 's book?", "What television show is the book in ($x | TelevisionShow_NP)?", "What television show is the book in the ($x | TelevisionShow_NP)?", "What television show was ($x | TelevisionShow_NP) 's book?", "What television show was the book in ($x | TelevisionShow_NP)?", "What television show was the book in the ($x | TelevisionShow_NP)?", "What television show were the books in ($x | TelevisionShow_NP)?", "What television show were the books in the ($x | TelevisionShow_NP)?", "which television show is the book in ($x | TelevisionShow_NP)?", "which television show is the book in the ($x | TelevisionShow_NP)?", "which television show was the book in ($x | TelevisionShow_NP)?", "which television show was the book in the ($x | TelevisionShow_NP)?", "which television shows are the books in ($x | TelevisionShow_NP)?", "which television shows are the books in the ($x | TelevisionShow_NP)?", "which television shows were the books in ($x | TelevisionShow_NP)?", "which television shows were the books in the ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#Book-in",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Book" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the book in ($x | TelevisionShow_NP)?", "the books in ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Place_NP) post code." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "472",
    "lexicalEntryUri" : "http://localhost:8080#postCode-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the post code of ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Software_NP) release date." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "476",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the release date of ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "477",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all creators of ($x | FictionalCharacter_NP).", "Give me the ($x | FictionalCharacter_NP) creator.", "Give me the ($x | FictionalCharacter_NP) creators.", "List all creators of ($x | FictionalCharacter_NP).", "List all the creators of ($x | FictionalCharacter_NP).", "List all the persons with creator of ($x | FictionalCharacter_NP).", "show me all creators of ($x | FictionalCharacter_NP).", "which person is the creator of ($x | FictionalCharacter_NP)?", "which person is the creator of the ($x | FictionalCharacter_NP)?", "which person was the creator of ($x | FictionalCharacter_NP)?", "which person was the creator of the ($x | FictionalCharacter_NP)?", "which persons are the creators of ($x | FictionalCharacter_NP)?", "which persons are the creators of the ($x | FictionalCharacter_NP)?", "which persons were the creators of ($x | FictionalCharacter_NP)?", "which persons were the creators of the ($x | FictionalCharacter_NP)?", "Who person are the creators of ($x | FictionalCharacter_NP)?", "Who person are the creators of the ($x | FictionalCharacter_NP)?", "Who person is ($x | FictionalCharacter_NP) 's creator?", "Who person is the creator of ($x | FictionalCharacter_NP)?", "Who person is the creator of the ($x | FictionalCharacter_NP)?", "Who person was ($x | FictionalCharacter_NP) 's creator?", "Who person was the creator of ($x | FictionalCharacter_NP)?", "Who person was the creator of the ($x | FictionalCharacter_NP)?", "Who person were the creators of ($x | FictionalCharacter_NP)?", "Who person were the creators of the ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "481",
    "lexicalEntryUri" : "http://localhost:8080#creator-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the creator of ($x | FictionalCharacter_NP)?", "the creators of ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "482",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all wine regions of ($x | Grape_NP).", "Give me the ($x | Grape_NP) wine region.", "Give me the ($x | Grape_NP) wine regions.", "List all the places with wine region of ($x | Grape_NP).", "List all the wine regions of ($x | Grape_NP).", "List all wine regions of ($x | Grape_NP).", "show me all wine regions of ($x | Grape_NP).", "What place are the wine regions of ($x | Grape_NP)?", "What place are the wine regions of the ($x | Grape_NP)?", "What place is ($x | Grape_NP) 's wine region?", "What place is the wine region of ($x | Grape_NP)?", "What place is the wine region of the ($x | Grape_NP)?", "What place was ($x | Grape_NP) 's wine region?", "What place was the wine region of ($x | Grape_NP)?", "What place was the wine region of the ($x | Grape_NP)?", "What place were the wine regions of ($x | Grape_NP)?", "What place were the wine regions of the ($x | Grape_NP)?", "which place is the wine region of ($x | Grape_NP)?", "which place is the wine region of the ($x | Grape_NP)?", "which place was the wine region of ($x | Grape_NP)?", "which place was the wine region of the ($x | Grape_NP)?", "which places are the wine regions of ($x | Grape_NP)?", "which places are the wine regions of the ($x | Grape_NP)?", "which places were the wine regions of ($x | Grape_NP)?", "which places were the wine regions of the ($x | Grape_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "486",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the wine region of ($x | Grape_NP)?", "the wine regions of ($x | Grape_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "Give me the ($x | City_NP) time zone.", "Give me the ($x | City_NP) time zones.", "List all the time zones of ($x | City_NP).", "List all time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "491",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all time zones of ($x | City_NP).", "Give me the ($x | City_NP) time zone.", "Give me the ($x | City_NP) time zones.", "List all the time zones of ($x | City_NP).", "List all time zones of ($x | City_NP).", "show me all time zones of ($x | City_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "496",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the time zone of ($x | City_NP)?", "the time zones of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all minimum Temperatures of ($x | Planet_NP).", "Give me the ($x | Planet_NP) minimum Temperature.", "Give me the ($x | Planet_NP) minimum Temperatures.", "List all minimum Temperatures of ($x | Planet_NP).", "List all the minimum Temperatures of ($x | Planet_NP).", "show me all minimum Temperatures of ($x | Planet_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "501",
    "lexicalEntryUri" : "http://localhost:8080#minimumTemperature-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the minimum Temperature of ($x | Planet_NP)?", "the minimum Temperatures of ($x | Planet_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/minimumTemperature> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Person_NP) nationality.", "List all the countries with nationality of ($x | Person_NP).", "What country is ($x | Person_NP) 's nationality?", "What country is the nationality of ($x | Person_NP)?", "What country is the nationality of the ($x | Person_NP)?", "What country was ($x | Person_NP) 's nationality?", "What country was the nationality of ($x | Person_NP)?", "What country was the nationality of the ($x | Person_NP)?", "which country is the nationality of ($x | Person_NP)?", "which country is the nationality of the ($x | Person_NP)?", "which country was the nationality of ($x | Person_NP)?", "which country was the nationality of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "505",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nationality of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "506",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all developers of ($x | Work_NP).", "Give me the ($x | Work_NP) developer.", "Give me the ($x | Work_NP) developers.", "List all developers of ($x | Work_NP).", "List all the agents with developer of ($x | Work_NP).", "List all the developers of ($x | Work_NP).", "show me all developers of ($x | Work_NP).", "which agent is the developer of ($x | Work_NP)?", "which agent is the developer of the ($x | Work_NP)?", "which agent was the developer of ($x | Work_NP)?", "which agent was the developer of the ($x | Work_NP)?", "which agents are the developers of ($x | Work_NP)?", "which agents are the developers of the ($x | Work_NP)?", "which agents were the developers of ($x | Work_NP)?", "which agents were the developers of the ($x | Work_NP)?", "Who agent are the developers of ($x | Work_NP)?", "Who agent are the developers of the ($x | Work_NP)?", "Who agent is ($x | Work_NP) 's developer?", "Who agent is the developer of ($x | Work_NP)?", "Who agent is the developer of the ($x | Work_NP)?", "Who agent was ($x | Work_NP) 's developer?", "Who agent was the developer of ($x | Work_NP)?", "Who agent was the developer of the ($x | Work_NP)?", "Who agent were the developers of ($x | Work_NP)?", "Who agent were the developers of the ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "510",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the developer of ($x | Work_NP)?", "the developers of ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "511",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all causes of death of ($x | Person_NP).", "Give me the ($x | Person_NP) cause of death.", "Give me the ($x | Person_NP) causes of death.", "List all causes of death of ($x | Person_NP).", "List all the causes of death of ($x | Person_NP).", "show me all causes of death of ($x | Person_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "515",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the cause of death of ($x | Person_NP)?", "the causes of death of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "516",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all diameters of ($x | Thing_NP).", "Give me the ($x | Thing_NP) diameter.", "Give me the ($x | Thing_NP) diameters.", "List all diameters of ($x | Thing_NP).", "List all the diameters of ($x | Thing_NP).", "show me all diameters of ($x | Thing_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#diameter-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the diameter of ($x | Thing_NP)?", "the diameters of ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/diameter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "520",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Politician_NP) successor.", "List all the persons with successor of ($x | Politician_NP).", "which person is the successor of ($x | Politician_NP)?", "which person is the successor of the ($x | Politician_NP)?", "which person was the successor of ($x | Politician_NP)?", "which person was the successor of the ($x | Politician_NP)?", "Who person is ($x | Politician_NP) 's successor?", "Who person is the successor of ($x | Politician_NP)?", "Who person is the successor of the ($x | Politician_NP)?", "Who person was ($x | Politician_NP) 's successor?", "Who person was the successor of ($x | Politician_NP)?", "Who person was the successor of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the successor of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all vice president of ($x | Politician_NP).", "Give me the ($x | Politician_NP) vice president.", "List all the politicians with vice president of ($x | Politician_NP).", "List all the vice president of ($x | Politician_NP).", "List all vice president of ($x | Politician_NP).", "show me all vice president of ($x | Politician_NP).", "which politician is the vice president of ($x | Politician_NP)?", "which politician is the vice president of the ($x | Politician_NP)?", "which politician was the vice president of ($x | Politician_NP)?", "which politician was the vice president of the ($x | Politician_NP)?", "which politicians are the vice president of ($x | Politician_NP)?", "which politicians are the vice president of the ($x | Politician_NP)?", "which politicians were the vice president of ($x | Politician_NP)?", "which politicians were the vice president of the ($x | Politician_NP)?", "Who politician are the vice president of ($x | Politician_NP)?", "Who politician are the vice president of the ($x | Politician_NP)?", "Who politician is ($x | Politician_NP) 's vice president?", "Who politician is the vice president of ($x | Politician_NP)?", "Who politician is the vice president of the ($x | Politician_NP)?", "Who politician was ($x | Politician_NP) 's vice president?", "Who politician was the vice president of ($x | Politician_NP)?", "Who politician was the vice president of the ($x | Politician_NP)?", "Who politician were the vice president of ($x | Politician_NP)?", "Who politician were the vice president of the ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the vice president of ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all governors of ($x | Person_NP).", "Give me the ($x | Person_NP) governor.", "Give me the ($x | Person_NP) governors.", "List all governors of ($x | Person_NP).", "List all the governors of ($x | Person_NP).", "List all the persons with governor of ($x | Person_NP).", "show me all governors of ($x | Person_NP).", "which person is the governor of ($x | Person_NP)?", "which person is the governor of the ($x | Person_NP)?", "which person was the governor of ($x | Person_NP)?", "which person was the governor of the ($x | Person_NP)?", "which persons are the governors of ($x | Person_NP)?", "which persons are the governors of the ($x | Person_NP)?", "which persons were the governors of ($x | Person_NP)?", "which persons were the governors of the ($x | Person_NP)?", "Who person are the governors of ($x | Person_NP)?", "Who person are the governors of the ($x | Person_NP)?", "Who person is ($x | Person_NP) 's governor?", "Who person is the governor of ($x | Person_NP)?", "Who person is the governor of the ($x | Person_NP)?", "Who person was ($x | Person_NP) 's governor?", "Who person was the governor of ($x | Person_NP)?", "Who person was the governor of the ($x | Person_NP)?", "Who person were the governors of ($x | Person_NP)?", "Who person were the governors of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#governor-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the governor of ($x | Person_NP)?", "the governors of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all addresses of ($x | ArchitecturalStructure_NP).", "Give me the ($x | ArchitecturalStructure_NP) address.", "Give me the ($x | ArchitecturalStructure_NP) addresses.", "List all addresses of ($x | ArchitecturalStructure_NP).", "List all the addresses of ($x | ArchitecturalStructure_NP).", "show me all addresses of ($x | ArchitecturalStructure_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#address-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the address of ($x | ArchitecturalStructure_NP)?", "the addresses of ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/address> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all associated Musical Artists of ($x | Band_NP).", "Give me the ($x | Band_NP) associated Musical Artist.", "Give me the ($x | Band_NP) associated Musical Artists.", "List all associated Musical Artists of ($x | Band_NP).", "List all the associated Musical Artists of ($x | Band_NP).", "List all the places with associated Musical Artist of ($x | Band_NP).", "show me all associated Musical Artists of ($x | Band_NP).", "What place are the associated Musical Artists of ($x | Band_NP)?", "What place are the associated Musical Artists of the ($x | Band_NP)?", "What place is ($x | Band_NP) 's associated Musical Artist?", "What place is the associated Musical Artist of ($x | Band_NP)?", "What place is the associated Musical Artist of the ($x | Band_NP)?", "What place was ($x | Band_NP) 's associated Musical Artist?", "What place was the associated Musical Artist of ($x | Band_NP)?", "What place was the associated Musical Artist of the ($x | Band_NP)?", "What place were the associated Musical Artists of ($x | Band_NP)?", "What place were the associated Musical Artists of the ($x | Band_NP)?", "which place is the associated Musical Artist of ($x | Band_NP)?", "which place is the associated Musical Artist of the ($x | Band_NP)?", "which place was the associated Musical Artist of ($x | Band_NP)?", "which place was the associated Musical Artist of the ($x | Band_NP)?", "which places are the associated Musical Artists of ($x | Band_NP)?", "which places are the associated Musical Artists of the ($x | Band_NP)?", "which places were the associated Musical Artists of ($x | Band_NP)?", "which places were the associated Musical Artists of the ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#associatedMusicalArtist-of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the associated Musical Artist of ($x | Band_NP)?", "the associated Musical Artists of ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all resting places of ($x | Person_NP).", "Give me the ($x | Person_NP) resting place.", "Give me the ($x | Person_NP) resting places.", "List all resting places of ($x | Person_NP).", "List all the countries with resting place of ($x | Person_NP).", "List all the resting places of ($x | Person_NP).", "show me all resting places of ($x | Person_NP).", "What country are the resting places of ($x | Person_NP)?", "What country are the resting places of the ($x | Person_NP)?", "What country is ($x | Person_NP) 's resting place?", "What country is the resting place of ($x | Person_NP)?", "What country is the resting place of the ($x | Person_NP)?", "What country was ($x | Person_NP) 's resting place?", "What country was the resting place of ($x | Person_NP)?", "What country was the resting place of the ($x | Person_NP)?", "What country were the resting places of ($x | Person_NP)?", "What country were the resting places of the ($x | Person_NP)?", "which countries are the resting places of ($x | Person_NP)?", "which countries are the resting places of the ($x | Person_NP)?", "which countries were the resting places of ($x | Person_NP)?", "which countries were the resting places of the ($x | Person_NP)?", "which country is the resting place of ($x | Person_NP)?", "which country is the resting place of the ($x | Person_NP)?", "which country was the resting place of ($x | Person_NP)?", "which country was the resting place of the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#resting_place_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the resting place of ($x | Person_NP)?", "the resting places of ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all astronauts of ($x | SpaceMission_NP).", "Give me the ($x | SpaceMission_NP) astronaut.", "Give me the ($x | SpaceMission_NP) astronauts.", "List all astronauts of ($x | SpaceMission_NP).", "List all the astronauts of ($x | SpaceMission_NP).", "List all the Space missions with astronaut  of ($x | SpaceMission_NP).", "show me all astronauts of ($x | SpaceMission_NP).", "which space mission is the astronaut  of ($x | SpaceMission_NP)?", "which space mission is the astronaut  of the ($x | SpaceMission_NP)?", "which space mission was the astronaut  of ($x | SpaceMission_NP)?", "which space mission was the astronaut  of the ($x | SpaceMission_NP)?", "which Space missions are the astronauts of ($x | SpaceMission_NP)?", "which Space missions are the astronauts of the ($x | SpaceMission_NP)?", "which Space missions were the astronauts of ($x | SpaceMission_NP)?", "which Space missions were the astronauts of the ($x | SpaceMission_NP)?", "Who space mission are the astronauts of ($x | SpaceMission_NP)?", "Who space mission are the astronauts of the ($x | SpaceMission_NP)?", "Who space mission is ($x | SpaceMission_NP) 's astronaut?", "Who space mission is the astronaut  of ($x | SpaceMission_NP)?", "Who space mission is the astronaut  of the ($x | SpaceMission_NP)?", "Who space mission was ($x | SpaceMission_NP) 's astronaut?", "Who space mission was the astronaut  of ($x | SpaceMission_NP)?", "Who space mission was the astronaut  of the ($x | SpaceMission_NP)?", "Who space mission were the astronauts of ($x | SpaceMission_NP)?", "Who space mission were the astronauts of the ($x | SpaceMission_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#astronaut_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "SpaceMission" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the astronaut  of ($x | SpaceMission_NP)?", "the astronauts of ($x | SpaceMission_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mission> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me all nicknames of ($x | City_NP).", "Give me the ($x | City_NP) nickname.", "Give me the ($x | City_NP) nicknames.", "List all nicknames of ($x | City_NP).", "List all the nicknames of ($x | City_NP).", "show me all nicknames of ($x | City_NP)." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the nickname of ($x | City_NP)?", "the nicknames of ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Give me the ($x | Model_NP) height." ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "EN",
    "type" : "NP",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "the height of ($x | Model_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons lead ($x | Place_NP)?", "Give me all persons that led the ($x | Place_NP)", "Who person leads ($x | Place_NP)?", "Who person leads the ($x | Place_NP)?", "Who person leads the place ($x | Place_NP)?", "Who person leads the places ($x | Place_NP)?", "Who person led ($x | Place_NP)?", "Who person led the ($x | Place_NP)?", "Who person led the place ($x | Place_NP)?", "Who person led the places ($x | Place_NP)?", "Who person was the person that led ($x | Place_NP)?", "which person does ($x | Place_NP) lead?", "which person leads ($x | Place_NP)?", "which person led ($x | Place_NP)?", "which persons did ($x | Place_NP) lead?", "which persons does ($x | Place_NP) lead?", "which persons lead ($x | Place_NP)?", "which persons led ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "564",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places led by ($x | Person_NP)?", "List all places led by ($x | Person_NP)?", "What kind of place did ($x | Person_NP) lead?", "What place was led by ($x | Person_NP)?", "What places were led by ($x | Person_NP)?", "show me all place that ($x | Person_NP) led", "show me the place that ($x | Person_NP) led", "which place did ($x | Person_NP) lead?", "which place leads the ($x | Person_NP)?", "which place was led by ($x | Person_NP)?", "which places did ($x | Person_NP) lead?", "which places lead the ($x | Person_NP)?", "which places were led by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "565",
    "lexicalEntryUri" : "http://localhost:8080#to_lead_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many places are led by ($x | Person_NP)?", "How often did ($x | Person_NP) lead?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | Film_NP)?", "Give me all persons that produced the ($x | Film_NP)", "Who person produced ($x | Film_NP)?", "Who person produced the ($x | Film_NP)?", "Who person produced the film ($x | Film_NP)?", "Who person produced the films ($x | Film_NP)?", "Who person produces ($x | Film_NP)?", "Who person produces the ($x | Film_NP)?", "Who person produces the film ($x | Film_NP)?", "Who person produces the films ($x | Film_NP)?", "Who person was the person that produced ($x | Film_NP)?", "which person does ($x | Film_NP) produce?", "which person produced ($x | Film_NP)?", "which person produces ($x | Film_NP)?", "which persons did ($x | Film_NP) produce?", "which persons does ($x | Film_NP) produce?", "which persons produce ($x | Film_NP)?", "which persons produced ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films produced by ($x | Person_NP)?", "List all films produced by ($x | Person_NP)?", "What film was produced by ($x | Person_NP)?", "What films were produced by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) produce?", "show me all film that ($x | Person_NP) produced", "show me the film that ($x | Person_NP) produced", "which film did ($x | Person_NP) produce?", "which film produces the ($x | Person_NP)?", "which film was produced by ($x | Person_NP)?", "which films did ($x | Person_NP) produce?", "which films produce the ($x | Person_NP)?", "which films were produced by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create ($x | TelevisionShow_NP)?", "Give me all agents that created the ($x | TelevisionShow_NP)", "Who agent created ($x | TelevisionShow_NP)?", "Who agent created the ($x | TelevisionShow_NP)?", "Who agent created the television show ($x | TelevisionShow_NP)?", "Who agent created the television shows ($x | TelevisionShow_NP)?", "Who agent creates ($x | TelevisionShow_NP)?", "Who agent creates the ($x | TelevisionShow_NP)?", "Who agent creates the television show ($x | TelevisionShow_NP)?", "Who agent creates the television shows ($x | TelevisionShow_NP)?", "Who agent was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?", "which agents does ($x | TelevisionShow_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "570",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by ($x | Agent_NP)?", "List all television shows created by ($x | Agent_NP)?", "What kind of television show did ($x | Agent_NP) create?", "What television show was created by ($x | Agent_NP)?", "What television shows were created by ($x | Agent_NP)?", "show me all television show that ($x | Agent_NP) created", "show me the television show that ($x | Agent_NP) created", "which television show creates the ($x | Agent_NP)?", "which television show did ($x | Agent_NP) create?", "which television show was created by ($x | Agent_NP)?", "which television shows create the ($x | Agent_NP)?", "which television shows did ($x | Agent_NP) create?", "which television shows were created by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "571",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are created by ($x | Agent_NP)?", "How often did ($x | Agent_NP) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who person was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who organization was founded by ($x | Person_NP)?", "Who organizations were founded by ($x | Person_NP)?", "Who was ($x | Person_NP) founded by?", "Whom did ($x | Organisation_NP) found?", "which organization was founded by ($x | Person_NP)?", "which organizations were founded by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "574",
    "lexicalEntryUri" : "http://localhost:8080#to_found_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organizations are founded by ($x | Person_NP)?", "How often did ($x | Person_NP) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct ($x | Film_NP)?", "Give me all persons that directed the ($x | Film_NP)", "Who person directed ($x | Film_NP)?", "Who person directed the ($x | Film_NP)?", "Who person directed the film ($x | Film_NP)?", "Who person directed the films ($x | Film_NP)?", "Who person directs ($x | Film_NP)?", "Who person directs the ($x | Film_NP)?", "Who person directs the film ($x | Film_NP)?", "Who person directs the films ($x | Film_NP)?", "Who person was the person that directed ($x | Film_NP)?", "which person directed ($x | Film_NP)?", "which person directs ($x | Film_NP)?", "which person does ($x | Film_NP) direct?", "which persons did ($x | Film_NP) direct?", "which persons direct ($x | Film_NP)?", "which persons directed ($x | Film_NP)?", "which persons does ($x | Film_NP) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "576",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films directed by ($x | Person_NP)?", "List all films directed by ($x | Person_NP)?", "What film was directed by ($x | Person_NP)?", "What films were directed by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) direct?", "show me all film that ($x | Person_NP) directed", "show me the film that ($x | Person_NP) directed", "which film did ($x | Person_NP) direct?", "which film directs the ($x | Person_NP)?", "which film was directed by ($x | Person_NP)?", "which films did ($x | Person_NP) direct?", "which films direct the ($x | Person_NP)?", "which films were directed by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are directed by ($x | Person_NP)?", "How often did ($x | Person_NP) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover ($x | Place_NP)?", "Give me all persons that discovered the ($x | Place_NP)", "Who person discovered ($x | Place_NP)?", "Who person discovered the ($x | Place_NP)?", "Who person discovered the place ($x | Place_NP)?", "Who person discovered the places ($x | Place_NP)?", "Who person discovers ($x | Place_NP)?", "Who person discovers the ($x | Place_NP)?", "Who person discovers the place ($x | Place_NP)?", "Who person discovers the places ($x | Place_NP)?", "Who person was the person that discovered ($x | Place_NP)?", "which person discovered ($x | Place_NP)?", "which person discovers ($x | Place_NP)?", "which person does ($x | Place_NP) discover?", "which persons did ($x | Place_NP) discover?", "which persons discover ($x | Place_NP)?", "which persons discovered ($x | Place_NP)?", "which persons does ($x | Place_NP) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "579",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all places discovered by ($x | Person_NP)?", "List all places discovered by ($x | Person_NP)?", "What kind of place did ($x | Person_NP) discover?", "What place was discovered by ($x | Person_NP)?", "What places were discovered by ($x | Person_NP)?", "show me all place that ($x | Person_NP) discovered", "show me the place that ($x | Person_NP) discovered", "which place did ($x | Person_NP) discover?", "which place discovers the ($x | Person_NP)?", "which place was discovered by ($x | Person_NP)?", "which places did ($x | Person_NP) discover?", "which places discover the ($x | Person_NP)?", "which places were discovered by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "580",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many places are discovered by ($x | Person_NP)?", "How often did ($x | Person_NP) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports serve ($x | Airline_NP)?", "Give me all airports that served the ($x | Airline_NP)", "What airport served ($x | Airline_NP)?", "What airport served the ($x | Airline_NP)?", "What airport served the airline ($x | Airline_NP)?", "What airport served the airlines ($x | Airline_NP)?", "What airport serves ($x | Airline_NP)?", "What airport serves the ($x | Airline_NP)?", "What airport serves the airline ($x | Airline_NP)?", "What airport serves the airlines ($x | Airline_NP)?", "What airport was the airport that served ($x | Airline_NP)?", "which airport does ($x | Airline_NP) serve?", "which airport served ($x | Airline_NP)?", "which airport serves ($x | Airline_NP)?", "which airports did ($x | Airline_NP) serve?", "which airports does ($x | Airline_NP) serve?", "which airports serve ($x | Airline_NP)?", "which airports served ($x | Airline_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airlines served by ($x | Airport_NP)?", "List all airlines served by ($x | Airport_NP)?", "What airline was served by ($x | Airport_NP)?", "What airlines were served by ($x | Airport_NP)?", "What kind of airline did ($x | Airport_NP) serve?", "show me all airline that ($x | Airport_NP) served", "show me the airline that ($x | Airport_NP) served", "which airline did ($x | Airport_NP) serve?", "which airline serves the ($x | Airport_NP)?", "which airline was served by ($x | Airport_NP)?", "which airlines did ($x | Airport_NP) serve?", "which airlines serve the ($x | Airport_NP)?", "which airlines were served by ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airlines are served by ($x | Airport_NP)?", "How often did ($x | Airport_NP) serve?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons program ($x | Software_NP)?", "Give me all persons that programmed the ($x | Software_NP)", "Who person programmed ($x | Software_NP)?", "Who person programmed the ($x | Software_NP)?", "Who person programmed the software ($x | Software_NP)?", "Who person programmed the softwares ($x | Software_NP)?", "Who person programs ($x | Software_NP)?", "Who person programs the ($x | Software_NP)?", "Who person programs the software ($x | Software_NP)?", "Who person programs the softwares ($x | Software_NP)?", "Who person was the person that programmed ($x | Software_NP)?", "which person does ($x | Software_NP) program?", "which person programmed ($x | Software_NP)?", "which person programs ($x | Software_NP)?", "which persons did ($x | Software_NP) program?", "which persons does ($x | Software_NP) program?", "which persons program ($x | Software_NP)?", "which persons programmed ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "585",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares programmed by ($x | Person_NP)?", "List all softwares programmed by ($x | Person_NP)?", "What kind of software did ($x | Person_NP) program?", "What software was programmed by ($x | Person_NP)?", "What softwares were programmed by ($x | Person_NP)?", "show me all software that ($x | Person_NP) programmed", "show me the software that ($x | Person_NP) programmed", "which software did ($x | Person_NP) program?", "which software programs the ($x | Person_NP)?", "which software was programmed by ($x | Person_NP)?", "which softwares did ($x | Person_NP) program?", "which softwares program the ($x | Person_NP)?", "which softwares were programmed by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "586",
    "lexicalEntryUri" : "http://localhost:8080#to_program_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are programmed by ($x | Person_NP)?", "How often did ($x | Person_NP) program?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors star ($x | Work_NP)?", "Give me all actors that starred the ($x | Work_NP)", "Who actor starred ($x | Work_NP)?", "Who actor starred the ($x | Work_NP)?", "Who actor starred the work ($x | Work_NP)?", "Who actor starred the works ($x | Work_NP)?", "Who actor stars ($x | Work_NP)?", "Who actor stars the ($x | Work_NP)?", "Who actor stars the work ($x | Work_NP)?", "Who actor stars the works ($x | Work_NP)?", "Who actor was the actor that starred ($x | Work_NP)?", "which actor does ($x | Work_NP) star?", "which actor starred ($x | Work_NP)?", "which actor stars ($x | Work_NP)?", "which actors did ($x | Work_NP) star?", "which actors does ($x | Work_NP) star?", "which actors star ($x | Work_NP)?", "which actors starred ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works starred by ($x | Actor_NP)?", "List all works starred by ($x | Actor_NP)?", "What kind of work did ($x | Actor_NP) star?", "What work was starred by ($x | Actor_NP)?", "What works were starred by ($x | Actor_NP)?", "show me all work that ($x | Actor_NP) starred", "show me the work that ($x | Actor_NP) starred", "which work did ($x | Actor_NP) star?", "which work stars the ($x | Actor_NP)?", "which work was starred by ($x | Actor_NP)?", "which works did ($x | Actor_NP) star?", "which works star the ($x | Actor_NP)?", "which works were starred by ($x | Actor_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "589",
    "lexicalEntryUri" : "http://localhost:8080#to_star_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are starred by ($x | Actor_NP)?", "How often did ($x | Actor_NP) star?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | TelevisionShow_NP)", "Give me all persons write ($x | TelevisionShow_NP)?", "Who person was the person that wrote ($x | TelevisionShow_NP)?", "Who person writes ($x | TelevisionShow_NP)?", "Who person writes the ($x | TelevisionShow_NP)?", "Who person writes the television show ($x | TelevisionShow_NP)?", "Who person writes the television shows ($x | TelevisionShow_NP)?", "Who person wrote ($x | TelevisionShow_NP)?", "Who person wrote the ($x | TelevisionShow_NP)?", "Who person wrote the television show ($x | TelevisionShow_NP)?", "Who person wrote the television shows ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) write?", "which person writes ($x | TelevisionShow_NP)?", "which person wrote ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) write?", "which persons does ($x | TelevisionShow_NP) write?", "which persons write ($x | TelevisionShow_NP)?", "which persons wrote ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows wrote by ($x | Person_NP)?", "List all television shows wrote by ($x | Person_NP)?", "What kind of television show did ($x | Person_NP) write?", "What television show was wrote by ($x | Person_NP)?", "What television shows were wrote by ($x | Person_NP)?", "show me all television show that ($x | Person_NP) wrote", "show me the television show that ($x | Person_NP) wrote", "which television show did ($x | Person_NP) write?", "which television show was wrote by ($x | Person_NP)?", "which television show writes the ($x | Person_NP)?", "which television shows did ($x | Person_NP) write?", "which television shows were wrote by ($x | Person_NP)?", "which television shows write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works precede ($x | Work_NP)?", "Give me all works that preceded the ($x | Work_NP)", "What work preceded ($x | Work_NP)?", "What work preceded the ($x | Work_NP)?", "What work preceded the work ($x | Work_NP)?", "What work preceded the works ($x | Work_NP)?", "What work precedes ($x | Work_NP)?", "What work precedes the ($x | Work_NP)?", "What work precedes the work ($x | Work_NP)?", "What work precedes the works ($x | Work_NP)?", "What work was the work that preceded ($x | Work_NP)?", "which work does ($x | Work_NP) precede?", "which work preceded ($x | Work_NP)?", "which work precedes ($x | Work_NP)?", "which works did ($x | Work_NP) precede?", "which works does ($x | Work_NP) precede?", "which works precede ($x | Work_NP)?", "which works preceded ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/previousWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "594",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works preceded by ($x | Work_NP)?", "List all works preceded by ($x | Work_NP)?", "What kind of work did ($x | Work_NP) precede?", "What work was preceded by ($x | Work_NP)?", "What works were preceded by ($x | Work_NP)?", "show me all work that ($x | Work_NP) preceded", "show me the work that ($x | Work_NP) preceded", "which work did ($x | Work_NP) precede?", "which work precedes the ($x | Work_NP)?", "which work was preceded by ($x | Work_NP)?", "which works did ($x | Work_NP) precede?", "which works precede the ($x | Work_NP)?", "which works were preceded by ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are preceded by ($x | Work_NP)?", "How often did ($x | Work_NP) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/previousWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish ($x | Publisher_NP)?", "Give me all agents that published the ($x | Publisher_NP)", "Who agent published ($x | Publisher_NP)?", "Who agent published the ($x | Publisher_NP)?", "Who agent published the publisher ($x | Publisher_NP)?", "Who agent published the publishers ($x | Publisher_NP)?", "Who agent publishes ($x | Publisher_NP)?", "Who agent publishes the ($x | Publisher_NP)?", "Who agent publishes the publisher ($x | Publisher_NP)?", "Who agent publishes the publishers ($x | Publisher_NP)?", "Who agent was the agent that published ($x | Publisher_NP)?", "which agent does ($x | Publisher_NP) publish?", "which agent published ($x | Publisher_NP)?", "which agent publishes ($x | Publisher_NP)?", "which agents did ($x | Publisher_NP) publish?", "which agents does ($x | Publisher_NP) publish?", "which agents publish ($x | Publisher_NP)?", "which agents published ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "597",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers published by ($x | Agent_NP)?", "List all publishers published by ($x | Agent_NP)?", "What kind of publisher did ($x | Agent_NP) publish?", "What publisher was published by ($x | Agent_NP)?", "What publishers were published by ($x | Agent_NP)?", "show me all publisher that ($x | Agent_NP) published", "show me the publisher that ($x | Agent_NP) published", "which publisher did ($x | Agent_NP) publish?", "which publisher publishes the ($x | Agent_NP)?", "which publisher was published by ($x | Agent_NP)?", "which publishers did ($x | Agent_NP) publish?", "which publishers publish the ($x | Agent_NP)?", "which publishers were published by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "598",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many publishers are published by ($x | Agent_NP)?", "How often did ($x | Agent_NP) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint ($x | Work_NP)?", "Give me all persons that painted the ($x | Work_NP)", "Who person painted ($x | Work_NP)?", "Who person painted the ($x | Work_NP)?", "Who person painted the work ($x | Work_NP)?", "Who person painted the works ($x | Work_NP)?", "Who person paints ($x | Work_NP)?", "Who person paints the ($x | Work_NP)?", "Who person paints the work ($x | Work_NP)?", "Who person paints the works ($x | Work_NP)?", "Who person was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons does ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by ($x | Person_NP)?", "List all works painted by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) paint?", "What work was painted by ($x | Person_NP)?", "What works were painted by ($x | Person_NP)?", "show me all work that ($x | Person_NP) painted", "show me the work that ($x | Person_NP) painted", "which work did ($x | Person_NP) paint?", "which work paints the ($x | Person_NP)?", "which work was painted by ($x | Person_NP)?", "which works did ($x | Person_NP) paint?", "which works paint the ($x | Person_NP)?", "which works were painted by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are painted by ($x | Person_NP)?", "How often did ($x | Person_NP) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents maintain ($x | ArchitecturalStructure_NP)?", "Give me all agents that maintained the ($x | ArchitecturalStructure_NP)", "Who agent maintained ($x | ArchitecturalStructure_NP)?", "Who agent maintained the ($x | ArchitecturalStructure_NP)?", "Who agent maintained the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who agent maintained the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who agent maintains ($x | ArchitecturalStructure_NP)?", "Who agent maintains the ($x | ArchitecturalStructure_NP)?", "Who agent maintains the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who agent maintains the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who agent was the agent that maintained ($x | ArchitecturalStructure_NP)?", "which agent does ($x | ArchitecturalStructure_NP) maintain?", "which agent maintained ($x | ArchitecturalStructure_NP)?", "which agent maintains ($x | ArchitecturalStructure_NP)?", "which agents did ($x | ArchitecturalStructure_NP) maintain?", "which agents does ($x | ArchitecturalStructure_NP) maintain?", "which agents maintain ($x | ArchitecturalStructure_NP)?", "which agents maintained ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "603",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures maintained by ($x | Agent_NP)?", "List all ArchitecturalStructures maintained by ($x | Agent_NP)?", "What ArchitecturalStructure was maintained by ($x | Agent_NP)?", "What ArchitecturalStructures were maintained by ($x | Agent_NP)?", "What kind of ArchitecturalStructure did ($x | Agent_NP) maintain?", "show me all ArchitecturalStructure that ($x | Agent_NP) maintained", "show me the ArchitecturalStructure that ($x | Agent_NP) maintained", "which ArchitecturalStructure did ($x | Agent_NP) maintain?", "which ArchitecturalStructure maintains the ($x | Agent_NP)?", "which ArchitecturalStructure was maintained by ($x | Agent_NP)?", "which ArchitecturalStructures did ($x | Agent_NP) maintain?", "which ArchitecturalStructures maintain the ($x | Agent_NP)?", "which ArchitecturalStructures were maintained by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "604",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are maintained by ($x | Agent_NP)?", "How often did ($x | Agent_NP) maintain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was the person that trained ($x | Athlete_NP)?", "Who trained ($x | Athlete_NP)?", "Who trains ($x | Athlete_NP)?", "Whom is ($x | Athlete_NP) train?", "Whom was ($x | Athlete_NP) train?", "which person trained ($x | Athlete_NP)?", "which person trains ($x | Athlete_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who athlete was trained by ($x | Person_NP)?", "Who athlete were trained by ($x | Person_NP)?", "Who was ($x | Person_NP) trained by?", "Whom did ($x | Athlete_NP) train?", "which athlete was trained by ($x | Person_NP)?", "which athlete were trained by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "607",
    "lexicalEntryUri" : "http://localhost:8080#to_train_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete are trained by ($x | Person_NP)?", "How often did ($x | Person_NP) train?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EthnicGroup" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries live ($x | EthnicGroup_NP)?", "Give me all countries that lived the ($x | EthnicGroup_NP)", "What country lived ($x | EthnicGroup_NP)?", "What country lived the ($x | EthnicGroup_NP)?", "What country lived the ethnic group ($x | EthnicGroup_NP)?", "What country lived the ethnic groups ($x | EthnicGroup_NP)?", "What country lives ($x | EthnicGroup_NP)?", "What country lives the ($x | EthnicGroup_NP)?", "What country lives the ethnic group ($x | EthnicGroup_NP)?", "What country lives the ethnic groups ($x | EthnicGroup_NP)?", "What country was the country that lived ($x | EthnicGroup_NP)?", "which countries did ($x | EthnicGroup_NP) live?", "which countries does ($x | EthnicGroup_NP) live?", "which countries live ($x | EthnicGroup_NP)?", "which countries lived ($x | EthnicGroup_NP)?", "which country does ($x | EthnicGroup_NP) live?", "which country lived ($x | EthnicGroup_NP)?", "which country lives ($x | EthnicGroup_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ethnic groups lived in ($x | Country_NP)?", "List all ethnic groups lived in ($x | Country_NP)?", "What ethnic group was lived in ($x | Country_NP)?", "What ethnic groups were lived in ($x | Country_NP)?", "What kind of ethnic group did ($x | Country_NP) live?", "show me all ethnic group that ($x | Country_NP) lived", "show me the ethnic group that ($x | Country_NP) lived", "which ethnic group did ($x | Country_NP) live?", "which ethnic group lives the ($x | Country_NP)?", "which ethnic group was lived in ($x | Country_NP)?", "which ethnic groups did ($x | Country_NP) live?", "which ethnic groups live the ($x | Country_NP)?", "which ethnic groups were lived in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ethnic groups are lived in ($x | Country_NP)?", "How often did ($x | Country_NP) live?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents support ($x | Thing_NP)?", "Give me all agents that supported the ($x | Thing_NP)", "Who agent supported ($x | Thing_NP)?", "Who agent supported the ($x | Thing_NP)?", "Who agent supported the ideologies ($x | Thing_NP)?", "Who agent supported the ideology ($x | Thing_NP)?", "Who agent supports ($x | Thing_NP)?", "Who agent supports the ($x | Thing_NP)?", "Who agent supports the ideologies ($x | Thing_NP)?", "Who agent supports the ideology ($x | Thing_NP)?", "Who agent was the agent that supported ($x | Thing_NP)?", "which agent does ($x | Thing_NP) support?", "which agent supported ($x | Thing_NP)?", "which agent supports ($x | Thing_NP)?", "which agents did ($x | Thing_NP) support?", "which agents does ($x | Thing_NP) support?", "which agents support ($x | Thing_NP)?", "which agents supported ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "612",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ideologies supported by ($x | Agent_NP)?", "List all ideologies supported by ($x | Agent_NP)?", "What ideologies were supported by ($x | Agent_NP)?", "What ideology was supported by ($x | Agent_NP)?", "What kind of ideology did ($x | Agent_NP) support?", "show me all ideology that ($x | Agent_NP) supported", "show me the ideology that ($x | Agent_NP) supported", "which ideologies did ($x | Agent_NP) support?", "which ideologies support the ($x | Agent_NP)?", "which ideologies were supported by ($x | Agent_NP)?", "which ideology did ($x | Agent_NP) support?", "which ideology supports the ($x | Agent_NP)?", "which ideology was supported by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "613",
    "lexicalEntryUri" : "http://localhost:8080#to_support_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ideologies are supported by ($x | Agent_NP)?", "How often did ($x | Agent_NP) support?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won the ($x | Scientist_NP)", "Give me all awards win ($x | Scientist_NP)?", "What award was the award that won ($x | Scientist_NP)?", "What award wins ($x | Scientist_NP)?", "What award wins the ($x | Scientist_NP)?", "What award wins the scientist ($x | Scientist_NP)?", "What award wins the scientists ($x | Scientist_NP)?", "What award won ($x | Scientist_NP)?", "What award won the ($x | Scientist_NP)?", "What award won the scientist ($x | Scientist_NP)?", "What award won the scientists ($x | Scientist_NP)?", "which award does ($x | Scientist_NP) win?", "which award wins ($x | Scientist_NP)?", "which award won ($x | Scientist_NP)?", "which awards did ($x | Scientist_NP) win?", "which awards does ($x | Scientist_NP) win?", "which awards win ($x | Scientist_NP)?", "which awards won ($x | Scientist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all scientists won by ($x | Award_NP)?", "List all scientists won by ($x | Award_NP)?", "Who kind of scientist did ($x | Award_NP) win?", "Who scientist was won by ($x | Award_NP)?", "Who scientists were won by ($x | Award_NP)?", "show me all scientist that ($x | Award_NP) won", "show me the scientist that ($x | Award_NP) won", "which scientist did ($x | Award_NP) win?", "which scientist was won by ($x | Award_NP)?", "which scientist wins the ($x | Award_NP)?", "which scientists did ($x | Award_NP) win?", "which scientists were won by ($x | Award_NP)?", "which scientists win the ($x | Award_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "616",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many scientists are won by ($x | Award_NP)?", "How often did ($x | Award_NP) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents perform ($x | MusicalWork_NP)?", "Give me all agents that performed the ($x | MusicalWork_NP)", "Who agent performed ($x | MusicalWork_NP)?", "Who agent performed the ($x | MusicalWork_NP)?", "Who agent performed the music ($x | MusicalWork_NP)?", "Who agent performed the musics ($x | MusicalWork_NP)?", "Who agent performs ($x | MusicalWork_NP)?", "Who agent performs the ($x | MusicalWork_NP)?", "Who agent performs the music ($x | MusicalWork_NP)?", "Who agent performs the musics ($x | MusicalWork_NP)?", "Who agent was the agent that performed ($x | MusicalWork_NP)?", "which agent does ($x | MusicalWork_NP) perform?", "which agent performed ($x | MusicalWork_NP)?", "which agent performs ($x | MusicalWork_NP)?", "which agents did ($x | MusicalWork_NP) perform?", "which agents does ($x | MusicalWork_NP) perform?", "which agents perform ($x | MusicalWork_NP)?", "which agents performed ($x | MusicalWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "618",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics performed by ($x | Agent_NP)?", "List all musics performed by ($x | Agent_NP)?", "What kind of music did ($x | Agent_NP) perform?", "What music was performed by ($x | Agent_NP)?", "What musics were performed by ($x | Agent_NP)?", "show me all music that ($x | Agent_NP) performed", "show me the music that ($x | Agent_NP) performed", "which music did ($x | Agent_NP) perform?", "which music performs the ($x | Agent_NP)?", "which music was performed by ($x | Agent_NP)?", "which musics did ($x | Agent_NP) perform?", "which musics perform the ($x | Agent_NP)?", "which musics were performed by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musics are performed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) perform?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons direct ($x | Software_NP)?", "Give me all persons that directed the ($x | Software_NP)", "Who person directed ($x | Software_NP)?", "Who person directed the ($x | Software_NP)?", "Who person directed the software ($x | Software_NP)?", "Who person directed the softwares ($x | Software_NP)?", "Who person directs ($x | Software_NP)?", "Who person directs the ($x | Software_NP)?", "Who person directs the software ($x | Software_NP)?", "Who person directs the softwares ($x | Software_NP)?", "Who person was the person that directed ($x | Software_NP)?", "which person directed ($x | Software_NP)?", "which person directs ($x | Software_NP)?", "which person does ($x | Software_NP) direct?", "which persons did ($x | Software_NP) direct?", "which persons direct ($x | Software_NP)?", "which persons directed ($x | Software_NP)?", "which persons does ($x | Software_NP) direct?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "621",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares directed by ($x | Person_NP)?", "List all softwares directed by ($x | Person_NP)?", "What kind of software did ($x | Person_NP) direct?", "What software was directed by ($x | Person_NP)?", "What softwares were directed by ($x | Person_NP)?", "show me all software that ($x | Person_NP) directed", "show me the software that ($x | Person_NP) directed", "which software did ($x | Person_NP) direct?", "which software directs the ($x | Person_NP)?", "which software was directed by ($x | Person_NP)?", "which softwares did ($x | Person_NP) direct?", "which softwares direct the ($x | Person_NP)?", "which softwares were directed by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "622",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are directed by ($x | Person_NP)?", "How often did ($x | Person_NP) direct?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all museums exhibit ($x | Artwork_NP)?", "Give me all museums that exhibited the ($x | Artwork_NP)", "What museum exhibited ($x | Artwork_NP)?", "What museum exhibited the ($x | Artwork_NP)?", "What museum exhibited the artwork ($x | Artwork_NP)?", "What museum exhibited the artworks ($x | Artwork_NP)?", "What museum exhibits ($x | Artwork_NP)?", "What museum exhibits the ($x | Artwork_NP)?", "What museum exhibits the artwork ($x | Artwork_NP)?", "What museum exhibits the artworks ($x | Artwork_NP)?", "What museum was the museum that exhibited ($x | Artwork_NP)?", "which museum does ($x | Artwork_NP) exhibit?", "which museum exhibited ($x | Artwork_NP)?", "which museum exhibits ($x | Artwork_NP)?", "which museums did ($x | Artwork_NP) exhibit?", "which museums does ($x | Artwork_NP) exhibit?", "which museums exhibit ($x | Artwork_NP)?", "which museums exhibited ($x | Artwork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all artworks exhibited by ($x | Museum_NP)?", "List all artworks exhibited by ($x | Museum_NP)?", "What artwork was exhibited by ($x | Museum_NP)?", "What artworks were exhibited by ($x | Museum_NP)?", "What kind of artwork did ($x | Museum_NP) exhibit?", "show me all artwork that ($x | Museum_NP) exhibited", "show me the artwork that ($x | Museum_NP) exhibited", "which artwork did ($x | Museum_NP) exhibit?", "which artwork exhibits the ($x | Museum_NP)?", "which artwork was exhibited by ($x | Museum_NP)?", "which artworks did ($x | Museum_NP) exhibit?", "which artworks exhibit the ($x | Museum_NP)?", "which artworks were exhibited by ($x | Museum_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artworks are exhibited by ($x | Museum_NP)?", "How often did ($x | Museum_NP) exhibit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak ($x | Language_NP)?", "Give me all populated places that spoke the ($x | Language_NP)", "What populated place speaks ($x | Language_NP)?", "What populated place speaks the ($x | Language_NP)?", "What populated place speaks the language ($x | Language_NP)?", "What populated place speaks the languages ($x | Language_NP)?", "What populated place spoke ($x | Language_NP)?", "What populated place spoke the ($x | Language_NP)?", "What populated place spoke the language ($x | Language_NP)?", "What populated place spoke the languages ($x | Language_NP)?", "What populated place was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places does ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "627",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by ($x | PopulatedPlace_NP)?", "List all languages spoken by ($x | PopulatedPlace_NP)?", "What kind of language did ($x | PopulatedPlace_NP) speak?", "What language was spoken by ($x | PopulatedPlace_NP)?", "What languages were spoken by ($x | PopulatedPlace_NP)?", "show me all language that ($x | PopulatedPlace_NP) spoke", "show me the language that ($x | PopulatedPlace_NP) spoke", "which language did ($x | PopulatedPlace_NP) speak?", "which language speaks the ($x | PopulatedPlace_NP)?", "which language was spoken by ($x | PopulatedPlace_NP)?", "which languages did ($x | PopulatedPlace_NP) speak?", "which languages speak the ($x | PopulatedPlace_NP)?", "which languages were spoken by ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "628",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken by ($x | PopulatedPlace_NP)?", "How often did ($x | PopulatedPlace_NP) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all populated places speak ($x | Language_NP)?", "Give me all populated places that spoke the ($x | Language_NP)", "What populated place speaks ($x | Language_NP)?", "What populated place speaks the ($x | Language_NP)?", "What populated place speaks the language ($x | Language_NP)?", "What populated place speaks the languages ($x | Language_NP)?", "What populated place spoke ($x | Language_NP)?", "What populated place spoke the ($x | Language_NP)?", "What populated place spoke the language ($x | Language_NP)?", "What populated place spoke the languages ($x | Language_NP)?", "What populated place was the populated place that spoke ($x | Language_NP)?", "which populated place does ($x | Language_NP) speak?", "which populated place speaks ($x | Language_NP)?", "which populated place spoke ($x | Language_NP)?", "which populated places did ($x | Language_NP) speak?", "which populated places does ($x | Language_NP) speak?", "which populated places speak ($x | Language_NP)?", "which populated places spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken by ($x | PopulatedPlace_NP)?", "List all languages spoken by ($x | PopulatedPlace_NP)?", "What kind of language did ($x | PopulatedPlace_NP) speak?", "What language was spoken by ($x | PopulatedPlace_NP)?", "What languages were spoken by ($x | PopulatedPlace_NP)?", "show me all language that ($x | PopulatedPlace_NP) spoke", "show me the language that ($x | PopulatedPlace_NP) spoke", "which language did ($x | PopulatedPlace_NP) speak?", "which language speaks the ($x | PopulatedPlace_NP)?", "which language was spoken by ($x | PopulatedPlace_NP)?", "which languages did ($x | PopulatedPlace_NP) speak?", "which languages speak the ($x | PopulatedPlace_NP)?", "which languages were spoken by ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "631",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken by ($x | PopulatedPlace_NP)?", "How often did ($x | PopulatedPlace_NP) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons breed ($x | Thing_NP)?", "Give me all persons that bred the ($x | Thing_NP)", "Who person bred ($x | Thing_NP)?", "Who person bred the ($x | Thing_NP)?", "Who person bred the animal ($x | Thing_NP)?", "Who person bred the animals ($x | Thing_NP)?", "Who person breeds ($x | Thing_NP)?", "Who person breeds the ($x | Thing_NP)?", "Who person breeds the animal ($x | Thing_NP)?", "Who person breeds the animals ($x | Thing_NP)?", "Who person was the person that bred ($x | Thing_NP)?", "which person bred ($x | Thing_NP)?", "which person breeds ($x | Thing_NP)?", "which person does ($x | Thing_NP) breed?", "which persons bred ($x | Thing_NP)?", "which persons breed ($x | Thing_NP)?", "which persons did ($x | Thing_NP) breed?", "which persons does ($x | Thing_NP) breed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "633",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals bred by ($x | Person_NP)?", "List all animals bred by ($x | Person_NP)?", "What animal was bred by ($x | Person_NP)?", "What animals were bred by ($x | Person_NP)?", "What kind of animal did ($x | Person_NP) breed?", "show me all animal that ($x | Person_NP) bred", "show me the animal that ($x | Person_NP) bred", "which animal breeds the ($x | Person_NP)?", "which animal did ($x | Person_NP) breed?", "which animal was bred by ($x | Person_NP)?", "which animals breed the ($x | Person_NP)?", "which animals did ($x | Person_NP) breed?", "which animals were bred by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#to_breed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many animals are bred by ($x | Person_NP)?", "How often did ($x | Person_NP) breed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares develop ($x | Company_NP)?", "Give me all softwares that developed the ($x | Company_NP)", "What software developed ($x | Company_NP)?", "What software developed the ($x | Company_NP)?", "What software developed the company ($x | Company_NP)?", "What software develops ($x | Company_NP)?", "What software develops the ($x | Company_NP)?", "What software develops the company ($x | Company_NP)?", "What software was the software that developed ($x | Company_NP)?", "which software developed ($x | Company_NP)?", "which software develops ($x | Company_NP)?", "which software does ($x | Company_NP) develop?", "which softwares develop ($x | Company_NP)?", "which softwares developed ($x | Company_NP)?", "which softwares did ($x | Company_NP) develop?", "which softwares does ($x | Company_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "636",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company developed by ($x | Software_NP)?", "List all company developed by ($x | Software_NP)?", "Who company was developed by ($x | Software_NP)?", "Who company were developed by ($x | Software_NP)?", "Who kind of company did ($x | Software_NP) develop?", "show me all company that ($x | Software_NP) developed", "show me the company that ($x | Software_NP) developed", "which company develop the ($x | Software_NP)?", "which company develops the ($x | Software_NP)?", "which company did ($x | Software_NP) develop?", "which company was developed by ($x | Software_NP)?", "which company were developed by ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "637",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Software_NP)?", "How often did ($x | Software_NP) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop ($x | VideoGame_NP)?", "Give me all agents that developed the ($x | VideoGame_NP)", "Who agent developed ($x | VideoGame_NP)?", "Who agent developed the ($x | VideoGame_NP)?", "Who agent developed the video game ($x | VideoGame_NP)?", "Who agent developed the video games ($x | VideoGame_NP)?", "Who agent develops ($x | VideoGame_NP)?", "Who agent develops the ($x | VideoGame_NP)?", "Who agent develops the video game ($x | VideoGame_NP)?", "Who agent develops the video games ($x | VideoGame_NP)?", "Who agent was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?", "which agents does ($x | VideoGame_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by ($x | Agent_NP)?", "List all video games developed by ($x | Agent_NP)?", "What kind of video game did ($x | Agent_NP) develop?", "What video game was developed by ($x | Agent_NP)?", "What video games were developed by ($x | Agent_NP)?", "show me all video game that ($x | Agent_NP) developed", "show me the video game that ($x | Agent_NP) developed", "which video game develops the ($x | Agent_NP)?", "which video game did ($x | Agent_NP) develop?", "which video game was developed by ($x | Agent_NP)?", "which video games develop the ($x | Agent_NP)?", "which video games did ($x | Agent_NP) develop?", "which video games were developed by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are developed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was the politician that preceded ($x | Politician_NP)?", "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/after> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "642",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was preceded by ($x | Politician_NP)?", "Who politicians were preceded by ($x | Politician_NP)?", "Who was ($x | Politician_NP) preceded by?", "Whom did ($x | Politician_NP) precede?", "which politician was preceded by ($x | Politician_NP)?", "which politicians were preceded by ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are preceded by ($x | Politician_NP)?", "How often did ($x | Politician_NP) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/after> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "645",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by ($x | Company_NP)?", "List all company developed by ($x | Company_NP)?", "What company was developed by ($x | Company_NP)?", "What company were developed by ($x | Company_NP)?", "What kind of company did ($x | Company_NP) develop?", "show me all company that ($x | Company_NP) developed", "show me the company that ($x | Company_NP) developed", "which company develop the ($x | Company_NP)?", "which company develops the ($x | Company_NP)?", "which company did ($x | Company_NP) develop?", "which company was developed by ($x | Company_NP)?", "which company were developed by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "646",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Company_NP)?", "How often did ($x | Company_NP) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who developed ($x | Software_NP)?", "Who develops ($x | Software_NP)?", "which company develop ($x | Software_NP)?", "which company developed ($x | Software_NP)?", "which company develops ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company developed by ($x | Company_NP)?", "List all company developed by ($x | Company_NP)?", "What company was developed by ($x | Company_NP)?", "What company were developed by ($x | Company_NP)?", "What kind of company did ($x | Company_NP) develop?", "show me all company that ($x | Company_NP) developed", "show me the company that ($x | Company_NP) developed", "which company develop the ($x | Company_NP)?", "which company develops the ($x | Company_NP)?", "which company did ($x | Company_NP) develop?", "which company was developed by ($x | Company_NP)?", "which company were developed by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "649",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are developed by ($x | Company_NP)?", "How often did ($x | Company_NP) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors play ($x | Work_NP)?", "Give me all actors that played the ($x | Work_NP)", "Who actor played ($x | Work_NP)?", "Who actor played the ($x | Work_NP)?", "Who actor played the work ($x | Work_NP)?", "Who actor played the works ($x | Work_NP)?", "Who actor plays ($x | Work_NP)?", "Who actor plays the ($x | Work_NP)?", "Who actor plays the work ($x | Work_NP)?", "Who actor plays the works ($x | Work_NP)?", "Who actor was the actor that played ($x | Work_NP)?", "which actor does ($x | Work_NP) play?", "which actor played ($x | Work_NP)?", "which actor plays ($x | Work_NP)?", "which actors did ($x | Work_NP) play?", "which actors does ($x | Work_NP) play?", "which actors play ($x | Work_NP)?", "which actors played ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works played by ($x | Actor_NP)?", "List all works played by ($x | Actor_NP)?", "What kind of work did ($x | Actor_NP) play?", "What work was played by ($x | Actor_NP)?", "What works were played by ($x | Actor_NP)?", "show me all work that ($x | Actor_NP) played", "show me the work that ($x | Actor_NP) played", "which work did ($x | Actor_NP) play?", "which work plays the ($x | Actor_NP)?", "which work was played by ($x | Actor_NP)?", "which works did ($x | Actor_NP) play?", "which works play the ($x | Actor_NP)?", "which works were played by ($x | Actor_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are played by ($x | Actor_NP)?", "How often did ($x | Actor_NP) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own ($x | Thing_NP)?", "Give me all agents that owned the ($x | Thing_NP)", "Who agent owned ($x | Thing_NP)?", "Who agent owned the ($x | Thing_NP)?", "Who agent owned the animal ($x | Thing_NP)?", "Who agent owned the animals ($x | Thing_NP)?", "Who agent owns ($x | Thing_NP)?", "Who agent owns the ($x | Thing_NP)?", "Who agent owns the animal ($x | Thing_NP)?", "Who agent owns the animals ($x | Thing_NP)?", "Who agent was the agent that owned ($x | Thing_NP)?", "which agent does ($x | Thing_NP) own?", "which agent owned ($x | Thing_NP)?", "which agent owns ($x | Thing_NP)?", "which agents did ($x | Thing_NP) own?", "which agents does ($x | Thing_NP) own?", "which agents own ($x | Thing_NP)?", "which agents owned ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "654",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all animals owned by ($x | Agent_NP)?", "List all animals owned by ($x | Agent_NP)?", "What animal was owned by ($x | Agent_NP)?", "What animals were owned by ($x | Agent_NP)?", "What kind of animal did ($x | Agent_NP) own?", "show me all animal that ($x | Agent_NP) owned", "show me the animal that ($x | Agent_NP) owned", "which animal did ($x | Agent_NP) own?", "which animal owns the ($x | Agent_NP)?", "which animal was owned by ($x | Agent_NP)?", "which animals did ($x | Agent_NP) own?", "which animals own the ($x | Agent_NP)?", "which animals were owned by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#to_own_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many animals are owned by ($x | Agent_NP)?", "How often did ($x | Agent_NP) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Who produced ($x | Ship_NP)?", "Who produces ($x | Ship_NP)?", "which company marry to ($x | Ship_NP)?", "which company produced ($x | Ship_NP)?", "which company produces ($x | Ship_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "657",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all company produced by ($x | Company_NP)?", "List all company produced by ($x | Company_NP)?", "What company was produced by ($x | Company_NP)?", "What company were produced by ($x | Company_NP)?", "What kind of company did ($x | Company_NP) marry to?", "show me all company that ($x | Company_NP) produced", "show me the company that ($x | Company_NP) produced", "which company did ($x | Company_NP) marry to?", "which company marry to the ($x | Company_NP)?", "which company produces the ($x | Company_NP)?", "which company was produced by ($x | Company_NP)?", "which company were produced by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "658",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many company are produced by ($x | Company_NP)?", "How often did ($x | Company_NP) marry to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals cover ($x | Thing_NP)?", "Give me all academic journals that covered the ($x | Thing_NP)", "What academic journal covered ($x | Thing_NP)?", "What academic journal covered the ($x | Thing_NP)?", "What academic journal covers ($x | Thing_NP)?", "What academic journal covers the ($x | Thing_NP)?", "What academic journal was the academic journal that covered ($x | Thing_NP)?", "which academic journal covered ($x | Thing_NP)?", "which academic journal covers ($x | Thing_NP)?", "which academic journal does ($x | Thing_NP) cover?", "which academic journals cover ($x | Thing_NP)?", "which academic journals covered ($x | Thing_NP)?", "which academic journals did ($x | Thing_NP) cover?", "which academic journals does ($x | Thing_NP) cover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#to_cover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How often did ($x | Magazine_NP) cover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all awards that won the ($x | Person_NP)", "Give me all awards win ($x | Person_NP)?", "What award was the award that won ($x | Person_NP)?", "What award wins ($x | Person_NP)?", "What award wins the ($x | Person_NP)?", "What award wins the person ($x | Person_NP)?", "What award wins the persons ($x | Person_NP)?", "What award won ($x | Person_NP)?", "What award won the ($x | Person_NP)?", "What award won the person ($x | Person_NP)?", "What award won the persons ($x | Person_NP)?", "which award does ($x | Person_NP) win?", "which award wins ($x | Person_NP)?", "which award won ($x | Person_NP)?", "which awards did ($x | Person_NP) win?", "which awards does ($x | Person_NP) win?", "which awards win ($x | Person_NP)?", "which awards won ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "663",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons won by ($x | Award_NP)?", "List all persons won by ($x | Award_NP)?", "Who kind of person did ($x | Award_NP) win?", "Who person was won by ($x | Award_NP)?", "Who persons were won by ($x | Award_NP)?", "show me all person that ($x | Award_NP) won", "show me the person that ($x | Award_NP) won", "which person did ($x | Award_NP) win?", "which person was won by ($x | Award_NP)?", "which person wins the ($x | Award_NP)?", "which persons did ($x | Award_NP) win?", "which persons were won by ($x | Award_NP)?", "which persons win the ($x | Award_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "664",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are won by ($x | Award_NP)?", "How often did ($x | Award_NP) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations control ($x | Airport_NP)?", "Give me all organizations that controlled the ($x | Airport_NP)", "Who organization controlled ($x | Airport_NP)?", "Who organization controlled the ($x | Airport_NP)?", "Who organization controlled the airport ($x | Airport_NP)?", "Who organization controlled the airports ($x | Airport_NP)?", "Who organization controls ($x | Airport_NP)?", "Who organization controls the ($x | Airport_NP)?", "Who organization controls the airport ($x | Airport_NP)?", "Who organization controls the airports ($x | Airport_NP)?", "Who organization was the organization that controlled ($x | Airport_NP)?", "which organization controlled ($x | Airport_NP)?", "which organization controls ($x | Airport_NP)?", "which organization does ($x | Airport_NP) control?", "which organizations control ($x | Airport_NP)?", "which organizations controlled ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) control?", "which organizations does ($x | Airport_NP) control?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports controlled by ($x | Organisation_NP)?", "List all airports controlled by ($x | Organisation_NP)?", "What airport was controlled by ($x | Organisation_NP)?", "What airports were controlled by ($x | Organisation_NP)?", "What kind of airport did ($x | Organisation_NP) control?", "show me all airport that ($x | Organisation_NP) controlled", "show me the airport that ($x | Organisation_NP) controlled", "which airport controls the ($x | Organisation_NP)?", "which airport did ($x | Organisation_NP) control?", "which airport was controlled by ($x | Organisation_NP)?", "which airports control the ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) control?", "which airports were controlled by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "667",
    "lexicalEntryUri" : "http://localhost:8080#to_control_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are controlled by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) control?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was the person that produced ($x | Person_NP)?", "Who produced ($x | Person_NP)?", "Who produces ($x | Person_NP)?", "Whom is ($x | Person_NP) marry to?", "Whom was ($x | Person_NP) marry to?", "which person produced ($x | Person_NP)?", "which person produces ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "669",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was married to by ($x | Person_NP)?", "Who persons were married to by ($x | Person_NP)?", "Who was ($x | Person_NP) married to by?", "Whom did ($x | Person_NP) marry to?", "which person was married to by ($x | Person_NP)?", "which persons were married to by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are married to by ($x | Person_NP)?", "How often did ($x | Person_NP) marry to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Album_NP)", "Give me all persons write ($x | Album_NP)?", "Who person was the person that wrote ($x | Album_NP)?", "Who person writes ($x | Album_NP)?", "Who person writes the ($x | Album_NP)?", "Who person writes the album ($x | Album_NP)?", "Who person writes the albums ($x | Album_NP)?", "Who person wrote ($x | Album_NP)?", "Who person wrote the ($x | Album_NP)?", "Who person wrote the album ($x | Album_NP)?", "Who person wrote the albums ($x | Album_NP)?", "which person does ($x | Album_NP) write?", "which person writes ($x | Album_NP)?", "which person wrote ($x | Album_NP)?", "which persons did ($x | Album_NP) write?", "which persons does ($x | Album_NP) write?", "which persons write ($x | Album_NP)?", "which persons wrote ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/allLyrics> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "672",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums wrote by ($x | Person_NP)?", "List all albums wrote by ($x | Person_NP)?", "What album was wrote by ($x | Person_NP)?", "What albums were wrote by ($x | Person_NP)?", "What kind of album did ($x | Person_NP) write?", "show me all album that ($x | Person_NP) wrote", "show me the album that ($x | Person_NP) wrote", "which album did ($x | Person_NP) write?", "which album was wrote by ($x | Person_NP)?", "which album writes the ($x | Person_NP)?", "which albums did ($x | Person_NP) write?", "which albums were wrote by ($x | Person_NP)?", "which albums write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "673",
    "lexicalEntryUri" : "http://localhost:8080#to_write_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/allLyrics> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all countries speak ($x | Language_NP)?", "Give me all countries that spoke the ($x | Language_NP)", "What country speaks ($x | Language_NP)?", "What country speaks the ($x | Language_NP)?", "What country speaks the language ($x | Language_NP)?", "What country speaks the languages ($x | Language_NP)?", "What country spoke ($x | Language_NP)?", "What country spoke the ($x | Language_NP)?", "What country spoke the language ($x | Language_NP)?", "What country spoke the languages ($x | Language_NP)?", "What country was the country that spoke ($x | Language_NP)?", "which countries did ($x | Language_NP) speak?", "which countries does ($x | Language_NP) speak?", "which countries speak ($x | Language_NP)?", "which countries spoke ($x | Language_NP)?", "which country does ($x | Language_NP) speak?", "which country speaks ($x | Language_NP)?", "which country spoke ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all languages spoken in ($x | Country_NP)?", "List all languages spoken in ($x | Country_NP)?", "What kind of language did ($x | Country_NP) speak?", "What language was spoken in ($x | Country_NP)?", "What languages were spoken in ($x | Country_NP)?", "show me all language that ($x | Country_NP) spoke", "show me the language that ($x | Country_NP) spoke", "which language did ($x | Country_NP) speak?", "which language speaks the ($x | Country_NP)?", "which language was spoken in ($x | Country_NP)?", "which languages did ($x | Country_NP) speak?", "which languages speak the ($x | Country_NP)?", "which languages were spoken in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many languages are spoken in ($x | Country_NP)?", "How often did ($x | Country_NP) speak?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons illustrate ($x | WrittenWork_NP)?", "Give me all persons that illustrated the ($x | WrittenWork_NP)", "Who person illustrated ($x | WrittenWork_NP)?", "Who person illustrated the ($x | WrittenWork_NP)?", "Who person illustrated the written work ($x | WrittenWork_NP)?", "Who person illustrates ($x | WrittenWork_NP)?", "Who person illustrates the ($x | WrittenWork_NP)?", "Who person illustrates the written work ($x | WrittenWork_NP)?", "Who person was the person that illustrated ($x | WrittenWork_NP)?", "which person does ($x | WrittenWork_NP) illustrate?", "which person illustrated ($x | WrittenWork_NP)?", "which person illustrates ($x | WrittenWork_NP)?", "which persons did ($x | WrittenWork_NP) illustrate?", "which persons does ($x | WrittenWork_NP) illustrate?", "which persons illustrate ($x | WrittenWork_NP)?", "which persons illustrated ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "678",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all written work illustrated by ($x | Person_NP)?", "List all written work illustrated by ($x | Person_NP)?", "What kind of written work did ($x | Person_NP) illustrate?", "What written work was illustrated by ($x | Person_NP)?", "What written work were illustrated by ($x | Person_NP)?", "show me all written work that ($x | Person_NP) illustrated", "show me the written work that ($x | Person_NP) illustrated", "which written work did ($x | Person_NP) illustrate?", "which written work illustrate the ($x | Person_NP)?", "which written work illustrates the ($x | Person_NP)?", "which written work was illustrated by ($x | Person_NP)?", "which written work were illustrated by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "679",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many written work are illustrated by ($x | Person_NP)?", "How often did ($x | Person_NP) illustrate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all broadcasters air ($x | Film_NP)?", "Give me all broadcasters that aired the ($x | Film_NP)", "What broadcaster aired ($x | Film_NP)?", "What broadcaster aired the ($x | Film_NP)?", "What broadcaster aired the film ($x | Film_NP)?", "What broadcaster aired the films ($x | Film_NP)?", "What broadcaster airs ($x | Film_NP)?", "What broadcaster airs the ($x | Film_NP)?", "What broadcaster airs the film ($x | Film_NP)?", "What broadcaster airs the films ($x | Film_NP)?", "What broadcaster was the broadcaster that aired ($x | Film_NP)?", "which broadcaster aired ($x | Film_NP)?", "which broadcaster airs ($x | Film_NP)?", "which broadcaster does ($x | Film_NP) air?", "which broadcasters air ($x | Film_NP)?", "which broadcasters aired ($x | Film_NP)?", "which broadcasters did ($x | Film_NP) air?", "which broadcasters does ($x | Film_NP) air?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films aired by ($x | Thing_NP)?", "List all films aired by ($x | Thing_NP)?", "What film was aired by ($x | Thing_NP)?", "What films were aired by ($x | Thing_NP)?", "What kind of film did ($x | Thing_NP) air?", "show me all film that ($x | Thing_NP) aired", "show me the film that ($x | Thing_NP) aired", "which film airs the ($x | Thing_NP)?", "which film did ($x | Thing_NP) air?", "which film was aired by ($x | Thing_NP)?", "which films air the ($x | Thing_NP)?", "which films did ($x | Thing_NP) air?", "which films were aired by ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "682",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are aired by ($x | Thing_NP)?", "How often did ($x | Thing_NP) air?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works follow ($x | Work_NP)?", "Give me all works that followed the ($x | Work_NP)", "What work followed ($x | Work_NP)?", "What work followed the ($x | Work_NP)?", "What work followed the work ($x | Work_NP)?", "What work followed the works ($x | Work_NP)?", "What work follows ($x | Work_NP)?", "What work follows the ($x | Work_NP)?", "What work follows the work ($x | Work_NP)?", "What work follows the works ($x | Work_NP)?", "What work was the work that followed ($x | Work_NP)?", "which work does ($x | Work_NP) follow?", "which work followed ($x | Work_NP)?", "which work follows ($x | Work_NP)?", "which works did ($x | Work_NP) follow?", "which works does ($x | Work_NP) follow?", "which works follow ($x | Work_NP)?", "which works followed ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsequentWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "684",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works followed by ($x | Work_NP)?", "List all works followed by ($x | Work_NP)?", "What kind of work did ($x | Work_NP) follow?", "What work was followed by ($x | Work_NP)?", "What works were followed by ($x | Work_NP)?", "show me all work that ($x | Work_NP) followed", "show me the work that ($x | Work_NP) followed", "which work did ($x | Work_NP) follow?", "which work follows the ($x | Work_NP)?", "which work was followed by ($x | Work_NP)?", "which works did ($x | Work_NP) follow?", "which works follow the ($x | Work_NP)?", "which works were followed by ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are followed by ($x | Work_NP)?", "How often did ($x | Work_NP) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/subsequentWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums follow ($x | Album_NP)?", "Give me all albums that followed the ($x | Album_NP)", "What album followed ($x | Album_NP)?", "What album followed the ($x | Album_NP)?", "What album followed the album ($x | Album_NP)?", "What album followed the albums ($x | Album_NP)?", "What album follows ($x | Album_NP)?", "What album follows the ($x | Album_NP)?", "What album follows the album ($x | Album_NP)?", "What album follows the albums ($x | Album_NP)?", "What album was the album that followed ($x | Album_NP)?", "which album does ($x | Album_NP) follow?", "which album followed ($x | Album_NP)?", "which album follows ($x | Album_NP)?", "which albums did ($x | Album_NP) follow?", "which albums does ($x | Album_NP) follow?", "which albums follow ($x | Album_NP)?", "which albums followed ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "687",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums followed by ($x | Album_NP)?", "List all albums followed by ($x | Album_NP)?", "What album was followed by ($x | Album_NP)?", "What albums were followed by ($x | Album_NP)?", "What kind of album did ($x | Album_NP) follow?", "show me all album that ($x | Album_NP) followed", "show me the album that ($x | Album_NP) followed", "which album did ($x | Album_NP) follow?", "which album follows the ($x | Album_NP)?", "which album was followed by ($x | Album_NP)?", "which albums did ($x | Album_NP) follow?", "which albums follow the ($x | Album_NP)?", "which albums were followed by ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "688",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are followed by ($x | Album_NP)?", "How often did ($x | Album_NP) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design ($x | Software_NP)?", "Give me all persons that designed the ($x | Software_NP)", "Who person designed ($x | Software_NP)?", "Who person designed the ($x | Software_NP)?", "Who person designed the software ($x | Software_NP)?", "Who person designed the softwares ($x | Software_NP)?", "Who person designs ($x | Software_NP)?", "Who person designs the ($x | Software_NP)?", "Who person designs the software ($x | Software_NP)?", "Who person designs the softwares ($x | Software_NP)?", "Who person was the person that designed ($x | Software_NP)?", "which person designed ($x | Software_NP)?", "which person designs ($x | Software_NP)?", "which person does ($x | Software_NP) design?", "which persons design ($x | Software_NP)?", "which persons designed ($x | Software_NP)?", "which persons did ($x | Software_NP) design?", "which persons does ($x | Software_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all softwares designed by ($x | Person_NP)?", "List all softwares designed by ($x | Person_NP)?", "What kind of software did ($x | Person_NP) design?", "What software was designed by ($x | Person_NP)?", "What softwares were designed by ($x | Person_NP)?", "show me all software that ($x | Person_NP) designed", "show me the software that ($x | Person_NP) designed", "which software designs the ($x | Person_NP)?", "which software did ($x | Person_NP) design?", "which software was designed by ($x | Person_NP)?", "which softwares design the ($x | Person_NP)?", "which softwares did ($x | Person_NP) design?", "which softwares were designed by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#to_design_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares are designed by ($x | Person_NP)?", "How often did ($x | Person_NP) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "How much did ($x | Film_NP) cost?", "How much does ($x | Film_NP) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "693",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "which film costed by ($x | Number_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "694",
    "lexicalEntryUri" : "http://localhost:8080#to_cost",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are costed by ($x | Number_NP)?", "How often did ($x | Number_NP) cost?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons design ($x | Building_NP)?", "Give me all persons that designed the ($x | Building_NP)", "Who person designed ($x | Building_NP)?", "Who person designed the ($x | Building_NP)?", "Who person designed the Building ($x | Building_NP)?", "Who person designed the dbo:Buildings ($x | Building_NP)?", "Who person designs ($x | Building_NP)?", "Who person designs the ($x | Building_NP)?", "Who person designs the Building ($x | Building_NP)?", "Who person designs the dbo:Buildings ($x | Building_NP)?", "Who person was the person that designed ($x | Building_NP)?", "which person designed ($x | Building_NP)?", "which person designs ($x | Building_NP)?", "which person does ($x | Building_NP) design?", "which persons design ($x | Building_NP)?", "which persons designed ($x | Building_NP)?", "which persons did ($x | Building_NP) design?", "which persons does ($x | Building_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all dbo:Buildings designed by ($x | Person_NP)?", "List all dbo:Buildings designed by ($x | Person_NP)?", "What Building was designed by ($x | Person_NP)?", "What dbo:Buildings were designed by ($x | Person_NP)?", "What kind of Building did ($x | Person_NP) design?", "show me all Building that ($x | Person_NP) designed", "show me the Building that ($x | Person_NP) designed", "which Building designs the ($x | Person_NP)?", "which Building did ($x | Person_NP) design?", "which Building was designed by ($x | Person_NP)?", "which dbo:Buildings design the ($x | Person_NP)?", "which dbo:Buildings did ($x | Person_NP) design?", "which dbo:Buildings were designed by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "697",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many dbo:Buildings are designed by ($x | Person_NP)?", "How often did ($x | Person_NP) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Work_NP)", "Give me all persons write ($x | Work_NP)?", "Who person was the person that wrote ($x | Work_NP)?", "Who person writes ($x | Work_NP)?", "Who person writes the ($x | Work_NP)?", "Who person writes the work ($x | Work_NP)?", "Who person writes the works ($x | Work_NP)?", "Who person wrote ($x | Work_NP)?", "Who person wrote the ($x | Work_NP)?", "Who person wrote the work ($x | Work_NP)?", "Who person wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "699",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works wrote by ($x | Person_NP)?", "List all works wrote by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) write?", "What work was wrote by ($x | Person_NP)?", "What works were wrote by ($x | Person_NP)?", "show me all work that ($x | Person_NP) wrote", "show me the work that ($x | Person_NP) wrote", "which work did ($x | Person_NP) write?", "which work was wrote by ($x | Person_NP)?", "which work writes the ($x | Person_NP)?", "which works did ($x | Person_NP) write?", "which works were wrote by ($x | Person_NP)?", "which works write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#to_write_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the soundtrack for ($x | Film_NP)?", "Give me all persons that compose the soundtrack for the ($x | Film_NP)", "Who person compose the soundtrack for ($x | Film_NP)?", "Who person compose the soundtrack for the ($x | Film_NP)?", "Who person compose the soundtrack for the film ($x | Film_NP)?", "Who person compose the soundtrack for the films ($x | Film_NP)?", "Who person was the person that compose the soundtrack for ($x | Film_NP)?", "which person compose the soundtrack for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the soundtrack for?", "which persons compose the soundtrack for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the soundtrack for?", "which persons does ($x | Film_NP) compose the soundtrack for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "702",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films compose the soundtrack for by ($x | Person_NP)?", "List all films compose the soundtrack for by ($x | Person_NP)?", "What film was compose the soundtrack for by ($x | Person_NP)?", "What films were compose the soundtrack for by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) compose the soundtrack for?", "show me all film that ($x | Person_NP) compose the soundtrack for", "show me the film that ($x | Person_NP) compose the soundtrack for", "which film compose the soundtrack for the ($x | Person_NP)?", "which film did ($x | Person_NP) compose the soundtrack for?", "which film was compose the soundtrack for by ($x | Person_NP)?", "which films compose the soundtrack for the ($x | Person_NP)?", "which films did ($x | Person_NP) compose the soundtrack for?", "which films were compose the soundtrack for by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "703",
    "lexicalEntryUri" : "http://localhost:8080#to_Compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are compose the soundtrack for by ($x | Person_NP)?", "How often did ($x | Person_NP) compose the soundtrack for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Agent_NP)?", "Who founds ($x | Agent_NP)?", "Who pope was the pope that founded ($x | Agent_NP)?", "Whom is ($x | Agent_NP) found?", "Whom was ($x | Agent_NP) found?", "which pope founded ($x | Agent_NP)?", "which pope founds ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who agent was founded by ($x | Pope_NP)?", "Who agents were founded by ($x | Pope_NP)?", "Who was ($x | Pope_NP) founded by?", "Whom did ($x | Agent_NP) found?", "which agent was founded by ($x | Pope_NP)?", "which agents were founded by ($x | Pope_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many agents are founded by ($x | Pope_NP)?", "How often did ($x | Pope_NP) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents develop ($x | VideoGame_NP)?", "Give me all agents that developed the ($x | VideoGame_NP)", "Who agent developed ($x | VideoGame_NP)?", "Who agent developed the ($x | VideoGame_NP)?", "Who agent developed the video game ($x | VideoGame_NP)?", "Who agent developed the video games ($x | VideoGame_NP)?", "Who agent develops ($x | VideoGame_NP)?", "Who agent develops the ($x | VideoGame_NP)?", "Who agent develops the video game ($x | VideoGame_NP)?", "Who agent develops the video games ($x | VideoGame_NP)?", "Who agent was the agent that developed ($x | VideoGame_NP)?", "which agent developed ($x | VideoGame_NP)?", "which agent develops ($x | VideoGame_NP)?", "which agent does ($x | VideoGame_NP) develop?", "which agents develop ($x | VideoGame_NP)?", "which agents developed ($x | VideoGame_NP)?", "which agents did ($x | VideoGame_NP) develop?", "which agents does ($x | VideoGame_NP) develop?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "708",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games developed by ($x | Agent_NP)?", "List all video games developed by ($x | Agent_NP)?", "What kind of video game did ($x | Agent_NP) develop?", "What video game was developed by ($x | Agent_NP)?", "What video games were developed by ($x | Agent_NP)?", "show me all video game that ($x | Agent_NP) developed", "show me the video game that ($x | Agent_NP) developed", "which video game develops the ($x | Agent_NP)?", "which video game did ($x | Agent_NP) develop?", "which video game was developed by ($x | Agent_NP)?", "which video games develop the ($x | Agent_NP)?", "which video games did ($x | Agent_NP) develop?", "which video games were developed by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "709",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are developed by ($x | Agent_NP)?", "How often did ($x | Agent_NP) develop?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents create ($x | TelevisionShow_NP)?", "Give me all agents that created the ($x | TelevisionShow_NP)", "Who agent created ($x | TelevisionShow_NP)?", "Who agent created the ($x | TelevisionShow_NP)?", "Who agent created the television show ($x | TelevisionShow_NP)?", "Who agent created the television shows ($x | TelevisionShow_NP)?", "Who agent creates ($x | TelevisionShow_NP)?", "Who agent creates the ($x | TelevisionShow_NP)?", "Who agent creates the television show ($x | TelevisionShow_NP)?", "Who agent creates the television shows ($x | TelevisionShow_NP)?", "Who agent was the agent that created ($x | TelevisionShow_NP)?", "which agent created ($x | TelevisionShow_NP)?", "which agent creates ($x | TelevisionShow_NP)?", "which agent does ($x | TelevisionShow_NP) create?", "which agents create ($x | TelevisionShow_NP)?", "which agents created ($x | TelevisionShow_NP)?", "which agents did ($x | TelevisionShow_NP) create?", "which agents does ($x | TelevisionShow_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows created by ($x | Agent_NP)?", "List all television shows created by ($x | Agent_NP)?", "What kind of television show did ($x | Agent_NP) create?", "What television show was created by ($x | Agent_NP)?", "What television shows were created by ($x | Agent_NP)?", "show me all television show that ($x | Agent_NP) created", "show me the television show that ($x | Agent_NP) created", "which television show creates the ($x | Agent_NP)?", "which television show did ($x | Agent_NP) create?", "which television show was created by ($x | Agent_NP)?", "which television shows create the ($x | Agent_NP)?", "which television shows did ($x | Agent_NP) create?", "which television shows were created by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "712",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are created by ($x | Agent_NP)?", "How often did ($x | Agent_NP) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Book_NP)?", "Give me all persons that created the ($x | Book_NP)", "Who person created ($x | Book_NP)?", "Who person created the ($x | Book_NP)?", "Who person created the book ($x | Book_NP)?", "Who person created the books ($x | Book_NP)?", "Who person creates ($x | Book_NP)?", "Who person creates the ($x | Book_NP)?", "Who person creates the book ($x | Book_NP)?", "Who person creates the books ($x | Book_NP)?", "Who person was the person that created ($x | Book_NP)?", "which person created ($x | Book_NP)?", "which person creates ($x | Book_NP)?", "which person does ($x | Book_NP) create?", "which persons create ($x | Book_NP)?", "which persons created ($x | Book_NP)?", "which persons did ($x | Book_NP) create?", "which persons does ($x | Book_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "714",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books created by ($x | Person_NP)?", "List all books created by ($x | Person_NP)?", "What book was created by ($x | Person_NP)?", "What books were created by ($x | Person_NP)?", "What kind of book did ($x | Person_NP) create?", "show me all book that ($x | Person_NP) created", "show me the book that ($x | Person_NP) created", "which book creates the ($x | Person_NP)?", "which book did ($x | Person_NP) create?", "which book was created by ($x | Person_NP)?", "which books create the ($x | Person_NP)?", "which books did ($x | Person_NP) create?", "which books were created by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose the music for ($x | Film_NP)?", "Give me all persons that compose the music for the ($x | Film_NP)", "Who person compose the music for ($x | Film_NP)?", "Who person compose the music for the ($x | Film_NP)?", "Who person compose the music for the film ($x | Film_NP)?", "Who person compose the music for the films ($x | Film_NP)?", "Who person was the person that compose the music for ($x | Film_NP)?", "which person compose the music for ($x | Film_NP)?", "which person does ($x | Film_NP) compose the music for?", "which persons compose the music for ($x | Film_NP)?", "which persons did ($x | Film_NP) compose the music for?", "which persons does ($x | Film_NP) compose the music for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "717",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films compose the music for by ($x | Person_NP)?", "List all films compose the music for by ($x | Person_NP)?", "What film was compose the music for by ($x | Person_NP)?", "What films were compose the music for by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) compose the music for?", "show me all film that ($x | Person_NP) compose the music for", "show me the film that ($x | Person_NP) compose the music for", "which film compose the music for the ($x | Person_NP)?", "which film did ($x | Person_NP) compose the music for?", "which film was compose the music for by ($x | Person_NP)?", "which films compose the music for the ($x | Person_NP)?", "which films did ($x | Person_NP) compose the music for?", "which films were compose the music for by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "718",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are compose the music for by ($x | Person_NP)?", "How often did ($x | Person_NP) compose the music for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons called  ($x | Thing_NP)?", "List all persons called  ($x | Thing_NP)?", "Who kind of person did ($x | Thing_NP) call?", "Who person was called  ($x | Thing_NP)?", "Who persons were called  ($x | Thing_NP)?", "show me all person that ($x | Thing_NP) called", "show me the person that ($x | Thing_NP) called", "which person calls the ($x | Thing_NP)?", "which person did ($x | Thing_NP) call?", "which person was called  ($x | Thing_NP)?", "which persons call the ($x | Thing_NP)?", "which persons did ($x | Thing_NP) call?", "which persons were called  ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#to_call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are called  ($x | Thing_NP)?", "How often did ($x | Thing_NP) call?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents own ($x | Airport_NP)?", "Give me all agents that owned the ($x | Airport_NP)", "Who agent owned ($x | Airport_NP)?", "Who agent owned the ($x | Airport_NP)?", "Who agent owned the airport ($x | Airport_NP)?", "Who agent owned the airports ($x | Airport_NP)?", "Who agent owns ($x | Airport_NP)?", "Who agent owns the ($x | Airport_NP)?", "Who agent owns the airport ($x | Airport_NP)?", "Who agent owns the airports ($x | Airport_NP)?", "Who agent was the agent that owned ($x | Airport_NP)?", "which agent does ($x | Airport_NP) own?", "which agent owned ($x | Airport_NP)?", "which agent owns ($x | Airport_NP)?", "which agents did ($x | Airport_NP) own?", "which agents does ($x | Airport_NP) own?", "which agents own ($x | Airport_NP)?", "which agents owned ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "723",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports owned by ($x | Agent_NP)?", "List all airports owned by ($x | Agent_NP)?", "What airport was owned by ($x | Agent_NP)?", "What airports were owned by ($x | Agent_NP)?", "What kind of airport did ($x | Agent_NP) own?", "show me all airport that ($x | Agent_NP) owned", "show me the airport that ($x | Agent_NP) owned", "which airport did ($x | Agent_NP) own?", "which airport owns the ($x | Agent_NP)?", "which airport was owned by ($x | Agent_NP)?", "which airports did ($x | Agent_NP) own?", "which airports own the ($x | Agent_NP)?", "which airports were owned by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "724",
    "lexicalEntryUri" : "http://localhost:8080#to_own_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are owned by ($x | Agent_NP)?", "How often did ($x | Agent_NP) own?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was the politician that preceded ($x | Politician_NP)?", "Who preceded ($x | Politician_NP)?", "Who precedes ($x | Politician_NP)?", "Whom is ($x | Politician_NP) precede?", "Whom was ($x | Politician_NP) precede?", "which politician preceded ($x | Politician_NP)?", "which politician precedes ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/predecessor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was preceded by ($x | Politician_NP)?", "Who politicians were preceded by ($x | Politician_NP)?", "Who was ($x | Politician_NP) preceded by?", "Whom did ($x | Politician_NP) precede?", "which politician was preceded by ($x | Politician_NP)?", "which politicians were preceded by ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "727",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are preceded by ($x | Politician_NP)?", "How often did ($x | Politician_NP) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/predecessor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that won the ($x | Work_NP)", "Give me all persons win ($x | Work_NP)?", "Who person was the person that won ($x | Work_NP)?", "Who person wins ($x | Work_NP)?", "Who person wins the ($x | Work_NP)?", "Who person wins the work ($x | Work_NP)?", "Who person wins the works ($x | Work_NP)?", "Who person won ($x | Work_NP)?", "Who person won the ($x | Work_NP)?", "Who person won the work ($x | Work_NP)?", "Who person won the works ($x | Work_NP)?", "which person does ($x | Work_NP) win?", "which person wins ($x | Work_NP)?", "which person won ($x | Work_NP)?", "which persons did ($x | Work_NP) win?", "which persons does ($x | Work_NP) win?", "which persons win ($x | Work_NP)?", "which persons won ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "729",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works won by ($x | Person_NP)?", "List all works won by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) win?", "What work was won by ($x | Person_NP)?", "What works were won by ($x | Person_NP)?", "show me all work that ($x | Person_NP) won", "show me the work that ($x | Person_NP) won", "which work did ($x | Person_NP) win?", "which work was won by ($x | Person_NP)?", "which work wins the ($x | Person_NP)?", "which works did ($x | Person_NP) win?", "which works were won by ($x | Person_NP)?", "which works win the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are won by ($x | Person_NP)?", "How often did ($x | Person_NP) win?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states border ($x | State_NP)?", "Give me all states that bordered the ($x | State_NP)", "What state bordered ($x | State_NP)?", "What state bordered the ($x | State_NP)?", "What state bordered the state ($x | State_NP)?", "What state bordered the states ($x | State_NP)?", "What state borders ($x | State_NP)?", "What state borders the ($x | State_NP)?", "What state borders the state ($x | State_NP)?", "What state borders the states ($x | State_NP)?", "What state was the state that bordered ($x | State_NP)?", "which state bordered ($x | State_NP)?", "which state borders ($x | State_NP)?", "which state does ($x | State_NP) border?", "which states border ($x | State_NP)?", "which states bordered ($x | State_NP)?", "which states did ($x | State_NP) border?", "which states does ($x | State_NP) border?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "732",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all states bordered by ($x | State_NP)?", "List all states bordered by ($x | State_NP)?", "What kind of state did ($x | State_NP) border?", "What state was bordered by ($x | State_NP)?", "What states were bordered by ($x | State_NP)?", "show me all state that ($x | State_NP) bordered", "show me the state that ($x | State_NP) bordered", "which state borders the ($x | State_NP)?", "which state did ($x | State_NP) border?", "which state was bordered by ($x | State_NP)?", "which states border the ($x | State_NP)?", "which states did ($x | State_NP) border?", "which states were bordered by ($x | State_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "733",
    "lexicalEntryUri" : "http://localhost:8080#to_border",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many states are bordered by ($x | State_NP)?", "How often did ($x | State_NP) border?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Pope" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who pope was the pope that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which pope founded ($x | Organisation_NP)?", "which pope founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who organization was founded by ($x | Pope_NP)?", "Who organizations were founded by ($x | Pope_NP)?", "Who was ($x | Pope_NP) founded by?", "Whom did ($x | Organisation_NP) found?", "which organization was founded by ($x | Pope_NP)?", "which organizations were founded by ($x | Pope_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Pope" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organizations are founded by ($x | Pope_NP)?", "How often did ($x | Pope_NP) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play ($x | Film_NP)?", "Give me all persons that played the ($x | Film_NP)", "Who person played ($x | Film_NP)?", "Who person played the ($x | Film_NP)?", "Who person played the film ($x | Film_NP)?", "Who person played the films ($x | Film_NP)?", "Who person plays ($x | Film_NP)?", "Who person plays the ($x | Film_NP)?", "Who person plays the film ($x | Film_NP)?", "Who person plays the films ($x | Film_NP)?", "Who person was the person that played ($x | Film_NP)?", "which person does ($x | Film_NP) play?", "which person played ($x | Film_NP)?", "which person plays ($x | Film_NP)?", "which persons did ($x | Film_NP) play?", "which persons does ($x | Film_NP) play?", "which persons play ($x | Film_NP)?", "which persons played ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "738",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films played by ($x | Person_NP)?", "List all films played by ($x | Person_NP)?", "What film was played by ($x | Person_NP)?", "What films were played by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) play?", "show me all film that ($x | Person_NP) played", "show me the film that ($x | Person_NP) played", "which film did ($x | Person_NP) play?", "which film plays the ($x | Person_NP)?", "which film was played by ($x | Person_NP)?", "which films did ($x | Person_NP) play?", "which films play the ($x | Person_NP)?", "which films were played by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "739",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are played by ($x | Person_NP)?", "How often did ($x | Person_NP) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was the person that played ($x | FictionalCharacter_NP)?", "Who played ($x | FictionalCharacter_NP)?", "Who plays ($x | FictionalCharacter_NP)?", "Whom is ($x | FictionalCharacter_NP) play?", "Whom was ($x | FictionalCharacter_NP) play?", "which person played ($x | FictionalCharacter_NP)?", "which person plays ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who fictional character was played by ($x | Person_NP)?", "Who fictional characters were played by ($x | Person_NP)?", "Who was ($x | Person_NP) played by?", "Whom did ($x | FictionalCharacter_NP) play?", "which fictional character was played by ($x | Person_NP)?", "which fictional characters were played by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "742",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many fictional characters are played by ($x | Person_NP)?", "How often did ($x | Person_NP) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | MusicalWork_NP)", "Give me all persons write ($x | MusicalWork_NP)?", "Who person was the person that wrote ($x | MusicalWork_NP)?", "Who person writes ($x | MusicalWork_NP)?", "Who person writes the ($x | MusicalWork_NP)?", "Who person writes the music ($x | MusicalWork_NP)?", "Who person writes the musics ($x | MusicalWork_NP)?", "Who person wrote ($x | MusicalWork_NP)?", "Who person wrote the ($x | MusicalWork_NP)?", "Who person wrote the music ($x | MusicalWork_NP)?", "Who person wrote the musics ($x | MusicalWork_NP)?", "which person does ($x | MusicalWork_NP) write?", "which person writes ($x | MusicalWork_NP)?", "which person wrote ($x | MusicalWork_NP)?", "which persons did ($x | MusicalWork_NP) write?", "which persons does ($x | MusicalWork_NP) write?", "which persons write ($x | MusicalWork_NP)?", "which persons wrote ($x | MusicalWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "744",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics wrote by ($x | Person_NP)?", "List all musics wrote by ($x | Person_NP)?", "What kind of music did ($x | Person_NP) write?", "What music was wrote by ($x | Person_NP)?", "What musics were wrote by ($x | Person_NP)?", "show me all music that ($x | Person_NP) wrote", "show me the music that ($x | Person_NP) wrote", "which music did ($x | Person_NP) write?", "which music was wrote by ($x | Person_NP)?", "which music writes the ($x | Person_NP)?", "which musics did ($x | Person_NP) write?", "which musics were wrote by ($x | Person_NP)?", "which musics write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musics are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons compose ($x | Work_NP)?", "Give me all persons that composed the ($x | Work_NP)", "Who person composed ($x | Work_NP)?", "Who person composed the ($x | Work_NP)?", "Who person composed the work ($x | Work_NP)?", "Who person composed the works ($x | Work_NP)?", "Who person composes ($x | Work_NP)?", "Who person composes the ($x | Work_NP)?", "Who person composes the work ($x | Work_NP)?", "Who person composes the works ($x | Work_NP)?", "Who person was the person that composed ($x | Work_NP)?", "which person composed ($x | Work_NP)?", "which person composes ($x | Work_NP)?", "which person does ($x | Work_NP) compose?", "which persons compose ($x | Work_NP)?", "which persons composed ($x | Work_NP)?", "which persons did ($x | Work_NP) compose?", "which persons does ($x | Work_NP) compose?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "747",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works  by ($x | Person_NP)?", "List all works  by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) compose?", "What work was  by ($x | Person_NP)?", "What works were  by ($x | Person_NP)?", "show me all work that ($x | Person_NP) composed", "show me the work that ($x | Person_NP) composed", "which work composes the ($x | Person_NP)?", "which work did ($x | Person_NP) compose?", "which work was  by ($x | Person_NP)?", "which works compose the ($x | Person_NP)?", "which works did ($x | Person_NP) compose?", "which works were  by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "748",
    "lexicalEntryUri" : "http://localhost:8080#to_compose_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are  by ($x | Person_NP)?", "How often did ($x | Person_NP) compose?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents publish ($x | Work_NP)?", "Give me all agents that published the ($x | Work_NP)", "Who agent published ($x | Work_NP)?", "Who agent published the ($x | Work_NP)?", "Who agent published the work ($x | Work_NP)?", "Who agent published the works ($x | Work_NP)?", "Who agent publishes ($x | Work_NP)?", "Who agent publishes the ($x | Work_NP)?", "Who agent publishes the work ($x | Work_NP)?", "Who agent publishes the works ($x | Work_NP)?", "Who agent was the agent that published ($x | Work_NP)?", "which agent does ($x | Work_NP) publish?", "which agent published ($x | Work_NP)?", "which agent publishes ($x | Work_NP)?", "which agents did ($x | Work_NP) publish?", "which agents does ($x | Work_NP) publish?", "which agents publish ($x | Work_NP)?", "which agents published ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works published by ($x | Agent_NP)?", "List all works published by ($x | Agent_NP)?", "What kind of work did ($x | Agent_NP) publish?", "What work was published by ($x | Agent_NP)?", "What works were published by ($x | Agent_NP)?", "show me all work that ($x | Agent_NP) published", "show me the work that ($x | Agent_NP) published", "which work did ($x | Agent_NP) publish?", "which work publishes the ($x | Agent_NP)?", "which work was published by ($x | Agent_NP)?", "which works did ($x | Agent_NP) publish?", "which works publish the ($x | Agent_NP)?", "which works were published by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are published by ($x | Agent_NP)?", "How often did ($x | Agent_NP) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all publishers publish ($x | Book_NP)?", "Give me all publishers that published the ($x | Book_NP)", "What publisher published ($x | Book_NP)?", "What publisher published the ($x | Book_NP)?", "What publisher published the book ($x | Book_NP)?", "What publisher published the books ($x | Book_NP)?", "What publisher publishes ($x | Book_NP)?", "What publisher publishes the ($x | Book_NP)?", "What publisher publishes the book ($x | Book_NP)?", "What publisher publishes the books ($x | Book_NP)?", "What publisher was the publisher that published ($x | Book_NP)?", "which publisher does ($x | Book_NP) publish?", "which publisher published ($x | Book_NP)?", "which publisher publishes ($x | Book_NP)?", "which publishers did ($x | Book_NP) publish?", "which publishers does ($x | Book_NP) publish?", "which publishers publish ($x | Book_NP)?", "which publishers published ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "753",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books published by ($x | Publisher_NP)?", "List all books published by ($x | Publisher_NP)?", "What book was published by ($x | Publisher_NP)?", "What books were published by ($x | Publisher_NP)?", "What kind of book did ($x | Publisher_NP) publish?", "show me all book that ($x | Publisher_NP) published", "show me the book that ($x | Publisher_NP) published", "which book did ($x | Publisher_NP) publish?", "which book publishes the ($x | Publisher_NP)?", "which book was published by ($x | Publisher_NP)?", "which books did ($x | Publisher_NP) publish?", "which books publish the ($x | Publisher_NP)?", "which books were published by ($x | Publisher_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "754",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are published by ($x | Publisher_NP)?", "How often did ($x | Publisher_NP) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drain ($x | BodyOfWater_NP)?", "Give me all rivers that drained the ($x | BodyOfWater_NP)", "What river drained ($x | BodyOfWater_NP)?", "What river drained the ($x | BodyOfWater_NP)?", "What river drained the river ($x | BodyOfWater_NP)?", "What river drained the rivers ($x | BodyOfWater_NP)?", "What river drains ($x | BodyOfWater_NP)?", "What river drains the ($x | BodyOfWater_NP)?", "What river drains the river ($x | BodyOfWater_NP)?", "What river drains the rivers ($x | BodyOfWater_NP)?", "What river was the river that drained ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) drain?", "which river drained ($x | BodyOfWater_NP)?", "which river drains ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) drain?", "which rivers does ($x | BodyOfWater_NP) drain?", "which rivers drain ($x | BodyOfWater_NP)?", "which rivers drained ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers drained by ($x | River_NP)?", "List all rivers drained by ($x | River_NP)?", "What kind of river did ($x | River_NP) drain?", "What river was drained by ($x | River_NP)?", "What rivers were drained by ($x | River_NP)?", "show me all river that ($x | River_NP) drained", "show me the river that ($x | River_NP) drained", "which river did ($x | River_NP) drain?", "which river drains the ($x | River_NP)?", "which river was drained by ($x | River_NP)?", "which rivers did ($x | River_NP) drain?", "which rivers drain the ($x | River_NP)?", "which rivers were drained by ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "757",
    "lexicalEntryUri" : "http://localhost:8080#to_drain_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers are drained by ($x | River_NP)?", "How often did ($x | River_NP) drain?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Song_NP)", "Give me all persons write ($x | Song_NP)?", "Who person was the person that wrote ($x | Song_NP)?", "Who person writes ($x | Song_NP)?", "Who person writes the ($x | Song_NP)?", "Who person writes the song ($x | Song_NP)?", "Who person writes the songs ($x | Song_NP)?", "Who person wrote ($x | Song_NP)?", "Who person wrote the ($x | Song_NP)?", "Who person wrote the song ($x | Song_NP)?", "Who person wrote the songs ($x | Song_NP)?", "which person does ($x | Song_NP) write?", "which person writes ($x | Song_NP)?", "which person wrote ($x | Song_NP)?", "which persons did ($x | Song_NP) write?", "which persons does ($x | Song_NP) write?", "which persons write ($x | Song_NP)?", "which persons wrote ($x | Song_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all songs wrote by ($x | Person_NP)?", "List all songs wrote by ($x | Person_NP)?", "What kind of song did ($x | Person_NP) write?", "What song was wrote by ($x | Person_NP)?", "What songs were wrote by ($x | Person_NP)?", "show me all song that ($x | Person_NP) wrote", "show me the song that ($x | Person_NP) wrote", "which song did ($x | Person_NP) write?", "which song was wrote by ($x | Person_NP)?", "which song writes the ($x | Person_NP)?", "which songs did ($x | Person_NP) write?", "which songs were wrote by ($x | Person_NP)?", "which songs write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many songs are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who inspired ($x | Person_NP)?", "Who inspires ($x | Person_NP)?", "Who person was the person that inspired ($x | Person_NP)?", "Whom is ($x | Person_NP) inspire?", "Whom was ($x | Person_NP) inspire?", "which person inspired ($x | Person_NP)?", "which person inspires ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "762",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was inspired by ($x | Person_NP)?", "Who persons were inspired by ($x | Person_NP)?", "Who was ($x | Person_NP) inspired by?", "Whom did ($x | Person_NP) inspire?", "which person was inspired by ($x | Person_NP)?", "which persons were inspired by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#to_inspire",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are inspired by ($x | Person_NP)?", "How often did ($x | Person_NP) inspire?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons paint ($x | Work_NP)?", "Give me all persons that painted the ($x | Work_NP)", "Who person painted ($x | Work_NP)?", "Who person painted the ($x | Work_NP)?", "Who person painted the work ($x | Work_NP)?", "Who person painted the works ($x | Work_NP)?", "Who person paints ($x | Work_NP)?", "Who person paints the ($x | Work_NP)?", "Who person paints the work ($x | Work_NP)?", "Who person paints the works ($x | Work_NP)?", "Who person was the person that painted ($x | Work_NP)?", "which person does ($x | Work_NP) paint?", "which person painted ($x | Work_NP)?", "which person paints ($x | Work_NP)?", "which persons did ($x | Work_NP) paint?", "which persons does ($x | Work_NP) paint?", "which persons paint ($x | Work_NP)?", "which persons painted ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "765",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works painted by ($x | Person_NP)?", "List all works painted by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) paint?", "What work was painted by ($x | Person_NP)?", "What works were painted by ($x | Person_NP)?", "show me all work that ($x | Person_NP) painted", "show me the work that ($x | Person_NP) painted", "which work did ($x | Person_NP) paint?", "which work paints the ($x | Person_NP)?", "which work was painted by ($x | Person_NP)?", "which works did ($x | Person_NP) paint?", "which works paint the ($x | Person_NP)?", "which works were painted by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "766",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are painted by ($x | Person_NP)?", "How often did ($x | Person_NP) paint?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate ($x | Airport_NP)?", "Give me all organizations that operated the ($x | Airport_NP)", "Who organization operated ($x | Airport_NP)?", "Who organization operated the ($x | Airport_NP)?", "Who organization operated the airport ($x | Airport_NP)?", "Who organization operated the airports ($x | Airport_NP)?", "Who organization operates ($x | Airport_NP)?", "Who organization operates the ($x | Airport_NP)?", "Who organization operates the airport ($x | Airport_NP)?", "Who organization operates the airports ($x | Airport_NP)?", "Who organization was the organization that operated ($x | Airport_NP)?", "which organization does ($x | Airport_NP) operate?", "which organization operated ($x | Airport_NP)?", "which organization operates ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) operate?", "which organizations does ($x | Airport_NP) operate?", "which organizations operate ($x | Airport_NP)?", "which organizations operated ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports designed by ($x | Organisation_NP)?", "List all airports designed by ($x | Organisation_NP)?", "What airport was designed by ($x | Organisation_NP)?", "What airports were designed by ($x | Organisation_NP)?", "What kind of airport did ($x | Organisation_NP) operate?", "show me all airport that ($x | Organisation_NP) operated", "show me the airport that ($x | Organisation_NP) operated", "which airport did ($x | Organisation_NP) operate?", "which airport operates the ($x | Organisation_NP)?", "which airport was designed by ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) operate?", "which airports operate the ($x | Organisation_NP)?", "which airports were designed by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "769",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are designed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all launch pads operate ($x | Organisation_NP)?", "Give me all launch pads that operated the ($x | Organisation_NP)", "What launch pad operated ($x | Organisation_NP)?", "What launch pad operated the ($x | Organisation_NP)?", "What launch pad operated the organization ($x | Organisation_NP)?", "What launch pad operated the organizations ($x | Organisation_NP)?", "What launch pad operates ($x | Organisation_NP)?", "What launch pad operates the ($x | Organisation_NP)?", "What launch pad operates the organization ($x | Organisation_NP)?", "What launch pad operates the organizations ($x | Organisation_NP)?", "What launch pad was the launch pad that operated ($x | Organisation_NP)?", "which launch pad does ($x | Organisation_NP) operate?", "which launch pad operated ($x | Organisation_NP)?", "which launch pad operates ($x | Organisation_NP)?", "which launch pads did ($x | Organisation_NP) operate?", "which launch pads does ($x | Organisation_NP) operate?", "which launch pads operate ($x | Organisation_NP)?", "which launch pads operated ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations designed by ($x | LaunchPad_NP)?", "List all organizations designed by ($x | LaunchPad_NP)?", "Who kind of organization did ($x | LaunchPad_NP) operate?", "Who organization was designed by ($x | LaunchPad_NP)?", "Who organizations were designed by ($x | LaunchPad_NP)?", "show me all organization that ($x | LaunchPad_NP) operated", "show me the organization that ($x | LaunchPad_NP) operated", "which organization did ($x | LaunchPad_NP) operate?", "which organization operates the ($x | LaunchPad_NP)?", "which organization was designed by ($x | LaunchPad_NP)?", "which organizations did ($x | LaunchPad_NP) operate?", "which organizations operate the ($x | LaunchPad_NP)?", "which organizations were designed by ($x | LaunchPad_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organizations are designed by ($x | LaunchPad_NP)?", "How often did ($x | LaunchPad_NP) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all architects design ($x | ArchitecturalStructure_NP)?", "Give me all architects that designed the ($x | ArchitecturalStructure_NP)", "Who architect designed ($x | ArchitecturalStructure_NP)?", "Who architect designed the ($x | ArchitecturalStructure_NP)?", "Who architect designed the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who architect designed the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who architect designs ($x | ArchitecturalStructure_NP)?", "Who architect designs the ($x | ArchitecturalStructure_NP)?", "Who architect designs the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who architect designs the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who architect was the architect that designed ($x | ArchitecturalStructure_NP)?", "which architect designed ($x | ArchitecturalStructure_NP)?", "which architect designs ($x | ArchitecturalStructure_NP)?", "which architect does ($x | ArchitecturalStructure_NP) design?", "which architects design ($x | ArchitecturalStructure_NP)?", "which architects designed ($x | ArchitecturalStructure_NP)?", "which architects did ($x | ArchitecturalStructure_NP) design?", "which architects does ($x | ArchitecturalStructure_NP) design?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "774",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures designed by ($x | Architect_NP)?", "List all ArchitecturalStructures designed by ($x | Architect_NP)?", "What ArchitecturalStructure was designed by ($x | Architect_NP)?", "What ArchitecturalStructures were designed by ($x | Architect_NP)?", "What kind of ArchitecturalStructure did ($x | Architect_NP) design?", "show me all ArchitecturalStructure that ($x | Architect_NP) designed", "show me the ArchitecturalStructure that ($x | Architect_NP) designed", "which ArchitecturalStructure designs the ($x | Architect_NP)?", "which ArchitecturalStructure did ($x | Architect_NP) design?", "which ArchitecturalStructure was designed by ($x | Architect_NP)?", "which ArchitecturalStructures design the ($x | Architect_NP)?", "which ArchitecturalStructures did ($x | Architect_NP) design?", "which ArchitecturalStructures were designed by ($x | Architect_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are designed by ($x | Architect_NP)?", "How often did ($x | Architect_NP) design?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations operate ($x | Airport_NP)?", "Give me all organizations that operated the ($x | Airport_NP)", "Who organization operated ($x | Airport_NP)?", "Who organization operated the ($x | Airport_NP)?", "Who organization operated the airport ($x | Airport_NP)?", "Who organization operated the airports ($x | Airport_NP)?", "Who organization operates ($x | Airport_NP)?", "Who organization operates the ($x | Airport_NP)?", "Who organization operates the airport ($x | Airport_NP)?", "Who organization operates the airports ($x | Airport_NP)?", "Who organization was the organization that operated ($x | Airport_NP)?", "which organization does ($x | Airport_NP) operate?", "which organization operated ($x | Airport_NP)?", "which organization operates ($x | Airport_NP)?", "which organizations did ($x | Airport_NP) operate?", "which organizations does ($x | Airport_NP) operate?", "which organizations operate ($x | Airport_NP)?", "which organizations operated ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "777",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all airports operated by ($x | Organisation_NP)?", "List all airports operated by ($x | Organisation_NP)?", "What airport was operated by ($x | Organisation_NP)?", "What airports were operated by ($x | Organisation_NP)?", "What kind of airport did ($x | Organisation_NP) operate?", "show me all airport that ($x | Organisation_NP) operated", "show me the airport that ($x | Organisation_NP) operated", "which airport did ($x | Organisation_NP) operate?", "which airport operates the ($x | Organisation_NP)?", "which airport was operated by ($x | Organisation_NP)?", "which airports did ($x | Organisation_NP) operate?", "which airports operate the ($x | Organisation_NP)?", "which airports were operated by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "778",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports are operated by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) operate?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents that wrote the ($x | Book_NP)", "Give me all agents write ($x | Book_NP)?", "Who agent was the agent that wrote ($x | Book_NP)?", "Who agent writes ($x | Book_NP)?", "Who agent writes the ($x | Book_NP)?", "Who agent writes the book ($x | Book_NP)?", "Who agent writes the books ($x | Book_NP)?", "Who agent wrote ($x | Book_NP)?", "Who agent wrote the ($x | Book_NP)?", "Who agent wrote the book ($x | Book_NP)?", "Who agent wrote the books ($x | Book_NP)?", "which agent does ($x | Book_NP) write?", "which agent writes ($x | Book_NP)?", "which agent wrote ($x | Book_NP)?", "which agents did ($x | Book_NP) write?", "which agents does ($x | Book_NP) write?", "which agents write ($x | Book_NP)?", "which agents wrote ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books wrote by ($x | Agent_NP)?", "List all books wrote by ($x | Agent_NP)?", "What book was wrote by ($x | Agent_NP)?", "What books were wrote by ($x | Agent_NP)?", "What kind of book did ($x | Agent_NP) write?", "show me all book that ($x | Agent_NP) wrote", "show me the book that ($x | Agent_NP) wrote", "which book did ($x | Agent_NP) write?", "which book was wrote by ($x | Agent_NP)?", "which book writes the ($x | Agent_NP)?", "which books did ($x | Agent_NP) write?", "which books were wrote by ($x | Agent_NP)?", "which books write the ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "781",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are wrote by ($x | Agent_NP)?", "How often did ($x | Agent_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute ($x | Film_NP)?", "Give me all organizations that distributed the ($x | Film_NP)", "Who organization distributed ($x | Film_NP)?", "Who organization distributed the ($x | Film_NP)?", "Who organization distributed the film ($x | Film_NP)?", "Who organization distributed the films ($x | Film_NP)?", "Who organization distributes ($x | Film_NP)?", "Who organization distributes the ($x | Film_NP)?", "Who organization distributes the film ($x | Film_NP)?", "Who organization distributes the films ($x | Film_NP)?", "Who organization was the organization that distributed ($x | Film_NP)?", "which organization distributed ($x | Film_NP)?", "which organization distributes ($x | Film_NP)?", "which organization does ($x | Film_NP) distribute?", "which organizations did ($x | Film_NP) distribute?", "which organizations distribute ($x | Film_NP)?", "which organizations distributed ($x | Film_NP)?", "which organizations does ($x | Film_NP) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "783",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films distributed by ($x | Organisation_NP)?", "List all films distributed by ($x | Organisation_NP)?", "What film was distributed by ($x | Organisation_NP)?", "What films were distributed by ($x | Organisation_NP)?", "What kind of film did ($x | Organisation_NP) distribute?", "show me all film that ($x | Organisation_NP) distributed", "show me the film that ($x | Organisation_NP) distributed", "which film did ($x | Organisation_NP) distribute?", "which film distributes the ($x | Organisation_NP)?", "which film was distributed by ($x | Organisation_NP)?", "which films did ($x | Organisation_NP) distribute?", "which films distribute the ($x | Organisation_NP)?", "which films were distributed by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are distributed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations distribute ($x | TelevisionShow_NP)?", "Give me all organizations that distributed the ($x | TelevisionShow_NP)", "Who organization distributed ($x | TelevisionShow_NP)?", "Who organization distributed the ($x | TelevisionShow_NP)?", "Who organization distributed the television show ($x | TelevisionShow_NP)?", "Who organization distributed the television shows ($x | TelevisionShow_NP)?", "Who organization distributes ($x | TelevisionShow_NP)?", "Who organization distributes the ($x | TelevisionShow_NP)?", "Who organization distributes the television show ($x | TelevisionShow_NP)?", "Who organization distributes the television shows ($x | TelevisionShow_NP)?", "Who organization was the organization that distributed ($x | TelevisionShow_NP)?", "which organization distributed ($x | TelevisionShow_NP)?", "which organization distributes ($x | TelevisionShow_NP)?", "which organization does ($x | TelevisionShow_NP) distribute?", "which organizations did ($x | TelevisionShow_NP) distribute?", "which organizations distribute ($x | TelevisionShow_NP)?", "which organizations distributed ($x | TelevisionShow_NP)?", "which organizations does ($x | TelevisionShow_NP) distribute?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "786",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows distributed by ($x | Organisation_NP)?", "List all television shows distributed by ($x | Organisation_NP)?", "What kind of television show did ($x | Organisation_NP) distribute?", "What television show was distributed by ($x | Organisation_NP)?", "What television shows were distributed by ($x | Organisation_NP)?", "show me all television show that ($x | Organisation_NP) distributed", "show me the television show that ($x | Organisation_NP) distributed", "which television show did ($x | Organisation_NP) distribute?", "which television show distributes the ($x | Organisation_NP)?", "which television show was distributed by ($x | Organisation_NP)?", "which television shows did ($x | Organisation_NP) distribute?", "which television shows distribute the ($x | Organisation_NP)?", "which television shows were distributed by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "787",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are distributed by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) distribute?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Work_NP)", "Give me all persons write ($x | Work_NP)?", "Who person was the person that wrote ($x | Work_NP)?", "Who person writes ($x | Work_NP)?", "Who person writes the ($x | Work_NP)?", "Who person writes the work ($x | Work_NP)?", "Who person writes the works ($x | Work_NP)?", "Who person wrote ($x | Work_NP)?", "Who person wrote the ($x | Work_NP)?", "Who person wrote the work ($x | Work_NP)?", "Who person wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/writer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works wrote by ($x | Person_NP)?", "List all works wrote by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) write?", "What work was wrote by ($x | Person_NP)?", "What works were wrote by ($x | Person_NP)?", "show me all work that ($x | Person_NP) wrote", "show me the work that ($x | Person_NP) wrote", "which work did ($x | Person_NP) write?", "which work was wrote by ($x | Person_NP)?", "which work writes the ($x | Person_NP)?", "which works did ($x | Person_NP) write?", "which works were wrote by ($x | Person_NP)?", "which works write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "790",
    "lexicalEntryUri" : "http://localhost:8080#to_write_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/writer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons present ($x | TelevisionShow_NP)?", "Give me all persons that presented the ($x | TelevisionShow_NP)", "Who person presented ($x | TelevisionShow_NP)?", "Who person presented the ($x | TelevisionShow_NP)?", "Who person presented the television show ($x | TelevisionShow_NP)?", "Who person presented the television shows ($x | TelevisionShow_NP)?", "Who person presents ($x | TelevisionShow_NP)?", "Who person presents the ($x | TelevisionShow_NP)?", "Who person presents the television show ($x | TelevisionShow_NP)?", "Who person presents the television shows ($x | TelevisionShow_NP)?", "Who person was the person that presented ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) present?", "which person presented ($x | TelevisionShow_NP)?", "which person presents ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) present?", "which persons does ($x | TelevisionShow_NP) present?", "which persons present ($x | TelevisionShow_NP)?", "which persons presented ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "792",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows presented by ($x | Person_NP)?", "List all television shows presented by ($x | Person_NP)?", "What kind of television show did ($x | Person_NP) present?", "What television show was presented by ($x | Person_NP)?", "What television shows were presented by ($x | Person_NP)?", "show me all television show that ($x | Person_NP) presented", "show me the television show that ($x | Person_NP) presented", "which television show did ($x | Person_NP) present?", "which television show presents the ($x | Person_NP)?", "which television show was presented by ($x | Person_NP)?", "which television shows did ($x | Person_NP) present?", "which television shows present the ($x | Person_NP)?", "which television shows were presented by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are presented by ($x | Person_NP)?", "How often did ($x | Person_NP) present?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers cross ($x | Bridge_NP)?", "Give me all rivers that crossed the ($x | Bridge_NP)", "What river crossed ($x | Bridge_NP)?", "What river crossed the ($x | Bridge_NP)?", "What river crossed the Bridge ($x | Bridge_NP)?", "What river crossed the Bridges ($x | Bridge_NP)?", "What river crosses ($x | Bridge_NP)?", "What river crosses the ($x | Bridge_NP)?", "What river crosses the Bridge ($x | Bridge_NP)?", "What river crosses the Bridges ($x | Bridge_NP)?", "What river was the river that crossed ($x | Bridge_NP)?", "which river crossed ($x | Bridge_NP)?", "which river crosses ($x | Bridge_NP)?", "which river does ($x | Bridge_NP) cross?", "which rivers cross ($x | Bridge_NP)?", "which rivers crossed ($x | Bridge_NP)?", "which rivers did ($x | Bridge_NP) cross?", "which rivers does ($x | Bridge_NP) cross?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "795",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Bridges crossed by ($x | River_NP)?", "List all Bridges crossed by ($x | River_NP)?", "What Bridge was crossed by ($x | River_NP)?", "What Bridges were crossed by ($x | River_NP)?", "What kind of Bridge did ($x | River_NP) cross?", "show me all Bridge that ($x | River_NP) crossed", "show me the Bridge that ($x | River_NP) crossed", "which Bridge crosses the ($x | River_NP)?", "which Bridge did ($x | River_NP) cross?", "which Bridge was crossed by ($x | River_NP)?", "which Bridges cross the ($x | River_NP)?", "which Bridges did ($x | River_NP) cross?", "which Bridges were crossed by ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "796",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many Bridges are crossed by ($x | River_NP)?", "How often did ($x | River_NP) cross?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums precede ($x | Album_NP)?", "Give me all albums that preceded the ($x | Album_NP)", "What album preceded ($x | Album_NP)?", "What album preceded the ($x | Album_NP)?", "What album preceded the album ($x | Album_NP)?", "What album preceded the albums ($x | Album_NP)?", "What album precedes ($x | Album_NP)?", "What album precedes the ($x | Album_NP)?", "What album precedes the album ($x | Album_NP)?", "What album precedes the albums ($x | Album_NP)?", "What album was the album that preceded ($x | Album_NP)?", "which album does ($x | Album_NP) precede?", "which album preceded ($x | Album_NP)?", "which album precedes ($x | Album_NP)?", "which albums did ($x | Album_NP) precede?", "which albums does ($x | Album_NP) precede?", "which albums precede ($x | Album_NP)?", "which albums preceded ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all albums preceded by ($x | Album_NP)?", "List all albums preceded by ($x | Album_NP)?", "What album was preceded by ($x | Album_NP)?", "What albums were preceded by ($x | Album_NP)?", "What kind of album did ($x | Album_NP) precede?", "show me all album that ($x | Album_NP) preceded", "show me the album that ($x | Album_NP) preceded", "which album did ($x | Album_NP) precede?", "which album precedes the ($x | Album_NP)?", "which album was preceded by ($x | Album_NP)?", "which albums did ($x | Album_NP) precede?", "which albums precede the ($x | Album_NP)?", "which albums were preceded by ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "799",
    "lexicalEntryUri" : "http://localhost:8080#to_precede_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums are preceded by ($x | Album_NP)?", "How often did ($x | Album_NP) precede?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who politician was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/before> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was followed by ($x | Politician_NP)?", "Who politicians were followed by ($x | Politician_NP)?", "Who was ($x | Politician_NP) followed by?", "Whom did ($x | Politician_NP) follow?", "which politician was followed by ($x | Politician_NP)?", "which politicians were followed by ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are followed by ($x | Politician_NP)?", "How often did ($x | Politician_NP) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/before> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons leave ($x | Band_NP)?", "Give me all persons that left the ($x | Band_NP)", "Who person leaves ($x | Band_NP)?", "Who person leaves the ($x | Band_NP)?", "Who person leaves the band ($x | Band_NP)?", "Who person leaves the bands ($x | Band_NP)?", "Who person left ($x | Band_NP)?", "Who person left the ($x | Band_NP)?", "Who person left the band ($x | Band_NP)?", "Who person left the bands ($x | Band_NP)?", "Who person was the person that left ($x | Band_NP)?", "which person does ($x | Band_NP) leave?", "which person leaves ($x | Band_NP)?", "which person left ($x | Band_NP)?", "which persons did ($x | Band_NP) leave?", "which persons does ($x | Band_NP) leave?", "which persons leave ($x | Band_NP)?", "which persons left ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "804",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all bands left by ($x | Person_NP)?", "List all bands left by ($x | Person_NP)?", "What band was left by ($x | Person_NP)?", "What bands were left by ($x | Person_NP)?", "What kind of band did ($x | Person_NP) leave?", "show me all band that ($x | Person_NP) left", "show me the band that ($x | Person_NP) left", "which band did ($x | Person_NP) leave?", "which band leaves the ($x | Person_NP)?", "which band was left by ($x | Person_NP)?", "which bands did ($x | Person_NP) leave?", "which bands leave the ($x | Person_NP)?", "which bands were left by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#to_leave_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands are left by ($x | Person_NP)?", "How often did ($x | Person_NP) leave?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Website_NP)?", "Give me all persons that created the ($x | Website_NP)", "Who person created ($x | Website_NP)?", "Who person created the ($x | Website_NP)?", "Who person created the Website ($x | Website_NP)?", "Who person created the Websites ($x | Website_NP)?", "Who person creates ($x | Website_NP)?", "Who person creates the ($x | Website_NP)?", "Who person creates the Website ($x | Website_NP)?", "Who person creates the Websites ($x | Website_NP)?", "Who person was the person that created ($x | Website_NP)?", "which person created ($x | Website_NP)?", "which person creates ($x | Website_NP)?", "which person does ($x | Website_NP) create?", "which persons create ($x | Website_NP)?", "which persons created ($x | Website_NP)?", "which persons did ($x | Website_NP) create?", "which persons does ($x | Website_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "807",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all Websites created by ($x | Person_NP)?", "List all Websites created by ($x | Person_NP)?", "What Website was created by ($x | Person_NP)?", "What Websites were created by ($x | Person_NP)?", "What kind of Website did ($x | Person_NP) create?", "show me all Website that ($x | Person_NP) created", "show me the Website that ($x | Person_NP) created", "which Website creates the ($x | Person_NP)?", "which Website did ($x | Person_NP) create?", "which Website was created by ($x | Person_NP)?", "which Websites create the ($x | Person_NP)?", "which Websites did ($x | Person_NP) create?", "which Websites were created by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "808",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many Websites are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | Work_NP)?", "Give me all persons that produced the ($x | Work_NP)", "Who person produced ($x | Work_NP)?", "Who person produced the ($x | Work_NP)?", "Who person produced the work ($x | Work_NP)?", "Who person produced the works ($x | Work_NP)?", "Who person produces ($x | Work_NP)?", "Who person produces the ($x | Work_NP)?", "Who person produces the work ($x | Work_NP)?", "Who person produces the works ($x | Work_NP)?", "Who person was the person that produced ($x | Work_NP)?", "which person does ($x | Work_NP) produce?", "which person produced ($x | Work_NP)?", "which person produces ($x | Work_NP)?", "which persons did ($x | Work_NP) produce?", "which persons does ($x | Work_NP) produce?", "which persons produce ($x | Work_NP)?", "which persons produced ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works produced by ($x | Person_NP)?", "List all works produced by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) produce?", "What work was produced by ($x | Person_NP)?", "What works were produced by ($x | Person_NP)?", "show me all work that ($x | Person_NP) produced", "show me the work that ($x | Person_NP) produced", "which work did ($x | Person_NP) produce?", "which work produces the ($x | Person_NP)?", "which work was produced by ($x | Person_NP)?", "which works did ($x | Person_NP) produce?", "which works produce the ($x | Person_NP)?", "which works were produced by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons create ($x | Work_NP)?", "Give me all persons that created the ($x | Work_NP)", "Who person created ($x | Work_NP)?", "Who person created the ($x | Work_NP)?", "Who person created the work ($x | Work_NP)?", "Who person created the works ($x | Work_NP)?", "Who person creates ($x | Work_NP)?", "Who person creates the ($x | Work_NP)?", "Who person creates the work ($x | Work_NP)?", "Who person creates the works ($x | Work_NP)?", "Who person was the person that created ($x | Work_NP)?", "which person created ($x | Work_NP)?", "which person creates ($x | Work_NP)?", "which person does ($x | Work_NP) create?", "which persons create ($x | Work_NP)?", "which persons created ($x | Work_NP)?", "which persons did ($x | Work_NP) create?", "which persons does ($x | Work_NP) create?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/notableWork> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "813",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works created by ($x | Person_NP)?", "List all works created by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) create?", "What work was created by ($x | Person_NP)?", "What works were created by ($x | Person_NP)?", "show me all work that ($x | Person_NP) created", "show me the work that ($x | Person_NP) created", "which work creates the ($x | Person_NP)?", "which work did ($x | Person_NP) create?", "which work was created by ($x | Person_NP)?", "which works create the ($x | Person_NP)?", "which works did ($x | Person_NP) create?", "which works were created by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "814",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are created by ($x | Person_NP)?", "How often did ($x | Person_NP) create?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/notableWork> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who founded ($x | Organisation_NP)?", "Who founds ($x | Organisation_NP)?", "Who person was the person that founded ($x | Organisation_NP)?", "Whom is ($x | Organisation_NP) found?", "Whom was ($x | Organisation_NP) found?", "which person founded ($x | Organisation_NP)?", "which person founds ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/founder> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who organization was founded by ($x | Person_NP)?", "Who organizations were founded by ($x | Person_NP)?", "Who was ($x | Person_NP) founded by?", "Whom did ($x | Organisation_NP) found?", "which organization was founded by ($x | Person_NP)?", "which organizations were founded by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "817",
    "lexicalEntryUri" : "http://localhost:8080#to_found_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organizations are founded by ($x | Person_NP)?", "How often did ($x | Person_NP) found?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/founder> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all athlete manage ($x | SportsTeam_NP)?", "Give me all athlete that managed the ($x | SportsTeam_NP)", "Who athlete managed ($x | SportsTeam_NP)?", "Who athlete managed the ($x | SportsTeam_NP)?", "Who athlete managed the sport team ($x | SportsTeam_NP)?", "Who athlete managed the sport teams ($x | SportsTeam_NP)?", "Who athlete manages ($x | SportsTeam_NP)?", "Who athlete manages the ($x | SportsTeam_NP)?", "Who athlete manages the sport team ($x | SportsTeam_NP)?", "Who athlete manages the sport teams ($x | SportsTeam_NP)?", "Who athlete was the athlete that managed ($x | SportsTeam_NP)?", "which athlete did ($x | SportsTeam_NP) manage?", "which athlete does ($x | SportsTeam_NP) manage?", "which athlete manage ($x | SportsTeam_NP)?", "which athlete managed ($x | SportsTeam_NP)?", "which athlete manages ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "819",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all sport teams managed by ($x | Athlete_NP)?", "List all sport teams managed by ($x | Athlete_NP)?", "What kind of sport team did ($x | Athlete_NP) manage?", "What sport team was managed by ($x | Athlete_NP)?", "What sport teams were managed by ($x | Athlete_NP)?", "show me all sport team that ($x | Athlete_NP) managed", "show me the sport team that ($x | Athlete_NP) managed", "which sport team did ($x | Athlete_NP) manage?", "which sport team manages the ($x | Athlete_NP)?", "which sport team was managed by ($x | Athlete_NP)?", "which sport teams did ($x | Athlete_NP) manage?", "which sport teams manage the ($x | Athlete_NP)?", "which sport teams were managed by ($x | Athlete_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#to_manage_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many sport teams are managed by ($x | Athlete_NP)?", "How often did ($x | Athlete_NP) manage?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers join ($x | BodyOfWater_NP)?", "Give me all rivers that joined the ($x | BodyOfWater_NP)", "What river joined ($x | BodyOfWater_NP)?", "What river joined the ($x | BodyOfWater_NP)?", "What river joined the river ($x | BodyOfWater_NP)?", "What river joined the rivers ($x | BodyOfWater_NP)?", "What river joins ($x | BodyOfWater_NP)?", "What river joins the ($x | BodyOfWater_NP)?", "What river joins the river ($x | BodyOfWater_NP)?", "What river joins the rivers ($x | BodyOfWater_NP)?", "What river was the river that joined ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) join?", "which river joined ($x | BodyOfWater_NP)?", "which river joins ($x | BodyOfWater_NP)?", "which rivers did ($x | BodyOfWater_NP) join?", "which rivers does ($x | BodyOfWater_NP) join?", "which rivers join ($x | BodyOfWater_NP)?", "which rivers joined ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "822",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all rivers joined by ($x | River_NP)?", "List all rivers joined by ($x | River_NP)?", "What kind of river did ($x | River_NP) join?", "What river was joined by ($x | River_NP)?", "What rivers were joined by ($x | River_NP)?", "show me all river that ($x | River_NP) joined", "show me the river that ($x | River_NP) joined", "which river did ($x | River_NP) join?", "which river joins the ($x | River_NP)?", "which river was joined by ($x | River_NP)?", "which rivers did ($x | River_NP) join?", "which rivers join the ($x | River_NP)?", "which rivers were joined by ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "823",
    "lexicalEntryUri" : "http://localhost:8080#to_join_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers are joined by ($x | River_NP)?", "How often did ($x | River_NP) join?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was the person that succeeded ($x | Person_NP)?", "Who succeeded ($x | Person_NP)?", "Who succeeds ($x | Person_NP)?", "Whom is ($x | Person_NP) succeed?", "Whom was ($x | Person_NP) succeed?", "which person succeeded ($x | Person_NP)?", "which person succeeds ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who person was succeeded by ($x | Person_NP)?", "Who persons were succeeded by ($x | Person_NP)?", "Who was ($x | Person_NP) succeeded by?", "Whom did ($x | Person_NP) succeed?", "which person was succeeded by ($x | Person_NP)?", "which persons were succeeded by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons are succeeded by ($x | Person_NP)?", "How often did ($x | Person_NP) succeed?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Work_NP)", "Give me all persons write ($x | Work_NP)?", "Who person was the person that wrote ($x | Work_NP)?", "Who person writes ($x | Work_NP)?", "Who person writes the ($x | Work_NP)?", "Who person writes the work ($x | Work_NP)?", "Who person writes the works ($x | Work_NP)?", "Who person wrote ($x | Work_NP)?", "Who person wrote the ($x | Work_NP)?", "Who person wrote the work ($x | Work_NP)?", "Who person wrote the works ($x | Work_NP)?", "which person does ($x | Work_NP) write?", "which person writes ($x | Work_NP)?", "which person wrote ($x | Work_NP)?", "which persons did ($x | Work_NP) write?", "which persons does ($x | Work_NP) write?", "which persons write ($x | Work_NP)?", "which persons wrote ($x | Work_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "828",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all works wrote by ($x | Person_NP)?", "List all works wrote by ($x | Person_NP)?", "What kind of work did ($x | Person_NP) write?", "What work was wrote by ($x | Person_NP)?", "What works were wrote by ($x | Person_NP)?", "show me all work that ($x | Person_NP) wrote", "show me the work that ($x | Person_NP) wrote", "which work did ($x | Person_NP) write?", "which work was wrote by ($x | Person_NP)?", "which work writes the ($x | Person_NP)?", "which works did ($x | Person_NP) write?", "which works were wrote by ($x | Person_NP)?", "which works write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "829",
    "lexicalEntryUri" : "http://localhost:8080#to_write_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "What expressed ($x | Thing_NP)?", "What expresses ($x | Thing_NP)?", "which color expressed ($x | Thing_NP)?", "which color expresses ($x | Thing_NP)?", "which colors express ($x | Thing_NP)?", "which colors expressed ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_SUBJECT",
    "sentences" : [ "Give me all colors expressed by ($x | Colour_NP)?", "List all colors expressed by ($x | Colour_NP)?", "What color was expressed by ($x | Colour_NP)?", "What colors were expressed by ($x | Colour_NP)?", "What kind of color did ($x | Colour_NP) express?", "show me all color that ($x | Colour_NP) expressed", "show me the color that ($x | Colour_NP) expressed", "which color did ($x | Colour_NP) express?", "which color expresses the ($x | Colour_NP)?", "which color was expressed by ($x | Colour_NP)?", "which colors did ($x | Colour_NP) express?", "which colors express the ($x | Colour_NP)?", "which colors were expressed by ($x | Colour_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "832",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many colors are expressed by ($x | Colour_NP)?", "How often did ($x | Colour_NP) express?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons starring in ($x | Film_NP)?", "Give me all persons that starred in the ($x | Film_NP)", "Who person starred in ($x | Film_NP)?", "Who person starred in the ($x | Film_NP)?", "Who person starred in the film ($x | Film_NP)?", "Who person starred in the films ($x | Film_NP)?", "Who person starring in ($x | Film_NP)?", "Who person starring in the ($x | Film_NP)?", "Who person starring in the film ($x | Film_NP)?", "Who person starring in the films ($x | Film_NP)?", "Who person was the person that starred in ($x | Film_NP)?", "which person does ($x | Film_NP) starring in?", "which person starred in ($x | Film_NP)?", "which person starring in ($x | Film_NP)?", "which persons did ($x | Film_NP) starring in?", "which persons does ($x | Film_NP) starring in?", "which persons starred in ($x | Film_NP)?", "which persons starring in ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "834",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by ($x | Person_NP)?", "List all films starred_in by ($x | Person_NP)?", "What film was starred_in by ($x | Person_NP)?", "What films were starred_in by ($x | Person_NP)?", "What kind of film did ($x | Person_NP) starring in?", "show me all film that ($x | Person_NP) starred in", "show me the film that ($x | Person_NP) starred in", "which film did ($x | Person_NP) starring in?", "which film starring in the ($x | Person_NP)?", "which film was starred_in by ($x | Person_NP)?", "which films did ($x | Person_NP) starring in?", "which films starring in the ($x | Person_NP)?", "which films were starred_in by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are starred_in by ($x | Person_NP)?", "How often did ($x | Person_NP) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations produce ($x | Beverage_NP)?", "Give me all organizations that produced the ($x | Beverage_NP)", "Who organization produced ($x | Beverage_NP)?", "Who organization produced the ($x | Beverage_NP)?", "Who organization produced the beverage ($x | Beverage_NP)?", "Who organization produced the beverages ($x | Beverage_NP)?", "Who organization produces ($x | Beverage_NP)?", "Who organization produces the ($x | Beverage_NP)?", "Who organization produces the beverage ($x | Beverage_NP)?", "Who organization produces the beverages ($x | Beverage_NP)?", "Who organization was the organization that produced ($x | Beverage_NP)?", "which organization does ($x | Beverage_NP) produce?", "which organization produced ($x | Beverage_NP)?", "which organization produces ($x | Beverage_NP)?", "which organizations did ($x | Beverage_NP) produce?", "which organizations does ($x | Beverage_NP) produce?", "which organizations produce ($x | Beverage_NP)?", "which organizations produced ($x | Beverage_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all beverages produced by ($x | Organisation_NP)?", "List all beverages produced by ($x | Organisation_NP)?", "What beverage was produced by ($x | Organisation_NP)?", "What beverages were produced by ($x | Organisation_NP)?", "What kind of beverage did ($x | Organisation_NP) produce?", "show me all beverage that ($x | Organisation_NP) produced", "show me the beverage that ($x | Organisation_NP) produced", "which beverage did ($x | Organisation_NP) produce?", "which beverage produces the ($x | Organisation_NP)?", "which beverage was produced by ($x | Organisation_NP)?", "which beverages did ($x | Organisation_NP) produce?", "which beverages produce the ($x | Organisation_NP)?", "which beverages were produced by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many beverages are produced by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/manufacturer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all countries adopted by ($x | Currency_NP)?", "List all countries adopted by ($x | Currency_NP)?", "What countries were adopted by ($x | Currency_NP)?", "What country was adopted by ($x | Currency_NP)?", "show me the country that ($x | Currency_NP) adopted", "which countries adopt ($x | Currency_NP)?", "which countries adopted ($x | Currency_NP)?", "which countries did ($x | Currency_NP) adopt?", "which countries were adopted by ($x | Currency_NP)?", "which country adopt ($x | Currency_NP)?", "which country adopted ($x | Currency_NP)?", "which country did ($x | Currency_NP) adopt?", "which country was adopted by ($x | Currency_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "840",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE_OPPOSITITE",
    "sentences" : [ "Give me all currencies adopt ($x | Country_NP)?", "What currency adopted ($x | Country_NP)?", "What currency adopted the ($x | Country_NP)?", "What currency adopted the countries ($x | Country_NP)?", "What currency adopts ($x | Country_NP)?", "What currency adopts the ($x | Country_NP)?", "What currency adopts the countries ($x | Country_NP)?", "What currency adopts the country ($x | Country_NP)?", "What currency was the currency that adopted ($x | Country_NP)?", "which currencies adopt ($x | Country_NP)?", "which currencies adopted ($x | Country_NP)?", "which currencies did ($x | Country_NP) adopt?", "which currencies does ($x | Country_NP) adopt?", "which currency adopted ($x | Country_NP)?", "which currency adopts ($x | Country_NP)?", "which currency does ($x | Country_NP) adopt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#to_adopt",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Currency" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many countries are adopted by ($x | Currency_NP)?", "How often did ($x | Currency_NP) adopt?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/currency> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who followed ($x | Politician_NP)?", "Who follows ($x | Politician_NP)?", "Who politician was the politician that followed ($x | Politician_NP)?", "Whom is ($x | Politician_NP) follow?", "Whom was ($x | Politician_NP) follow?", "which politician followed ($x | Politician_NP)?", "which politician follows ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "843",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Who politician was followed by ($x | Politician_NP)?", "Who politicians were followed by ($x | Politician_NP)?", "Who was ($x | Politician_NP) followed by?", "Whom did ($x | Politician_NP) follow?", "which politician was followed by ($x | Politician_NP)?", "which politicians were followed by ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "844",
    "lexicalEntryUri" : "http://localhost:8080#to_follow_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Politician" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many politicians are followed by ($x | Politician_NP)?", "How often did ($x | Politician_NP) follow?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/successor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all organizations rent ($x | ArchitecturalStructure_NP)?", "Give me all organizations that rented the ($x | ArchitecturalStructure_NP)", "Who organization rented ($x | ArchitecturalStructure_NP)?", "Who organization rented the ($x | ArchitecturalStructure_NP)?", "Who organization rented the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who organization rented the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who organization rents ($x | ArchitecturalStructure_NP)?", "Who organization rents the ($x | ArchitecturalStructure_NP)?", "Who organization rents the ArchitecturalStructure ($x | ArchitecturalStructure_NP)?", "Who organization rents the ArchitecturalStructures ($x | ArchitecturalStructure_NP)?", "Who organization was the organization that rented ($x | ArchitecturalStructure_NP)?", "which organization does ($x | ArchitecturalStructure_NP) rent?", "which organization rented ($x | ArchitecturalStructure_NP)?", "which organization rents ($x | ArchitecturalStructure_NP)?", "which organizations did ($x | ArchitecturalStructure_NP) rent?", "which organizations does ($x | ArchitecturalStructure_NP) rent?", "which organizations rent ($x | ArchitecturalStructure_NP)?", "which organizations rented ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all ArchitecturalStructures rented by ($x | Organisation_NP)?", "List all ArchitecturalStructures rented by ($x | Organisation_NP)?", "What ArchitecturalStructure was rented by ($x | Organisation_NP)?", "What ArchitecturalStructures were rented by ($x | Organisation_NP)?", "What kind of ArchitecturalStructure did ($x | Organisation_NP) rent?", "show me all ArchitecturalStructure that ($x | Organisation_NP) rented", "show me the ArchitecturalStructure that ($x | Organisation_NP) rented", "which ArchitecturalStructure did ($x | Organisation_NP) rent?", "which ArchitecturalStructure rents the ($x | Organisation_NP)?", "which ArchitecturalStructure was rented by ($x | Organisation_NP)?", "which ArchitecturalStructures did ($x | Organisation_NP) rent?", "which ArchitecturalStructures rent the ($x | Organisation_NP)?", "which ArchitecturalStructures were rented by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "847",
    "lexicalEntryUri" : "http://localhost:8080#to_rent_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures are rented by ($x | Organisation_NP)?", "How often did ($x | Organisation_NP) rent?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons discover ($x | Planet_NP)?", "Give me all persons that discovered the ($x | Planet_NP)", "Who person discovered ($x | Planet_NP)?", "Who person discovered the ($x | Planet_NP)?", "Who person discovered the planets ($x | Planet_NP)?", "Who person discovered the plant ($x | Planet_NP)?", "Who person discovers ($x | Planet_NP)?", "Who person discovers the ($x | Planet_NP)?", "Who person discovers the planets ($x | Planet_NP)?", "Who person discovers the plant ($x | Planet_NP)?", "Who person was the person that discovered ($x | Planet_NP)?", "which person discovered ($x | Planet_NP)?", "which person discovers ($x | Planet_NP)?", "which person does ($x | Planet_NP) discover?", "which persons did ($x | Planet_NP) discover?", "which persons discover ($x | Planet_NP)?", "which persons discovered ($x | Planet_NP)?", "which persons does ($x | Planet_NP) discover?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "849",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all planets discovered by ($x | Person_NP)?", "List all planets discovered by ($x | Person_NP)?", "What kind of plant did ($x | Person_NP) discover?", "What planets were discovered by ($x | Person_NP)?", "What plant was discovered by ($x | Person_NP)?", "show me all plant that ($x | Person_NP) discovered", "show me the plant that ($x | Person_NP) discovered", "which planets did ($x | Person_NP) discover?", "which planets discover the ($x | Person_NP)?", "which planets were discovered by ($x | Person_NP)?", "which plant did ($x | Person_NP) discover?", "which plant discovers the ($x | Person_NP)?", "which plant was discovered by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#to_discover_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many planets are discovered by ($x | Person_NP)?", "How often did ($x | Person_NP) discover?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons play ($x | MusicalWork_NP)?", "Give me all persons that played the ($x | MusicalWork_NP)", "Who person played ($x | MusicalWork_NP)?", "Who person played the ($x | MusicalWork_NP)?", "Who person played the music ($x | MusicalWork_NP)?", "Who person played the musics ($x | MusicalWork_NP)?", "Who person plays ($x | MusicalWork_NP)?", "Who person plays the ($x | MusicalWork_NP)?", "Who person plays the music ($x | MusicalWork_NP)?", "Who person plays the musics ($x | MusicalWork_NP)?", "Who person was the person that played ($x | MusicalWork_NP)?", "which person does ($x | MusicalWork_NP) play?", "which person played ($x | MusicalWork_NP)?", "which person plays ($x | MusicalWork_NP)?", "which persons did ($x | MusicalWork_NP) play?", "which persons does ($x | MusicalWork_NP) play?", "which persons play ($x | MusicalWork_NP)?", "which persons played ($x | MusicalWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "852",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all musics played by ($x | Person_NP)?", "List all musics played by ($x | Person_NP)?", "What kind of music did ($x | Person_NP) play?", "What music was played by ($x | Person_NP)?", "What musics were played by ($x | Person_NP)?", "show me all music that ($x | Person_NP) played", "show me the music that ($x | Person_NP) played", "which music did ($x | Person_NP) play?", "which music plays the ($x | Person_NP)?", "which music was played by ($x | Person_NP)?", "which musics did ($x | Person_NP) play?", "which musics play the ($x | Person_NP)?", "which musics were played by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "853",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musics are played by ($x | Person_NP)?", "How often did ($x | Person_NP) play?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all company publish ($x | VideoGame_NP)?", "Give me all company that published the ($x | VideoGame_NP)", "Who company published ($x | VideoGame_NP)?", "Who company published the ($x | VideoGame_NP)?", "Who company published the video game ($x | VideoGame_NP)?", "Who company published the video games ($x | VideoGame_NP)?", "Who company publishes ($x | VideoGame_NP)?", "Who company publishes the ($x | VideoGame_NP)?", "Who company publishes the video game ($x | VideoGame_NP)?", "Who company publishes the video games ($x | VideoGame_NP)?", "Who company was the company that published ($x | VideoGame_NP)?", "which company did ($x | VideoGame_NP) publish?", "which company does ($x | VideoGame_NP) publish?", "which company publish ($x | VideoGame_NP)?", "which company published ($x | VideoGame_NP)?", "which company publishes ($x | VideoGame_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all video games published by ($x | Company_NP)?", "List all video games published by ($x | Company_NP)?", "What kind of video game did ($x | Company_NP) publish?", "What video game was published by ($x | Company_NP)?", "What video games were published by ($x | Company_NP)?", "show me all video game that ($x | Company_NP) published", "show me the video game that ($x | Company_NP) published", "which video game did ($x | Company_NP) publish?", "which video game publishes the ($x | Company_NP)?", "which video game was published by ($x | Company_NP)?", "which video games did ($x | Company_NP) publish?", "which video games publish the ($x | Company_NP)?", "which video games were published by ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#to_Publish_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many video games are published by ($x | Company_NP)?", "How often did ($x | Company_NP) publish?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons that wrote the ($x | Book_NP)", "Give me all persons write ($x | Book_NP)?", "Who person was the person that wrote ($x | Book_NP)?", "Who person writes ($x | Book_NP)?", "Who person writes the ($x | Book_NP)?", "Who person writes the book ($x | Book_NP)?", "Who person writes the books ($x | Book_NP)?", "Who person wrote ($x | Book_NP)?", "Who person wrote the ($x | Book_NP)?", "Who person wrote the book ($x | Book_NP)?", "Who person wrote the books ($x | Book_NP)?", "which person does ($x | Book_NP) write?", "which person writes ($x | Book_NP)?", "which person wrote ($x | Book_NP)?", "which persons did ($x | Book_NP) write?", "which persons does ($x | Book_NP) write?", "which persons write ($x | Book_NP)?", "which persons wrote ($x | Book_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "858",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all books wrote by ($x | Person_NP)?", "List all books wrote by ($x | Person_NP)?", "What book was wrote by ($x | Person_NP)?", "What books were wrote by ($x | Person_NP)?", "What kind of book did ($x | Person_NP) write?", "show me all book that ($x | Person_NP) wrote", "show me the book that ($x | Person_NP) wrote", "which book did ($x | Person_NP) write?", "which book was wrote by ($x | Person_NP)?", "which book writes the ($x | Person_NP)?", "which books did ($x | Person_NP) write?", "which books were wrote by ($x | Person_NP)?", "which books write the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "859",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many books are wrote by ($x | Person_NP)?", "How often did ($x | Person_NP) write?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all persons produce ($x | TelevisionShow_NP)?", "Give me all persons that produced the ($x | TelevisionShow_NP)", "Who person produced ($x | TelevisionShow_NP)?", "Who person produced the ($x | TelevisionShow_NP)?", "Who person produced the television show ($x | TelevisionShow_NP)?", "Who person produced the television shows ($x | TelevisionShow_NP)?", "Who person produces ($x | TelevisionShow_NP)?", "Who person produces the ($x | TelevisionShow_NP)?", "Who person produces the television show ($x | TelevisionShow_NP)?", "Who person produces the television shows ($x | TelevisionShow_NP)?", "Who person was the person that produced ($x | TelevisionShow_NP)?", "which person does ($x | TelevisionShow_NP) produce?", "which person produced ($x | TelevisionShow_NP)?", "which person produces ($x | TelevisionShow_NP)?", "which persons did ($x | TelevisionShow_NP) produce?", "which persons does ($x | TelevisionShow_NP) produce?", "which persons produce ($x | TelevisionShow_NP)?", "which persons produced ($x | TelevisionShow_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/executiveProducer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all television shows produced by ($x | Person_NP)?", "List all television shows produced by ($x | Person_NP)?", "What kind of television show did ($x | Person_NP) produce?", "What television show was produced by ($x | Person_NP)?", "What television shows were produced by ($x | Person_NP)?", "show me all television show that ($x | Person_NP) produced", "show me the television show that ($x | Person_NP) produced", "which television show did ($x | Person_NP) produce?", "which television show produces the ($x | Person_NP)?", "which television show was produced by ($x | Person_NP)?", "which television shows did ($x | Person_NP) produce?", "which television shows produce the ($x | Person_NP)?", "which television shows were produced by ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "862",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many television shows are produced by ($x | Person_NP)?", "How often did ($x | Person_NP) produce?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/executiveProducer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all actors starring in ($x | Film_NP)?", "Give me all actors that starred in the ($x | Film_NP)", "Who actor starred in ($x | Film_NP)?", "Who actor starred in the ($x | Film_NP)?", "Who actor starred in the film ($x | Film_NP)?", "Who actor starred in the films ($x | Film_NP)?", "Who actor starring in ($x | Film_NP)?", "Who actor starring in the ($x | Film_NP)?", "Who actor starring in the film ($x | Film_NP)?", "Who actor starring in the films ($x | Film_NP)?", "Who actor was the actor that starred in ($x | Film_NP)?", "which actor does ($x | Film_NP) starring in?", "which actor starred in ($x | Film_NP)?", "which actor starring in ($x | Film_NP)?", "which actors did ($x | Film_NP) starring in?", "which actors does ($x | Film_NP) starring in?", "which actors starred in ($x | Film_NP)?", "which actors starring in ($x | Film_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "864",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all films starred_in by ($x | Actor_NP)?", "List all films starred_in by ($x | Actor_NP)?", "What film was starred_in by ($x | Actor_NP)?", "What films were starred_in by ($x | Actor_NP)?", "What kind of film did ($x | Actor_NP) starring in?", "show me all film that ($x | Actor_NP) starred in", "show me the film that ($x | Actor_NP) starred in", "which film did ($x | Actor_NP) starring in?", "which film starring in the ($x | Actor_NP)?", "which film was starred_in by ($x | Actor_NP)?", "which films did ($x | Actor_NP) starring in?", "which films starring in the ($x | Actor_NP)?", "which films were starred_in by ($x | Actor_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#to_starr_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films are starred_in by ($x | Actor_NP)?", "How often did ($x | Actor_NP) starring in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all agents edit ($x | Magazine_NP)?", "Give me all agents that edited the ($x | Magazine_NP)", "Who agent edited ($x | Magazine_NP)?", "Who agent edited the ($x | Magazine_NP)?", "Who agent edited the academic journal ($x | Magazine_NP)?", "Who agent edited the academic journals ($x | Magazine_NP)?", "Who agent edits ($x | Magazine_NP)?", "Who agent edits the ($x | Magazine_NP)?", "Who agent edits the academic journal ($x | Magazine_NP)?", "Who agent edits the academic journals ($x | Magazine_NP)?", "Who agent was the agent that edited ($x | Magazine_NP)?", "which agent does ($x | Magazine_NP) edit?", "which agent edited ($x | Magazine_NP)?", "which agent edits ($x | Magazine_NP)?", "which agents did ($x | Magazine_NP) edit?", "which agents does ($x | Magazine_NP) edit?", "which agents edit ($x | Magazine_NP)?", "which agents edited ($x | Magazine_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Give me all academic journals edited by ($x | Agent_NP)?", "List all academic journals edited by ($x | Agent_NP)?", "What academic journal was edited by ($x | Agent_NP)?", "What academic journals were edited by ($x | Agent_NP)?", "What kind of academic journal did ($x | Agent_NP) edit?", "show me all academic journal that ($x | Agent_NP) edited", "show me the academic journal that ($x | Agent_NP) edited", "which academic journal did ($x | Agent_NP) edit?", "which academic journal edits the ($x | Agent_NP)?", "which academic journal was edited by ($x | Agent_NP)?", "which academic journals did ($x | Agent_NP) edit?", "which academic journals edit the ($x | Agent_NP)?", "which academic journals were edited by ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#to_edit_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many academic journals are edited by ($x | Agent_NP)?", "How often did ($x | Agent_NP) edit?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What Bridge is the highest Bridge in ($x | Country_NP)?", "What Bridge is the highest Bridge in the ($x | Country_NP)?", "What Bridge is the highest the Bridge in ($x | Country_NP)?", "What Bridge is the highest the Bridge in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Bridge_NP)?", "How high is the ($x | Bridge_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#high_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all Bridges that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/birthYear> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How old is ($x | Person_NP)?", "How old is the ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#old",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all persons that are older than ($x | Person_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What Lighthouse is the highest Lighthouse in ($x | Country_NP)?", "What Lighthouse is the highest Lighthouse in the ($x | Country_NP)?", "What Lighthouse is the highest the Lighthouse in ($x | Country_NP)?", "What Lighthouse is the highest the Lighthouse in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Lighthouse_NP)?", "How high is the ($x | Lighthouse_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#high_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all Lighthouses that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#High_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "Who basketball player is the highest basketball player in ($x | Country_NP)?", "Who basketball player is the highest basketball player in the ($x | Country_NP)?", "Who basketball player is the highest the basketball player in ($x | Country_NP)?", "Who basketball player is the highest the basketball player in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#High_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | BasketballPlayer_NP)?", "How high is the ($x | BasketballPlayer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#High_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all basketball players that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "BasketballPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "Who basketball player is the tallest basketball player in the world?", "Who basketball player is the tallest basketball player?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How tall is ($x | BasketballPlayer_NP)?", "How tall is the ($x | BasketballPlayer_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#tall_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BasketballPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all basketball players that are taller than ($x | Thing_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What mountain is the highest mountain in ($x | Country_NP)?", "What mountain is the highest mountain in the ($x | Country_NP)?", "What mountain is the highest the mountain in ($x | Country_NP)?", "What mountain is the highest the mountain in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Mountain_NP)?", "How high is the ($x | Mountain_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#high_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all mountains that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What stadium is the biggest stadium in ($x | Country_NP)?", "What stadium is the biggest stadium in the ($x | Country_NP)?", "What stadium is the biggest the stadium in ($x | Country_NP)?", "What stadium is the biggest the stadium in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How big is ($x | Stadium_NP)?", "How big is the ($x | Stadium_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#big_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all stadiums that are bigger than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What ArchitecturalStructure is the highest ArchitecturalStructure in ($x | Country_NP)?", "What ArchitecturalStructure is the highest ArchitecturalStructure in the ($x | Country_NP)?", "What ArchitecturalStructure is the highest the ArchitecturalStructure in ($x | Country_NP)?", "What ArchitecturalStructure is the highest the ArchitecturalStructure in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | ArchitecturalStructure_NP)?", "How high is the ($x | ArchitecturalStructure_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#high_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all ArchitecturalStructures that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#deep",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "What lake is the deepest lake in ($x | Country_NP)?", "What lake is the deepest lake in the ($x | Country_NP)?", "What lake is the deepest the lake in ($x | Country_NP)?", "What lake is the deepest the lake in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#deep",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How deep is ($x | Lake_NP)?", "How deep is the ($x | Lake_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#deep",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all lakes that are deeper than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/maximumDepth> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Building" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "What Building is the highest Building in ($x | Country_NP)?", "What Building is the highest Building in the ($x | Country_NP)?", "What Building is the highest the Building in ($x | Country_NP)?", "What Building is the highest the Building in the ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "How high is ($x | Building_NP)?", "How high is the ($x | Building_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#high_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ "show me all dbo:Buildings that are higher than ($x | Country_NP)" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer FILTER ( ?Answer > VARIABLE ) }",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | MilitaryConflict_NP) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/combatant> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) fight in?", "What fights in ($x | Thing_NP)?", "What fought in ($x | Thing_NP)?", "What military conflict does ($x | Thing_NP) fight in?", "What military conflicts does ($x | Thing_NP) fight in?", "Where does ($x | Thing_NP) fight?", "which military conflict fights in ($x | Thing_NP)?", "which military conflict fought in ($x | Thing_NP)?", "which military conflict was fought in ($x | Thing_NP)?", "which military conflicts fight in ($x | Thing_NP)?", "which military conflicts fought in ($x | Thing_NP)?", "which military conflicts were fought in ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#fight_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military conflicts did ($x | Thing_NP) fight in?", "How many military conflicts fight in ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/combatant> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) bury?", "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/burialPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were buried in ($x | City_NP)?", "Give me all persons Who person were buried in ($x | City_NP)?", "Which people were buried in ($x | City_NP)?", "Who person was buried in ($x | City_NP)?", "which person was buried in ($x | City_NP)?", "which persons were buried in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/burialPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Artist_NP) associated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Thing_NP) associate?", "Who artist does ($x | Thing_NP) associate with?", "Who artists does ($x | Thing_NP) associate with?", "Who associated with ($x | Thing_NP)?", "Who does ($x | Thing_NP) associate with?", "which artist associated with ($x | Thing_NP)?", "which artist was associated with ($x | Thing_NP)?", "which artists associate with ($x | Thing_NP)?", "which artists associated with ($x | Thing_NP)?", "which artists were associated with ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artists associate with ($x | Thing_NP)?", "How many artists did ($x | Thing_NP) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/movement> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) started?", "in which countries  ($x | River_NP) start?", "in which countries are ($x | River_NP) started?", "in which countries does start ($x | River_NP)?", "in which country does ($x | River_NP) start?", "in which country is ($x | River_NP) started?", "which countries does ($x | River_NP) start in?", "which countries does the ($x | River_NP) start in?", "which country does ($x | River_NP) start in?", "which country does the ($x | River_NP) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) start in?", "What river does ($x | Country_NP) start in?", "What rivers does ($x | Country_NP) start in?", "What started in ($x | Country_NP)?", "What starts in ($x | Country_NP)?", "Where does ($x | Country_NP) start?", "which river started in ($x | Country_NP)?", "which river starts in ($x | Country_NP)?", "which river was started in ($x | Country_NP)?", "which rivers start in ($x | Country_NP)?", "which rivers started in ($x | Country_NP)?", "which rivers were started in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | Country_NP) start in?", "How many rivers start in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Organisation_NP) locate?", "Where is ($x | Organisation_NP) located?", "Where was ($x | Organisation_NP) located?", "in which place did ($x | Organisation_NP) locate?", "which place does ($x | Organisation_NP) locate in?", "which place was ($x | Organisation_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all organizations that were located in ($x | Place_NP)?", "Give me all organizations Who organization were located in ($x | Place_NP)?", "Which people were located in ($x | Place_NP)?", "Who organization was located in ($x | Place_NP)?", "which organization was located in ($x | Place_NP)?", "which organizations were located in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Agent_NP) belonged?", "to which politicalParties  ($x | Agent_NP) belong?", "to which politicalParties are ($x | Agent_NP) belonged?", "to which politicalParties does belong ($x | Agent_NP)?", "to which politicalParty does ($x | Agent_NP) belong?", "to which politicalParty is ($x | Agent_NP) belonged?", "which politicalParties does ($x | Agent_NP) belong to?", "which politicalParties does the ($x | Agent_NP) belong to?", "which politicalParty does ($x | Agent_NP) belong to?", "which politicalParty does the ($x | Agent_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | PoliticalParty_NP) belong?", "Who agent does ($x | PoliticalParty_NP) belong to?", "Who agents does ($x | PoliticalParty_NP) belong to?", "Who belonged to ($x | PoliticalParty_NP)?", "Who belongs to ($x | PoliticalParty_NP)?", "Who does ($x | PoliticalParty_NP) belong to?", "which agent belonged to ($x | PoliticalParty_NP)?", "which agent belongs to ($x | PoliticalParty_NP)?", "which agent was belonged to ($x | PoliticalParty_NP)?", "which agents belong to ($x | PoliticalParty_NP)?", "which agents belonged to ($x | PoliticalParty_NP)?", "which agents were belonged to ($x | PoliticalParty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many agents belong to ($x | PoliticalParty_NP)?", "How many agents did ($x | PoliticalParty_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who person is died from ($x | Thing_NP)?", "Who persons was died from ($x | Thing_NP)?", "which person is died from ($x | Thing_NP)?", "which person was died from ($x | Thing_NP)?", "which persons are died from ($x | Thing_NP)?", "which persons were died from ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who person is died from ($x | Thing_NP)?", "Who persons was died from ($x | Thing_NP)?", "which person is died from ($x | Thing_NP)?", "which person was died from ($x | Thing_NP)?", "which persons are died from ($x | Thing_NP)?", "which persons were died from ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "in which populated places does end ($x | River_NP)?", "which populated place does ($x | River_NP) end in?", "which populated place does the ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?", "which populated places does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) end in?", "What ended in ($x | PopulatedPlace_NP)?", "What ends in ($x | PopulatedPlace_NP)?", "What river does ($x | PopulatedPlace_NP) end in?", "What rivers does ($x | PopulatedPlace_NP) end in?", "Where does ($x | PopulatedPlace_NP) end?", "which river ended in ($x | PopulatedPlace_NP)?", "which river ends in ($x | PopulatedPlace_NP)?", "which river was ended in ($x | PopulatedPlace_NP)?", "which rivers end in ($x | PopulatedPlace_NP)?", "which rivers ended in ($x | PopulatedPlace_NP)?", "which rivers were ended in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#end_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | PopulatedPlace_NP) end in?", "How many rivers end in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Actor_NP) born?", "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all actors that were born in ($x | Country_NP)?", "Give me all actors Who actor were born in ($x | Country_NP)?", "Which people were born in ($x | Country_NP)?", "Who actor was born in ($x | Country_NP)?", "which actor was born in ($x | Country_NP)?", "which actors were born in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "928",
    "lexicalEntryUri" : "http://localhost:8080#born_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Play" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which play does ($x | Person_NP) play?", "in which play is ($x | Person_NP) played?", "in which plays  ($x | Person_NP) play?", "in which plays are ($x | Person_NP) played?", "in which plays does play ($x | Person_NP)?", "which play does ($x | Person_NP) play in?", "which play does the ($x | Person_NP) play in?", "which plays does ($x | Person_NP) play in?", "which plays does the ($x | Person_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Play" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Play_NP) play?", "Who does ($x | Play_NP) play in?", "Who person does ($x | Play_NP) play in?", "Who persons does ($x | Play_NP) play in?", "Who played in ($x | Play_NP)?", "Who plays in ($x | Play_NP)?", "which person played in ($x | Play_NP)?", "which person plays in ($x | Play_NP)?", "which person was played in ($x | Play_NP)?", "which persons play in ($x | Play_NP)?", "which persons played in ($x | Play_NP)?", "which persons were played in ($x | Play_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "931",
    "lexicalEntryUri" : "http://localhost:8080#play_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Play" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | Play_NP) play in?", "How many persons play in ($x | Play_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "932",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | LaunchPad_NP) operated?", "by which organization does ($x | LaunchPad_NP) operate?", "by which organization is ($x | LaunchPad_NP) operated?", "by which organizations  ($x | LaunchPad_NP) operate?", "by which organizations are ($x | LaunchPad_NP) operated?", "by which organizations does operate ($x | LaunchPad_NP)?", "which organization does ($x | LaunchPad_NP) operate by?", "which organization does the ($x | LaunchPad_NP) operate by?", "which organizations does ($x | LaunchPad_NP) operate by?", "which organizations does the ($x | LaunchPad_NP) operate by?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Organisation_NP) operate by?", "What launch pad does ($x | Organisation_NP) operate by?", "What launch pads does ($x | Organisation_NP) operate by?", "What operated by ($x | Organisation_NP)?", "What operates by ($x | Organisation_NP)?", "Where does ($x | Organisation_NP) operate?", "which launch pad operated by ($x | Organisation_NP)?", "which launch pad operates by ($x | Organisation_NP)?", "which launch pad was operated by ($x | Organisation_NP)?", "which launch pads operate by ($x | Organisation_NP)?", "which launch pads operated by ($x | Organisation_NP)?", "which launch pads were operated by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#operate_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many launch pads did ($x | Organisation_NP) operate by?", "How many launch pads operate by ($x | Organisation_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/operator> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "935",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Single" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Single_NP) lived?", "in which cities  ($x | Single_NP) live?", "in which cities are ($x | Single_NP) lived?", "in which cities does live ($x | Single_NP)?", "in which city does ($x | Single_NP) live?", "in which city is ($x | Single_NP) lived?", "which cities does ($x | Single_NP) live in?", "which cities does the ($x | Single_NP) live in?", "which city does ($x | Single_NP) live in?", "which city does the ($x | Single_NP) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) live in?", "What lived in ($x | City_NP)?", "What lives in ($x | City_NP)?", "What person does ($x | City_NP) live in?", "What persons does ($x | City_NP) live in?", "Where does ($x | City_NP) live?", "which person lived in ($x | City_NP)?", "which person lives in ($x | City_NP)?", "which person was lived in ($x | City_NP)?", "which persons live in ($x | City_NP)?", "which persons lived in ($x | City_NP)?", "which persons were lived in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "937",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | City_NP) live in?", "How many persons live in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When did the ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?", "When was the ($x | Beverage_NP) discontinued?", "When were ($x | Beverage_NP) discontinued?", "When were the ($x | Beverage_NP) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What beverage discontinued in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "940",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "941",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When did the ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?", "When was the ($x | ArchitecturalStructure_NP) destroyed?", "When were ($x | ArchitecturalStructure_NP) destroyed?", "When were the ($x | ArchitecturalStructure_NP) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure destroyed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#destroy_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Article_NP) publish?", "When did the ($x | Article_NP) publish?", "When was ($x | Article_NP) published?", "When was the ($x | Article_NP) published?", "When were ($x | Article_NP) published?", "When were the ($x | Article_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What article published on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "946",
    "lexicalEntryUri" : "http://localhost:8080#published_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "947",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) flown?", "through which countries  ($x | River_NP) flow?", "through which countries are ($x | River_NP) flown?", "through which countries does flow ($x | River_NP)?", "through which country does ($x | River_NP) flow?", "through which country is ($x | River_NP) flown?", "which countries does ($x | River_NP) flow through?", "which countries does the ($x | River_NP) flow through?", "which country does ($x | River_NP) flow through?", "which country does the ($x | River_NP) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) flow through?", "What flowed through ($x | Country_NP)?", "What flows through ($x | Country_NP)?", "What river does ($x | Country_NP) flow through?", "What rivers does ($x | Country_NP) flow through?", "Where does ($x | Country_NP) flow?", "which river flowed through ($x | Country_NP)?", "which river flows through ($x | Country_NP)?", "which river was flown through ($x | Country_NP)?", "which rivers flow through ($x | Country_NP)?", "which rivers flowed through ($x | Country_NP)?", "which rivers were flown through ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | Country_NP) flow through?", "How many rivers flow through ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "950",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When did the ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?", "When was the ($x | Bridge_NP) opened?", "When were ($x | Bridge_NP) opened?", "When were the ($x | Bridge_NP) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Bridge opened in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "952",
    "lexicalEntryUri" : "http://localhost:8080#open_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Event_NP) commence?", "When did the ($x | Event_NP) commence?", "When was ($x | Event_NP) commenced?", "When was the ($x | Event_NP) commenced?", "When were ($x | Event_NP) commenced?", "When were the ($x | Event_NP) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What event commenced on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "955",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "956",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which place did ($x | Person_NP) born?", "which place does ($x | Person_NP) born in?", "which place was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in ($x | Place_NP)?", "Give me all persons Who person were born in ($x | Place_NP)?", "Which people were born in ($x | Place_NP)?", "Who person was born in ($x | Place_NP)?", "which person was born in ($x | Place_NP)?", "which persons were born in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#born_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "in which locations does locate ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which location does the ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?", "which locations does the ($x | ArchitecturalStructure_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Location_NP) locate in?", "What ArchitecturalStructures does ($x | Location_NP) locate in?", "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which ArchitecturalStructure located in ($x | Location_NP)?", "which ArchitecturalStructure locates in ($x | Location_NP)?", "which ArchitecturalStructure was located in ($x | Location_NP)?", "which ArchitecturalStructures locate in ($x | Location_NP)?", "which ArchitecturalStructures located in ($x | Location_NP)?", "which ArchitecturalStructures were located in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "961",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures did ($x | Location_NP) locate in?", "How many ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) located?", "in which location does ($x | ArchitecturalStructure_NP) locate?", "in which location is ($x | ArchitecturalStructure_NP) located?", "in which locations  ($x | ArchitecturalStructure_NP) locate?", "in which locations are ($x | ArchitecturalStructure_NP) located?", "in which locations does locate ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) locate in?", "which location does the ($x | ArchitecturalStructure_NP) locate in?", "which locations does ($x | ArchitecturalStructure_NP) locate in?", "which locations does the ($x | ArchitecturalStructure_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Location_NP) locate in?", "What ArchitecturalStructures does ($x | Location_NP) locate in?", "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "Where does ($x | Location_NP) locate?", "which ArchitecturalStructure located in ($x | Location_NP)?", "which ArchitecturalStructure locates in ($x | Location_NP)?", "which ArchitecturalStructure was located in ($x | Location_NP)?", "which ArchitecturalStructures locate in ($x | Location_NP)?", "which ArchitecturalStructures located in ($x | Location_NP)?", "which ArchitecturalStructures were located in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "964",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures did ($x | Location_NP) locate in?", "How many ArchitecturalStructures locate in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "965",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Work_NP) complete?", "When did the ($x | Work_NP) complete?", "When was ($x | Work_NP) completed?", "When was the ($x | Work_NP) completed?", "When were ($x | Work_NP) completed?", "When were the ($x | Work_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What work completed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "968",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryPerson" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | MilitaryPerson_NP) participated?", "in which military conflict does ($x | MilitaryPerson_NP) participate?", "in which military conflict is ($x | MilitaryPerson_NP) participated?", "in which military conflicts  ($x | MilitaryPerson_NP) participate?", "in which military conflicts are ($x | MilitaryPerson_NP) participated?", "in which military conflicts does participate ($x | MilitaryPerson_NP)?", "which military conflict does ($x | MilitaryPerson_NP) participate in?", "which military conflict does the ($x | MilitaryPerson_NP) participate in?", "which military conflicts does ($x | MilitaryPerson_NP) participate in?", "which military conflicts does the ($x | MilitaryPerson_NP) participate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | MilitaryConflict_NP) participate?", "Who does ($x | MilitaryConflict_NP) participate in?", "Who participated in ($x | MilitaryConflict_NP)?", "Who participates in ($x | MilitaryConflict_NP)?", "Who person does ($x | MilitaryConflict_NP) participate in?", "Who persons does ($x | MilitaryConflict_NP) participate in?", "which person participated in ($x | MilitaryConflict_NP)?", "which person participates in ($x | MilitaryConflict_NP)?", "which person was participated in ($x | MilitaryConflict_NP)?", "which persons participate in ($x | MilitaryConflict_NP)?", "which persons participated in ($x | MilitaryConflict_NP)?", "which persons were participated in ($x | MilitaryConflict_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "MilitaryPerson" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | MilitaryConflict_NP) participate in?", "How many persons participate in ($x | MilitaryConflict_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What military unit did ($x | Scientist_NP) known for?", "What military unit does ($x | Scientist_NP) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who scientist is known for ($x | MilitaryUnit_NP)?", "Who scientists was known for ($x | MilitaryUnit_NP)?", "which scientist is known for ($x | MilitaryUnit_NP)?", "which scientist was known for ($x | MilitaryUnit_NP)?", "which scientists are known for ($x | MilitaryUnit_NP)?", "which scientists were known for ($x | MilitaryUnit_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "973",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "974",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Software_NP) belonged?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Thing_NP)?", "What belongs to ($x | Thing_NP)?", "What does ($x | Thing_NP) belong to?", "What software does ($x | Thing_NP) belong to?", "What softwares does ($x | Thing_NP) belong to?", "Where does ($x | Thing_NP) belong?", "which software belonged to ($x | Thing_NP)?", "which software belongs to ($x | Thing_NP)?", "which software was belonged to ($x | Thing_NP)?", "which softwares belong to ($x | Thing_NP)?", "which softwares belonged to ($x | Thing_NP)?", "which softwares were belonged to ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares belong to ($x | Thing_NP)?", "How many softwares did ($x | Thing_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "977",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "at which educational institutions does study ($x | Person_NP)?", "which educational institution does ($x | Person_NP) study at?", "which educational institution does the ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?", "which educational institutions does the ($x | Person_NP) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | EducationalInstitution_NP) study?", "Who does ($x | EducationalInstitution_NP) study at?", "Who person does ($x | EducationalInstitution_NP) study at?", "Who persons does ($x | EducationalInstitution_NP) study at?", "Who studied at ($x | EducationalInstitution_NP)?", "Who studies at ($x | EducationalInstitution_NP)?", "which person studied at ($x | EducationalInstitution_NP)?", "which person studies at ($x | EducationalInstitution_NP)?", "which person was studied at ($x | EducationalInstitution_NP)?", "which persons studied at ($x | EducationalInstitution_NP)?", "which persons study at ($x | EducationalInstitution_NP)?", "which persons were studied at ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "979",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | EducationalInstitution_NP) study at?", "How many persons study at ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) studied?", "at which educational institution does ($x | Person_NP) study?", "at which educational institution is ($x | Person_NP) studied?", "at which educational institutions  ($x | Person_NP) study?", "at which educational institutions are ($x | Person_NP) studied?", "at which educational institutions does study ($x | Person_NP)?", "which educational institution does ($x | Person_NP) study at?", "which educational institution does the ($x | Person_NP) study at?", "which educational institutions does ($x | Person_NP) study at?", "which educational institutions does the ($x | Person_NP) study at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | EducationalInstitution_NP) study?", "Who does ($x | EducationalInstitution_NP) study at?", "Who person does ($x | EducationalInstitution_NP) study at?", "Who persons does ($x | EducationalInstitution_NP) study at?", "Who studied at ($x | EducationalInstitution_NP)?", "Who studies at ($x | EducationalInstitution_NP)?", "which person studied at ($x | EducationalInstitution_NP)?", "which person studies at ($x | EducationalInstitution_NP)?", "which person was studied at ($x | EducationalInstitution_NP)?", "which persons studied at ($x | EducationalInstitution_NP)?", "which persons study at ($x | EducationalInstitution_NP)?", "which persons were studied at ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "982",
    "lexicalEntryUri" : "http://localhost:8080#study_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | EducationalInstitution_NP) study at?", "How many persons study at ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "983",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) initially used?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/initiallyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Thing_NP) initially use for?", "What ArchitecturalStructures does ($x | Thing_NP) initially use for?", "What does ($x | Thing_NP) initially use for?", "What initially used for ($x | Thing_NP)?", "What initially uses for ($x | Thing_NP)?", "Where does ($x | Thing_NP) initially use?", "which ArchitecturalStructure initially used for ($x | Thing_NP)?", "which ArchitecturalStructure initially uses for ($x | Thing_NP)?", "which ArchitecturalStructure was initially used for ($x | Thing_NP)?", "which ArchitecturalStructures initially use for ($x | Thing_NP)?", "which ArchitecturalStructures initially used for ($x | Thing_NP)?", "which ArchitecturalStructures were initially used for ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#initially_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures did ($x | Thing_NP) initially use for?", "How many ArchitecturalStructures initially use for ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/initiallyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Politician_NP) die?", "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which city did ($x | Politician_NP) die?", "which city does ($x | Politician_NP) die in?", "which city was ($x | Politician_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all politicians that were died in ($x | City_NP)?", "Give me all politicians Who politician were died in ($x | City_NP)?", "Which people were died in ($x | City_NP)?", "Who politician was died in ($x | City_NP)?", "which politician was died in ($x | City_NP)?", "which politicians were died in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "988",
    "lexicalEntryUri" : "http://localhost:8080#die_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "989",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Writer_NP) die?", "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which place did ($x | Writer_NP) die?", "which place does ($x | Writer_NP) die in?", "which place was ($x | Writer_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all writers that were died in ($x | Place_NP)?", "Give me all writers Who writer were died in ($x | Place_NP)?", "Which people were died in ($x | Place_NP)?", "Who writer was died in ($x | Place_NP)?", "which writer was died in ($x | Place_NP)?", "which writers were died in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#die_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "992",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Software_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/computingPlatform> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) release on?", "What released on ($x | Thing_NP)?", "What releases on ($x | Thing_NP)?", "What software does ($x | Thing_NP) release on?", "What softwares does ($x | Thing_NP) release on?", "Where does ($x | Thing_NP) release?", "which software released on ($x | Thing_NP)?", "which software releases on ($x | Thing_NP)?", "which software was released on ($x | Thing_NP)?", "which softwares release on ($x | Thing_NP)?", "which softwares released on ($x | Thing_NP)?", "which softwares were released on ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "994",
    "lexicalEntryUri" : "http://localhost:8080#released_on_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares did ($x | Thing_NP) release on?", "How many softwares release on ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/computingPlatform> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "into which rivers does flow ($x | River_NP)?", "which river does ($x | River_NP) flow into?", "which river does the ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?", "which rivers does the ($x | River_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | River_NP) flow into?", "What flowed into ($x | River_NP)?", "What flows into ($x | River_NP)?", "What river does ($x | River_NP) flow into?", "What rivers does ($x | River_NP) flow into?", "Where does ($x | River_NP) flow?", "which river flowed into ($x | River_NP)?", "which river flows into ($x | River_NP)?", "which river was flown into ($x | River_NP)?", "which rivers flow into ($x | River_NP)?", "which rivers flowed into ($x | River_NP)?", "which rivers were flown into ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "997",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | River_NP) flow into?", "How many rivers flow into ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "998",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which place does ($x | BodyOfWater_NP) locate?", "in which place is ($x | BodyOfWater_NP) located?", "in which places  ($x | BodyOfWater_NP) locate?", "in which places are ($x | BodyOfWater_NP) located?", "in which places does locate ($x | BodyOfWater_NP)?", "which place does ($x | BodyOfWater_NP) locate in?", "which place does the ($x | BodyOfWater_NP) locate in?", "which places does ($x | BodyOfWater_NP) locate in?", "which places does the ($x | BodyOfWater_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Place_NP) locate in?", "What located in ($x | Place_NP)?", "What locates in ($x | Place_NP)?", "What river does ($x | Place_NP) locate in?", "What rivers does ($x | Place_NP) locate in?", "Where does ($x | Place_NP) locate?", "which river located in ($x | Place_NP)?", "which river locates in ($x | Place_NP)?", "which river was located in ($x | Place_NP)?", "which rivers locate in ($x | Place_NP)?", "which rivers located in ($x | Place_NP)?", "which rivers were located in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | Place_NP) locate in?", "How many rivers locate in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who person was died in ($x | date_NP)?", "which person was died in ($x | date_NP)?", "which persons were died in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1003",
    "lexicalEntryUri" : "http://localhost:8080#die_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1004",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Song_NP) publish?", "When did the ($x | Song_NP) publish?", "When was ($x | Song_NP) published?", "When was the ($x | Song_NP) published?", "When were ($x | Song_NP) published?", "When were the ($x | Song_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What song published on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#published_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1007",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who organization was founded on ($x | date_NP)?", "which organization was founded on ($x | date_NP)?", "which organizations were founded on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) complete?", "When did the ($x | ArchitecturalStructure_NP) complete?", "When was ($x | ArchitecturalStructure_NP) completed?", "When was the ($x | ArchitecturalStructure_NP) completed?", "When were ($x | ArchitecturalStructure_NP) completed?", "When were the ($x | ArchitecturalStructure_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure completed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1012",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Writer_NP) studied?", "in which educational institution does ($x | Writer_NP) study?", "in which educational institution is ($x | Writer_NP) studied?", "in which educational institutions  ($x | Writer_NP) study?", "in which educational institutions are ($x | Writer_NP) studied?", "in which educational institutions does study ($x | Writer_NP)?", "which educational institution does ($x | Writer_NP) study in?", "which educational institution does the ($x | Writer_NP) study in?", "which educational institutions does ($x | Writer_NP) study in?", "which educational institutions does the ($x | Writer_NP) study in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/education> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | EducationalInstitution_NP) study?", "Who does ($x | EducationalInstitution_NP) study in?", "Who studied in ($x | EducationalInstitution_NP)?", "Who studies in ($x | EducationalInstitution_NP)?", "Who writer does ($x | EducationalInstitution_NP) study in?", "Who writers does ($x | EducationalInstitution_NP) study in?", "which writer studied in ($x | EducationalInstitution_NP)?", "which writer studies in ($x | EducationalInstitution_NP)?", "which writer was studied in ($x | EducationalInstitution_NP)?", "which writers studied in ($x | EducationalInstitution_NP)?", "which writers study in ($x | EducationalInstitution_NP)?", "which writers were studied in ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1015",
    "lexicalEntryUri" : "http://localhost:8080#study_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many writers did ($x | EducationalInstitution_NP) study in?", "How many writers study in ($x | EducationalInstitution_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/education> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1016",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "in which locations does locate ($x | MilitaryUnit_NP)?", "which location does ($x | MilitaryUnit_NP) locate in?", "which location does the ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?", "which locations does the ($x | MilitaryUnit_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "What military unit does ($x | Location_NP) locate in?", "What military units does ($x | Location_NP) locate in?", "Where does ($x | Location_NP) locate?", "which military unit located in ($x | Location_NP)?", "which military unit locates in ($x | Location_NP)?", "which military unit was located in ($x | Location_NP)?", "which military units locate in ($x | Location_NP)?", "which military units located in ($x | Location_NP)?", "which military units were located in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military units did ($x | Location_NP) locate in?", "How many military units locate in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1019",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | MilitaryUnit_NP) located?", "in which location does ($x | MilitaryUnit_NP) locate?", "in which location is ($x | MilitaryUnit_NP) located?", "in which locations  ($x | MilitaryUnit_NP) locate?", "in which locations are ($x | MilitaryUnit_NP) located?", "in which locations does locate ($x | MilitaryUnit_NP)?", "which location does ($x | MilitaryUnit_NP) locate in?", "which location does the ($x | MilitaryUnit_NP) locate in?", "which locations does ($x | MilitaryUnit_NP) locate in?", "which locations does the ($x | MilitaryUnit_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) locate in?", "What located in ($x | Location_NP)?", "What locates in ($x | Location_NP)?", "What military unit does ($x | Location_NP) locate in?", "What military units does ($x | Location_NP) locate in?", "Where does ($x | Location_NP) locate?", "which military unit located in ($x | Location_NP)?", "which military unit locates in ($x | Location_NP)?", "which military unit was located in ($x | Location_NP)?", "which military units locate in ($x | Location_NP)?", "which military units located in ($x | Location_NP)?", "which military units were located in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many military units did ($x | Location_NP) locate in?", "How many military units locate in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "for which persons does compose ($x | Work_NP)?", "which person does ($x | Work_NP) compose for?", "which person does the ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?", "which persons does the ($x | Work_NP) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for ($x | Person_NP)?", "What composes for ($x | Person_NP)?", "What does ($x | Person_NP) compose for?", "What work does ($x | Person_NP) compose for?", "What works does ($x | Person_NP) compose for?", "Where does ($x | Person_NP) compose?", "which work composed for ($x | Person_NP)?", "which work composes for ($x | Person_NP)?", "which work was  for ($x | Person_NP)?", "which works compose for ($x | Person_NP)?", "which works composed for ($x | Person_NP)?", "which works were  for ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1024",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works compose for ($x | Person_NP)?", "How many works did ($x | Person_NP) compose for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1025",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which city did ($x | Person_NP) born?", "which city does ($x | Person_NP) born in?", "which city was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in ($x | City_NP)?", "Give me all persons Who person were born in ($x | City_NP)?", "Which people were born in ($x | City_NP)?", "Who person was born in ($x | City_NP)?", "which person was born in ($x | City_NP)?", "which persons were born in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#born_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1028",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | TelevisionShow_NP) release?", "When did the ($x | TelevisionShow_NP) release?", "When was ($x | TelevisionShow_NP) released?", "When was the ($x | TelevisionShow_NP) released?", "When were ($x | TelevisionShow_NP) released?", "When were the ($x | TelevisionShow_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What television show released at ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1030",
    "lexicalEntryUri" : "http://localhost:8080#released_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Band_NP) belonged?", "to which genre does ($x | Band_NP) belong?", "to which genre is ($x | Band_NP) belonged?", "to which genres  ($x | Band_NP) belong?", "to which genres are ($x | Band_NP) belonged?", "to which genres does belong ($x | Band_NP)?", "which genre does ($x | Band_NP) belong to?", "which genre does the ($x | Band_NP) belong to?", "which genres does ($x | Band_NP) belong to?", "which genres does the ($x | Band_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What band does ($x | Genre_NP) belong to?", "What bands does ($x | Genre_NP) belong to?", "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which band belonged to ($x | Genre_NP)?", "which band belongs to ($x | Genre_NP)?", "which band was belonged to ($x | Genre_NP)?", "which bands belong to ($x | Genre_NP)?", "which bands belonged to ($x | Genre_NP)?", "which bands were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1033",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands belong to ($x | Genre_NP)?", "How many bands did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1034",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | BodyOfWater_NP) located?", "in which countries are ($x | BodyOfWater_NP) located?", "in which country are the ($x | BodyOfWater_NP)?", "in which country is ($x | BodyOfWater_NP) located?", "in which country is the ($x | BodyOfWater_NP)?", "what country is ($x | BodyOfWater_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which river locate in ($x | Country_NP)?", "which rivers locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Athlete_NP) end his active career?", "When was ($x | Athlete_NP) ended his active career?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who athlete was ended his active career on ($x | date_NP)?", "which athlete was ended his active career on ($x | date_NP)?", "which athlete were ended his active career on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1039",
    "lexicalEntryUri" : "http://localhost:8080#end_career_on",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Who person did ($x | Award_NP) known for?", "Who person does ($x | Award_NP) known for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/knownFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "What award is known for ($x | Person_NP)?", "What awards was known for ($x | Person_NP)?", "which award is known for ($x | Person_NP)?", "which award was known for ($x | Person_NP)?", "which awards are known for ($x | Person_NP)?", "which awards were known for ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1042",
    "lexicalEntryUri" : "http://localhost:8080#KnownFor_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/knownFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1043",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Athlete_NP) played?", "for which sport team does ($x | Athlete_NP) play?", "for which sport team is ($x | Athlete_NP) played?", "for which sport teams  ($x | Athlete_NP) play?", "for which sport teams are ($x | Athlete_NP) played?", "for which sport teams does play ($x | Athlete_NP)?", "which sport team does ($x | Athlete_NP) play for?", "which sport team does the ($x | Athlete_NP) play for?", "which sport teams does ($x | Athlete_NP) play for?", "which sport teams does the ($x | Athlete_NP) play for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/debutTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) play?", "Who athlete does ($x | SportsTeam_NP) play for?", "Who does ($x | SportsTeam_NP) play for?", "Who played for ($x | SportsTeam_NP)?", "Who plays for ($x | SportsTeam_NP)?", "which athlete play for ($x | SportsTeam_NP)?", "which athlete played for ($x | SportsTeam_NP)?", "which athlete plays for ($x | SportsTeam_NP)?", "which athlete was played for ($x | SportsTeam_NP)?", "which athlete were played for ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#play_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete did ($x | SportsTeam_NP) play for?", "How many athlete play for ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/debutTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1046",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Swimmer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Swimmer_NP) born?", "Where is ($x | Swimmer_NP) born?", "Where was ($x | Swimmer_NP) born?", "in which city did ($x | Swimmer_NP) born?", "which city does ($x | Swimmer_NP) born in?", "which city was ($x | Swimmer_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all swimmers that were born in ($x | City_NP)?", "Give me all swimmers Who swimmer were born in ($x | City_NP)?", "Which people were born in ($x | City_NP)?", "Who swimmer was born in ($x | City_NP)?", "which swimmer was born in ($x | City_NP)?", "which swimmers were born in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Swimmer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Thing_NP) born?", "in which countries are ($x | Thing_NP) born?", "in which country are the ($x | Thing_NP)?", "in which country is ($x | Thing_NP) born?", "in which country is the ($x | Thing_NP)?", "what country is ($x | Thing_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What born in ($x | Country_NP)?", "What does ($x | Country_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1051",
    "lexicalEntryUri" : "http://localhost:8080#born_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1052",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Disease" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) died?", "from which disease does ($x | Person_NP) die?", "from which disease is ($x | Person_NP) died?", "from which diseases  ($x | Person_NP) die?", "from which diseases are ($x | Person_NP) died?", "from which diseases does die ($x | Person_NP)?", "which disease does ($x | Person_NP) die from?", "which disease does the ($x | Person_NP) die from?", "which diseases does ($x | Person_NP) die from?", "which diseases does the ($x | Person_NP) die from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/deathCause> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Disease_NP) die?", "Who died from ($x | Disease_NP)?", "Who dies from ($x | Disease_NP)?", "Who does ($x | Disease_NP) die from?", "Who person does ($x | Disease_NP) die from?", "Who persons does ($x | Disease_NP) die from?", "which person died from ($x | Disease_NP)?", "which person dies from ($x | Disease_NP)?", "which person was died from ($x | Disease_NP)?", "which persons die from ($x | Disease_NP)?", "which persons died from ($x | Disease_NP)?", "which persons were died from ($x | Disease_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#die_from_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Disease" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | Disease_NP) die from?", "How many persons die from ($x | Disease_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/deathCause> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1055",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) flown?", "through which cities  ($x | River_NP) flow?", "through which cities are ($x | River_NP) flown?", "through which cities does flow ($x | River_NP)?", "through which city does ($x | River_NP) flow?", "through which city is ($x | River_NP) flown?", "which cities does ($x | River_NP) flow through?", "which cities does the ($x | River_NP) flow through?", "which city does ($x | River_NP) flow through?", "which city does the ($x | River_NP) flow through?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) flow through?", "What flowed through ($x | City_NP)?", "What flows through ($x | City_NP)?", "What river does ($x | City_NP) flow through?", "What rivers does ($x | City_NP) flow through?", "Where does ($x | City_NP) flow?", "which river flowed through ($x | City_NP)?", "which river flows through ($x | City_NP)?", "which river was flown through ($x | City_NP)?", "which rivers flow through ($x | City_NP)?", "which rivers flowed through ($x | City_NP)?", "which rivers were flown through ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1057",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | City_NP) flow through?", "How many rivers flow through ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which musical artist does ($x | Band_NP) associate with?", "which musical artist does the ($x | Band_NP) associate with?", "which musical artists does ($x | Band_NP) associate with?", "which musical artists does the ($x | Band_NP) associate with?", "with which musical artist does ($x | Band_NP) associate?", "with which musical artist is ($x | Band_NP) associated?", "with which musical artists  ($x | Band_NP) associate?", "with which musical artists are ($x | Band_NP) associated?", "with which musical artists does associate ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedMusicalArtist> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with ($x | MusicalArtist_NP)?", "What band does ($x | MusicalArtist_NP) associate with?", "What bands does ($x | MusicalArtist_NP) associate with?", "What does ($x | MusicalArtist_NP) associate with?", "Where does ($x | MusicalArtist_NP) associate?", "which band associated with ($x | MusicalArtist_NP)?", "which band was associated with ($x | MusicalArtist_NP)?", "which bands associate with ($x | MusicalArtist_NP)?", "which bands associated with ($x | MusicalArtist_NP)?", "which bands were associated with ($x | MusicalArtist_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1060",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands associate with ($x | MusicalArtist_NP)?", "How many bands did ($x | MusicalArtist_NP) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/associatedMusicalArtist> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1061",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Actor_NP) stop acting?", "When was ($x | Actor_NP) stopped acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who actor was stopped acting on ($x | date_NP)?", "which actor was stopped acting on ($x | date_NP)?", "which actors were stopped acting on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#stop_acting_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | WrittenWork_NP) belonged?", "to which genre does ($x | WrittenWork_NP) belong?", "to which genre is ($x | WrittenWork_NP) belonged?", "to which genres  ($x | WrittenWork_NP) belong?", "to which genres are ($x | WrittenWork_NP) belonged?", "to which genres does belong ($x | WrittenWork_NP)?", "which genre does ($x | WrittenWork_NP) belong to?", "which genre does the ($x | WrittenWork_NP) belong to?", "which genres does ($x | WrittenWork_NP) belong to?", "which genres does the ($x | WrittenWork_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "What written work does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which written work belong to ($x | Genre_NP)?", "which written work belonged to ($x | Genre_NP)?", "which written work belongs to ($x | Genre_NP)?", "which written work was belonged to ($x | Genre_NP)?", "which written work were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1066",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many written work belong to ($x | Genre_NP)?", "How many written work did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/literaryGenre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1067",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Song_NP) belonged?", "to which album does ($x | Song_NP) belong?", "to which album is ($x | Song_NP) belonged?", "to which albums  ($x | Song_NP) belong?", "to which albums are ($x | Song_NP) belonged?", "to which albums does belong ($x | Song_NP)?", "which album does ($x | Song_NP) belong to?", "which album does the ($x | Song_NP) belong to?", "which albums does ($x | Song_NP) belong to?", "which albums does the ($x | Song_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/album> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Album_NP)?", "What belongs to ($x | Album_NP)?", "What does ($x | Album_NP) belong to?", "What song does ($x | Album_NP) belong to?", "What songs does ($x | Album_NP) belong to?", "Where does ($x | Album_NP) belong?", "which song belonged to ($x | Album_NP)?", "which song belongs to ($x | Album_NP)?", "which song was belonged to ($x | Album_NP)?", "which songs belong to ($x | Album_NP)?", "which songs belonged to ($x | Album_NP)?", "which songs were belonged to ($x | Album_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many songs belong to ($x | Album_NP)?", "How many songs did ($x | Album_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/album> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1070",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which politicalParties  ($x | Person_NP) belong?", "to which politicalParties are ($x | Person_NP) belonged?", "to which politicalParties does belong ($x | Person_NP)?", "to which politicalParty does ($x | Person_NP) belong?", "to which politicalParty is ($x | Person_NP) belonged?", "which politicalParties does ($x | Person_NP) belong to?", "which politicalParties does the ($x | Person_NP) belong to?", "which politicalParty does ($x | Person_NP) belong to?", "which politicalParty does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | PoliticalParty_NP) belong?", "Who belonged to ($x | PoliticalParty_NP)?", "Who belongs to ($x | PoliticalParty_NP)?", "Who does ($x | PoliticalParty_NP) belong to?", "Who person does ($x | PoliticalParty_NP) belong to?", "Who persons does ($x | PoliticalParty_NP) belong to?", "which person belonged to ($x | PoliticalParty_NP)?", "which person belongs to ($x | PoliticalParty_NP)?", "which person was belonged to ($x | PoliticalParty_NP)?", "which persons belong to ($x | PoliticalParty_NP)?", "which persons belonged to ($x | PoliticalParty_NP)?", "which persons were belonged to ($x | PoliticalParty_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1072",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | PoliticalParty_NP)?", "How many persons did ($x | PoliticalParty_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/party> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founded> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | date_NP) found?", "Who does ($x | date_NP) found in?", "Who founded in ($x | date_NP)?", "Who founds in ($x | date_NP)?", "Who organization does ($x | date_NP) found in?", "Who organizations does ($x | date_NP) found in?", "which organization founded in ($x | date_NP)?", "which organization founds in ($x | date_NP)?", "which organization was founded in ($x | date_NP)?", "which organizations found in ($x | date_NP)?", "which organizations founded in ($x | date_NP)?", "which organizations were founded in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1075",
    "lexicalEntryUri" : "http://localhost:8080#found_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many organizations did ($x | date_NP) found in?", "How many organizations found in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/founded> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1076",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Beverage_NP) discontinue?", "When did the ($x | Beverage_NP) discontinue?", "When was ($x | Beverage_NP) discontinued?", "When was the ($x | Beverage_NP) discontinued?", "When were ($x | Beverage_NP) discontinued?", "When were the ($x | Beverage_NP) discontinued?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discontinued> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What beverage discontinued on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#discontinue_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/discontinued> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When did the ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?", "When was the ($x | Beverage_NP) introduced?", "When were ($x | Beverage_NP) introduced?", "When were the ($x | Beverage_NP) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What beverage introduced in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1081",
    "lexicalEntryUri" : "http://localhost:8080#introduced_in__2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1082",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "AmericanFootballPlayer" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | AmericanFootballPlayer_NP) draft?", "When was ($x | AmericanFootballPlayer_NP) drafted?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/draftYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who american football player was drafted in ($x | date_NP)?", "which american football player was drafted in ($x | date_NP)?", "which american football players were drafted in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#draft_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "AmericanFootballPlayer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/draftYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1085",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/keyPerson> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1087",
    "lexicalEntryUri" : "http://localhost:8080#work_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/keyPerson> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Beverage_NP) related?", "to which beverage does ($x | Beverage_NP) relate?", "to which beverage is ($x | Beverage_NP) related?", "to which beverages  ($x | Beverage_NP) relate?", "to which beverages are ($x | Beverage_NP) related?", "to which beverages does relate ($x | Beverage_NP)?", "which beverage does ($x | Beverage_NP) relate to?", "which beverage does the ($x | Beverage_NP) relate to?", "which beverages does ($x | Beverage_NP) relate to?", "which beverages does the ($x | Beverage_NP) relate to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/related> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What beverage does ($x | Beverage_NP) relate to?", "What beverages does ($x | Beverage_NP) relate to?", "What does ($x | Beverage_NP) relate to?", "What is related to ($x | Beverage_NP)?", "What related to ($x | Beverage_NP)?", "Where does ($x | Beverage_NP) relate?", "which beverage is related to ($x | Beverage_NP)?", "which beverage related to ($x | Beverage_NP)?", "which beverage was related to ($x | Beverage_NP)?", "which beverages relate to ($x | Beverage_NP)?", "which beverages related to ($x | Beverage_NP)?", "which beverages were related to ($x | Beverage_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1090",
    "lexicalEntryUri" : "http://localhost:8080#relate_to_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many beverages did ($x | Beverage_NP) relate to?", "How many beverages relate to ($x | Beverage_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/related> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1091",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Bridge_NP) open?", "When did the ($x | Bridge_NP) open?", "When was ($x | Bridge_NP) opened?", "When was the ($x | Bridge_NP) opened?", "When were ($x | Bridge_NP) opened?", "When were the ($x | Bridge_NP) opened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Bridge opened on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#open_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Work_NP) ?", "for which person does ($x | Work_NP) compose?", "for which person is ($x | Work_NP) ?", "for which persons  ($x | Work_NP) compose?", "for which persons are ($x | Work_NP) ?", "for which persons does compose ($x | Work_NP)?", "which person does ($x | Work_NP) compose for?", "which person does the ($x | Work_NP) compose for?", "which persons does ($x | Work_NP) compose for?", "which persons does the ($x | Work_NP) compose for?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/music> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What composed for ($x | Person_NP)?", "What composes for ($x | Person_NP)?", "What does ($x | Person_NP) compose for?", "What work does ($x | Person_NP) compose for?", "What works does ($x | Person_NP) compose for?", "Where does ($x | Person_NP) compose?", "which work composed for ($x | Person_NP)?", "which work composes for ($x | Person_NP)?", "which work was  for ($x | Person_NP)?", "which works compose for ($x | Person_NP)?", "which works composed for ($x | Person_NP)?", "which works were  for ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1096",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works compose for ($x | Person_NP)?", "How many works did ($x | Person_NP) compose for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/music> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1097",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Place_NP) located?", "in which place are the ($x | Place_NP)?", "in which place is ($x | Place_NP) located?", "in which place is the ($x | Place_NP)?", "in which places are ($x | Place_NP) located?", "what place is ($x | Place_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Place_NP) locate in?", "What locate in ($x | Place_NP)?", "What located in ($x | Place_NP)?", "which place locate in ($x | Place_NP)?", "which places locate in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1100",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Road_NP) started?", "in which road does ($x | Road_NP) start?", "in which road is ($x | Road_NP) started?", "in which roads  ($x | Road_NP) start?", "in which roads are ($x | Road_NP) started?", "in which roads does start ($x | Road_NP)?", "which road does ($x | Road_NP) start in?", "which road does the ($x | Road_NP) start in?", "which roads does ($x | Road_NP) start in?", "which roads does the ($x | Road_NP) start in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Road_NP) start in?", "What road does ($x | Road_NP) start in?", "What roads does ($x | Road_NP) start in?", "What started in ($x | Road_NP)?", "What starts in ($x | Road_NP)?", "Where does ($x | Road_NP) start?", "which road started in ($x | Road_NP)?", "which road starts in ($x | Road_NP)?", "which road was started in ($x | Road_NP)?", "which roads start in ($x | Road_NP)?", "which roads started in ($x | Road_NP)?", "which roads were started in ($x | Road_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1102",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many roads did ($x | Road_NP) start in?", "How many roads start in ($x | Road_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are ($x | River_NP) ended?", "in which countries does end ($x | River_NP)?", "in which country does ($x | River_NP) end?", "in which country is ($x | River_NP) ended?", "which countries does ($x | River_NP) end in?", "which countries does the ($x | River_NP) end in?", "which country does ($x | River_NP) end in?", "which country does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) end in?", "What ended in ($x | Country_NP)?", "What ends in ($x | Country_NP)?", "What river does ($x | Country_NP) end in?", "What rivers does ($x | Country_NP) end in?", "Where does ($x | Country_NP) end?", "which river ended in ($x | Country_NP)?", "which river ends in ($x | Country_NP)?", "which river was ended in ($x | Country_NP)?", "which rivers end in ($x | Country_NP)?", "which rivers ended in ($x | Country_NP)?", "which rivers were ended in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1105",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | Country_NP) end in?", "How many rivers end in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1106",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) ended?", "in which location does ($x | ArchitecturalStructure_NP) end?", "in which location is ($x | ArchitecturalStructure_NP) ended?", "in which locations  ($x | ArchitecturalStructure_NP) end?", "in which locations are ($x | ArchitecturalStructure_NP) ended?", "in which locations does end ($x | ArchitecturalStructure_NP)?", "which location does ($x | ArchitecturalStructure_NP) end in?", "which location does the ($x | ArchitecturalStructure_NP) end in?", "which locations does ($x | ArchitecturalStructure_NP) end in?", "which locations does the ($x | ArchitecturalStructure_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Location_NP) end in?", "What ArchitecturalStructures does ($x | Location_NP) end in?", "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "Where does ($x | Location_NP) end?", "which ArchitecturalStructure ended in ($x | Location_NP)?", "which ArchitecturalStructure ends in ($x | Location_NP)?", "which ArchitecturalStructure was ended in ($x | Location_NP)?", "which ArchitecturalStructures end in ($x | Location_NP)?", "which ArchitecturalStructures ended in ($x | Location_NP)?", "which ArchitecturalStructures were ended in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#end_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures did ($x | Location_NP) end in?", "How many ArchitecturalStructures end in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Thing_NP) establish?", "When did the ($x | Thing_NP) establish?", "When was ($x | Thing_NP) established?", "When was the ($x | Thing_NP) established?", "When were ($x | Thing_NP) established?", "When were the ($x | Thing_NP) established?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/firstPublicationYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What periodical literature established in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1111",
    "lexicalEntryUri" : "http://localhost:8080#establish_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/firstPublicationYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Software_NP) belonged?", "to which genre does ($x | Software_NP) belong?", "to which genre is ($x | Software_NP) belonged?", "to which genres  ($x | Software_NP) belong?", "to which genres are ($x | Software_NP) belonged?", "to which genres does belong ($x | Software_NP)?", "which genre does ($x | Software_NP) belong to?", "which genre does the ($x | Software_NP) belong to?", "which genres does ($x | Software_NP) belong to?", "which genres does the ($x | Software_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "What software does ($x | Genre_NP) belong to?", "What softwares does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which software belonged to ($x | Genre_NP)?", "which software belongs to ($x | Genre_NP)?", "which software was belonged to ($x | Genre_NP)?", "which softwares belong to ($x | Genre_NP)?", "which softwares belonged to ($x | Genre_NP)?", "which softwares were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1114",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_11",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many softwares belong to ($x | Genre_NP)?", "How many softwares did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1115",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) began?", "at which countries  ($x | River_NP) begin?", "at which countries are ($x | River_NP) began?", "at which countries does begin ($x | River_NP)?", "at which country does ($x | River_NP) begin?", "at which country is ($x | River_NP) began?", "which countries does ($x | River_NP) begin at?", "which countries does the ($x | River_NP) begin at?", "which country does ($x | River_NP) begin at?", "which country does the ($x | River_NP) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source1Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at ($x | Country_NP)?", "What begins at ($x | Country_NP)?", "What does ($x | Country_NP) begin at?", "What river does ($x | Country_NP) begin at?", "What rivers does ($x | Country_NP) begin at?", "Where does ($x | Country_NP) begin?", "which river began at ($x | Country_NP)?", "which river begins at ($x | Country_NP)?", "which river was began at ($x | Country_NP)?", "which rivers began at ($x | Country_NP)?", "which rivers begin at ($x | Country_NP)?", "which rivers were began at ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers begin at ($x | Country_NP)?", "How many rivers did ($x | Country_NP) begin at?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/source1Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1118",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Song_NP) release?", "When did the ($x | Song_NP) release?", "When was ($x | Song_NP) released?", "When was the ($x | Song_NP) released?", "When were ($x | Song_NP) released?", "When were the ($x | Song_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What song released at ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#released_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Software_NP) release?", "When did the ($x | Software_NP) release?", "When was ($x | Software_NP) released?", "When was the ($x | Software_NP) released?", "When were ($x | Software_NP) released?", "When were the ($x | Software_NP) released?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What software released at ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1123",
    "lexicalEntryUri" : "http://localhost:8080#released_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/releaseDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1124",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Film_NP) starred?", "in which actor does ($x | Film_NP) star?", "in which actor is ($x | Film_NP) starred?", "in which actors  ($x | Film_NP) star?", "in which actors are ($x | Film_NP) starred?", "in which actors does star ($x | Film_NP)?", "which actor does ($x | Film_NP) star in?", "which actor does the ($x | Film_NP) star in?", "which actors does ($x | Film_NP) star in?", "which actors does the ($x | Film_NP) star in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Actor_NP) star in?", "What film does ($x | Actor_NP) star in?", "What films does ($x | Actor_NP) star in?", "What starred in ($x | Actor_NP)?", "What stars in ($x | Actor_NP)?", "Where does ($x | Actor_NP) star?", "which film starred in ($x | Actor_NP)?", "which film stars in ($x | Actor_NP)?", "which film was starred in ($x | Actor_NP)?", "which films star in ($x | Actor_NP)?", "which films starred in ($x | Actor_NP)?", "which films were starred in ($x | Actor_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#starr_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films did ($x | Actor_NP) star in?", "How many films star in ($x | Actor_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1127",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When did the ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?", "When was the ($x | ArchitecturalStructure_NP) rebuilt?", "When were ($x | ArchitecturalStructure_NP) rebuilt?", "When were the ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure rebuilt in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1129",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) began?", "at which cities  ($x | River_NP) begin?", "at which cities are ($x | River_NP) began?", "at which cities does begin ($x | River_NP)?", "at which city does ($x | River_NP) begin?", "at which city is ($x | River_NP) began?", "which cities does ($x | River_NP) begin at?", "which cities does the ($x | River_NP) begin at?", "which city does ($x | River_NP) begin at?", "which city does the ($x | River_NP) begin at?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/source2Location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What began at ($x | City_NP)?", "What begins at ($x | City_NP)?", "What does ($x | City_NP) begin at?", "What river does ($x | City_NP) begin at?", "What rivers does ($x | City_NP) begin at?", "Where does ($x | City_NP) begin?", "which river began at ($x | City_NP)?", "which river begins at ($x | City_NP)?", "which river was began at ($x | City_NP)?", "which rivers began at ($x | City_NP)?", "which rivers begin at ($x | City_NP)?", "which rivers were began at ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1132",
    "lexicalEntryUri" : "http://localhost:8080#begin_at_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers begin at ($x | City_NP)?", "How many rivers did ($x | City_NP) begin at?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/source2Location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1133",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many People live in ($x | Country_NP)?", "How many People lived in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#live_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1136",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which populated place does ($x | River_NP) end?", "in which populated place is ($x | River_NP) ended?", "in which populated places  ($x | River_NP) end?", "in which populated places are ($x | River_NP) ended?", "in which populated places does end ($x | River_NP)?", "which populated place does ($x | River_NP) end in?", "which populated place does the ($x | River_NP) end in?", "which populated places does ($x | River_NP) end in?", "which populated places does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) end in?", "What ended in ($x | PopulatedPlace_NP)?", "What ends in ($x | PopulatedPlace_NP)?", "What river does ($x | PopulatedPlace_NP) end in?", "What rivers does ($x | PopulatedPlace_NP) end in?", "Where does ($x | PopulatedPlace_NP) end?", "which river ended in ($x | PopulatedPlace_NP)?", "which river ends in ($x | PopulatedPlace_NP)?", "which river was ended in ($x | PopulatedPlace_NP)?", "which rivers end in ($x | PopulatedPlace_NP)?", "which rivers ended in ($x | PopulatedPlace_NP)?", "which rivers were ended in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | PopulatedPlace_NP) end in?", "How many rivers end in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Road_NP) ended?", "in which cities  ($x | Road_NP) end?", "in which cities are ($x | Road_NP) ended?", "in which cities does end ($x | Road_NP)?", "in which city does ($x | Road_NP) end?", "in which city is ($x | Road_NP) ended?", "which cities does ($x | Road_NP) end in?", "which cities does the ($x | Road_NP) end in?", "which city does ($x | Road_NP) end in?", "which city does the ($x | Road_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | City_NP) end in?", "What ended in ($x | City_NP)?", "What ends in ($x | City_NP)?", "What road does ($x | City_NP) end in?", "What roads does ($x | City_NP) end in?", "Where does ($x | City_NP) end?", "which road ended in ($x | City_NP)?", "which road ends in ($x | City_NP)?", "which road was ended in ($x | City_NP)?", "which roads end in ($x | City_NP)?", "which roads ended in ($x | City_NP)?", "which roads were ended in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1141",
    "lexicalEntryUri" : "http://localhost:8080#end_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many roads did ($x | City_NP) end in?", "How many roads end in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1142",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) played?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/position> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Thing_NP) play?", "Who does ($x | Thing_NP) play in?", "Who person does ($x | Thing_NP) play in?", "Who persons does ($x | Thing_NP) play in?", "Who played in ($x | Thing_NP)?", "Who plays in ($x | Thing_NP)?", "which person played in ($x | Thing_NP)?", "which person plays in ($x | Thing_NP)?", "which person was played in ($x | Thing_NP)?", "which persons play in ($x | Thing_NP)?", "which persons played in ($x | Thing_NP)?", "which persons were played in ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#play_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | Thing_NP) play in?", "How many persons play in ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/position> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1145",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which mountain locate in ($x | Country_NP)?", "which mountains locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1147",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Agent" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Settlement_NP) named?", "after which agent does ($x | Settlement_NP) name?", "after which agent is ($x | Settlement_NP) named?", "after which agents  ($x | Settlement_NP) name?", "after which agents are ($x | Settlement_NP) named?", "after which agents does name ($x | Settlement_NP)?", "which agent does ($x | Settlement_NP) name after?", "which agent does the ($x | Settlement_NP) name after?", "which agents does ($x | Settlement_NP) name after?", "which agents does the ($x | Settlement_NP) name after?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/namedAfter> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Agent_NP) name after?", "What named after ($x | Agent_NP)?", "What settlement does ($x | Agent_NP) name after?", "What settlements does ($x | Agent_NP) name after?", "Where does ($x | Agent_NP) name?", "which settlement named after ($x | Agent_NP)?", "which settlement was named after ($x | Agent_NP)?", "which settlements name after ($x | Agent_NP)?", "which settlements named after ($x | Agent_NP)?", "which settlements were named after ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1150",
    "lexicalEntryUri" : "http://localhost:8080#name_after_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many settlements did ($x | Agent_NP) name after?", "How many settlements name after ($x | Agent_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/namedAfter> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1151",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Athlete_NP) belonged?", "to which sport team does ($x | Athlete_NP) belong?", "to which sport team is ($x | Athlete_NP) belonged?", "to which sport teams  ($x | Athlete_NP) belong?", "to which sport teams are ($x | Athlete_NP) belonged?", "to which sport teams does belong ($x | Athlete_NP)?", "which sport team does ($x | Athlete_NP) belong to?", "which sport team does the ($x | Athlete_NP) belong to?", "which sport teams does ($x | Athlete_NP) belong to?", "which sport teams does the ($x | Athlete_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerTeam> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) belong?", "Who athlete does ($x | SportsTeam_NP) belong to?", "Who belonged to ($x | SportsTeam_NP)?", "Who belongs to ($x | SportsTeam_NP)?", "Who does ($x | SportsTeam_NP) belong to?", "which athlete belong to ($x | SportsTeam_NP)?", "which athlete belonged to ($x | SportsTeam_NP)?", "which athlete belongs to ($x | SportsTeam_NP)?", "which athlete was belonged to ($x | SportsTeam_NP)?", "which athlete were belonged to ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many athlete belong to ($x | SportsTeam_NP)?", "How many athlete did ($x | SportsTeam_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formerTeam> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1154",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who person was born in ($x | date_NP)?", "which person was born in ($x | date_NP)?", "which persons were born in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Bridge_NP) complete?", "When did the ($x | Bridge_NP) complete?", "When was ($x | Bridge_NP) completed?", "When was the ($x | Bridge_NP) completed?", "When were ($x | Bridge_NP) completed?", "When were the ($x | Bridge_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Bridge completed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1159",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1160",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | BodyOfWater_NP) flown?", "into which river does ($x | BodyOfWater_NP) flow?", "into which river is ($x | BodyOfWater_NP) flown?", "into which rivers  ($x | BodyOfWater_NP) flow?", "into which rivers are ($x | BodyOfWater_NP) flown?", "into which rivers does flow ($x | BodyOfWater_NP)?", "which river does ($x | BodyOfWater_NP) flow into?", "which river does the ($x | BodyOfWater_NP) flow into?", "which rivers does ($x | BodyOfWater_NP) flow into?", "which rivers does the ($x | BodyOfWater_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | BodyOfWater_NP) flow into?", "What flowed into ($x | BodyOfWater_NP)?", "What flows into ($x | BodyOfWater_NP)?", "What river does ($x | BodyOfWater_NP) flow into?", "What rivers does ($x | BodyOfWater_NP) flow into?", "Where does ($x | BodyOfWater_NP) flow?", "which river flowed into ($x | BodyOfWater_NP)?", "which river flows into ($x | BodyOfWater_NP)?", "which river was flown into ($x | BodyOfWater_NP)?", "which rivers flow into ($x | BodyOfWater_NP)?", "which rivers flowed into ($x | BodyOfWater_NP)?", "which rivers were flown into ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#flow_into_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | BodyOfWater_NP) flow into?", "How many rivers flow into ($x | BodyOfWater_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1163",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | MilitaryConflict_NP) fight?", "When did the ($x | MilitaryConflict_NP) fight?", "When was ($x | MilitaryConflict_NP) fought?", "When was the ($x | MilitaryConflict_NP) fought?", "When were ($x | MilitaryConflict_NP) fought?", "When were the ($x | MilitaryConflict_NP) fought?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What military conflict fought in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1165",
    "lexicalEntryUri" : "http://localhost:8080#fight_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Book_NP) publish?", "When did the ($x | Book_NP) publish?", "When was ($x | Book_NP) published?", "When was the ($x | Book_NP) published?", "When were ($x | Book_NP) published?", "When were the ($x | Book_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What book published on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1168",
    "lexicalEntryUri" : "http://localhost:8080#published_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1169",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) bury?", "Where is ($x | Person_NP) buried?", "Where was ($x | Person_NP) buried?", "in which city did ($x | Person_NP) bury?", "which city does ($x | Person_NP) bury in?", "which city was ($x | Person_NP) bury in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were buried in ($x | City_NP)?", "Give me all persons Who person were buried in ($x | City_NP)?", "Which people were buried in ($x | City_NP)?", "Who person was buried in ($x | City_NP)?", "which person was buried in ($x | City_NP)?", "which persons were buried in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1172",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "President" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | President_NP) born?", "When was ($x | President_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who president was born in ($x | date_NP)?", "which president was born in ($x | date_NP)?", "which presidents were born in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#born_in_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "President" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Band_NP) associated?", "which band does ($x | Band_NP) associate with?", "which band does the ($x | Band_NP) associate with?", "which bands does ($x | Band_NP) associate with?", "which bands does the ($x | Band_NP) associate with?", "with which band does ($x | Band_NP) associate?", "with which band is ($x | Band_NP) associated?", "with which bands  ($x | Band_NP) associate?", "with which bands are ($x | Band_NP) associated?", "with which bands does associate ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/associatedBand> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What associated with ($x | Band_NP)?", "What band does ($x | Band_NP) associate with?", "What bands does ($x | Band_NP) associate with?", "What does ($x | Band_NP) associate with?", "Where does ($x | Band_NP) associate?", "which band associated with ($x | Band_NP)?", "which band was associated with ($x | Band_NP)?", "which bands associate with ($x | Band_NP)?", "which bands associated with ($x | Band_NP)?", "which bands were associated with ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1177",
    "lexicalEntryUri" : "http://localhost:8080#associate_with_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many bands associate with ($x | Band_NP)?", "How many bands did ($x | Band_NP) associate with?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/associatedBand> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When did the ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?", "When was the ($x | PoliticalParty_NP) founded?", "When were ($x | PoliticalParty_NP) founded?", "When were the ($x | PoliticalParty_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What politicalParty founded in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1180",
    "lexicalEntryUri" : "http://localhost:8080#found_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1181",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "MountainRange" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Mountain_NP) belonged?", "to which mountain range does ($x | Mountain_NP) belong?", "to which mountain range is ($x | Mountain_NP) belonged?", "to which mountain ranges  ($x | Mountain_NP) belong?", "to which mountain ranges are ($x | Mountain_NP) belonged?", "to which mountain ranges does belong ($x | Mountain_NP)?", "which mountain range does ($x | Mountain_NP) belong to?", "which mountain range does the ($x | Mountain_NP) belong to?", "which mountain ranges does ($x | Mountain_NP) belong to?", "which mountain ranges does the ($x | Mountain_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mountainRange> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | MountainRange_NP)?", "What belongs to ($x | MountainRange_NP)?", "What does ($x | MountainRange_NP) belong to?", "What mountain does ($x | MountainRange_NP) belong to?", "What mountains does ($x | MountainRange_NP) belong to?", "Where does ($x | MountainRange_NP) belong?", "which mountain belonged to ($x | MountainRange_NP)?", "which mountain belongs to ($x | MountainRange_NP)?", "which mountain was belonged to ($x | MountainRange_NP)?", "which mountains belong to ($x | MountainRange_NP)?", "which mountains belonged to ($x | MountainRange_NP)?", "which mountains were belonged to ($x | MountainRange_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_8",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MountainRange" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many mountains belong to ($x | MountainRange_NP)?", "How many mountains did ($x | MountainRange_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mountainRange> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Band_NP) form?", "When did the ($x | Band_NP) form?", "When was ($x | Band_NP) formed?", "When was the ($x | Band_NP) formed?", "When were ($x | Band_NP) formed?", "When were the ($x | Band_NP) formed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What band formed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1186",
    "lexicalEntryUri" : "http://localhost:8080#form_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1187",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which cities locate in ($x | Country_NP)?", "which city locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1190",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries are ($x | City_NP) located?", "in which country are the ($x | City_NP)?", "in which country is ($x | City_NP) located?", "in which country is the ($x | City_NP)?", "what country is ($x | City_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which cities locate in ($x | Country_NP)?", "which city locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1192",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Organisation_NP) found?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who organization was founded in ($x | date_NP)?", "which organization was founded in ($x | date_NP)?", "which organizations were founded in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1195",
    "lexicalEntryUri" : "http://localhost:8080#found_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1196",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Bridge_NP) build?", "When did the ($x | Bridge_NP) build?", "When was ($x | Bridge_NP) built?", "When was the ($x | Bridge_NP) built?", "When were ($x | Bridge_NP) built?", "When were the ($x | Bridge_NP) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Bridge built in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#build_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which place does ($x | Airport_NP) locate?", "in which place is ($x | Airport_NP) located?", "in which places  ($x | Airport_NP) locate?", "in which places are ($x | Airport_NP) located?", "in which places does locate ($x | Airport_NP)?", "which place does ($x | Airport_NP) locate in?", "which place does the ($x | Airport_NP) locate in?", "which places does ($x | Airport_NP) locate in?", "which places does the ($x | Airport_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What airport does ($x | Place_NP) locate in?", "What airports does ($x | Place_NP) locate in?", "What does ($x | Place_NP) locate in?", "What located in ($x | Place_NP)?", "What locates in ($x | Place_NP)?", "Where does ($x | Place_NP) locate?", "which airport located in ($x | Place_NP)?", "which airport locates in ($x | Place_NP)?", "which airport was located in ($x | Place_NP)?", "which airports locate in ($x | Place_NP)?", "which airports located in ($x | Place_NP)?", "which airports were located in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1201",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports did ($x | Place_NP) locate in?", "How many airports locate in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1202",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Mountain_NP) located?", "in which countries are ($x | Mountain_NP) located?", "in which country are the ($x | Mountain_NP)?", "in which country is ($x | Mountain_NP) located?", "in which country is the ($x | Mountain_NP)?", "what country is ($x | Mountain_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which mountain locate in ($x | Country_NP)?", "which mountains locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1205",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Film_NP) played?", "in which person does ($x | Film_NP) play?", "in which person is ($x | Film_NP) played?", "in which persons  ($x | Film_NP) play?", "in which persons are ($x | Film_NP) played?", "in which persons does play ($x | Film_NP)?", "which person does ($x | Film_NP) play in?", "which person does the ($x | Film_NP) play in?", "which persons does ($x | Film_NP) play in?", "which persons does the ($x | Film_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Person_NP) play in?", "What film does ($x | Person_NP) play in?", "What films does ($x | Person_NP) play in?", "What played in ($x | Person_NP)?", "What plays in ($x | Person_NP)?", "Where does ($x | Person_NP) play?", "which film played in ($x | Person_NP)?", "which film plays in ($x | Person_NP)?", "which film was played in ($x | Person_NP)?", "which films play in ($x | Person_NP)?", "which films played in ($x | Person_NP)?", "which films were played in ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1207",
    "lexicalEntryUri" : "http://localhost:8080#play_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films did ($x | Person_NP) play in?", "How many films play in ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/keyPeople> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHO_WHO_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1210",
    "lexicalEntryUri" : "http://localhost:8080#work_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/keyPeople> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1211",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Ship_NP) complete?", "When did the ($x | Ship_NP) complete?", "When was ($x | Ship_NP) completed?", "When was the ($x | Ship_NP) completed?", "When were ($x | Ship_NP) completed?", "When were the ($x | Ship_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What work completed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) rebuild?", "When did the ($x | ArchitecturalStructure_NP) rebuild?", "When was ($x | ArchitecturalStructure_NP) rebuilt?", "When was the ($x | ArchitecturalStructure_NP) rebuilt?", "When were ($x | ArchitecturalStructure_NP) rebuilt?", "When were the ($x | ArchitecturalStructure_NP) rebuilt?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/rebuildingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure rebuilt on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1216",
    "lexicalEntryUri" : "http://localhost:8080#rebuild_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/rebuildingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1217",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many People live in ($x | City_NP)?", "How many People lived in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#live_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1220",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) born?", "Where is ($x | Person_NP) born?", "Where was ($x | Person_NP) born?", "in which country did ($x | Person_NP) born?", "which country does ($x | Person_NP) born in?", "which country was ($x | Person_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were born in ($x | Country_NP)?", "Give me all persons Who person were born in ($x | Country_NP)?", "Which people were born in ($x | Country_NP)?", "Who person was born in ($x | Country_NP)?", "which person was born in ($x | Country_NP)?", "which persons were born in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1222",
    "lexicalEntryUri" : "http://localhost:8080#born_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Place_NP) dissolve?", "When did the ($x | Place_NP) dissolve?", "When was ($x | Place_NP) dissolved?", "When was the ($x | Place_NP) dissolved?", "When were ($x | Place_NP) dissolved?", "When were the ($x | Place_NP) dissolved?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What place dissolved on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1225",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1226",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Band_NP) split ?", "When did the ($x | Band_NP) split ?", "When was ($x | Band_NP) splited?", "When was the ($x | Band_NP) splited?", "When were ($x | Band_NP) splited?", "When were the ($x | Band_NP) splited?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsEndYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What band splited up ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#split_up_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsEndYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Writer" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Writer_NP) die?", "Where is ($x | Writer_NP) died?", "Where was ($x | Writer_NP) died?", "in which city did ($x | Writer_NP) die?", "which city does ($x | Writer_NP) die in?", "which city was ($x | Writer_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all writers that were died in ($x | City_NP)?", "Give me all writers Who writer were died in ($x | City_NP)?", "Which people were died in ($x | City_NP)?", "Who writer was died in ($x | City_NP)?", "which writer was died in ($x | City_NP)?", "which writers were died in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1231",
    "lexicalEntryUri" : "http://localhost:8080#die_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Writer" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1232",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) belonged?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architecturalStyle> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Thing_NP) belong to?", "What ArchitecturalStructures does ($x | Thing_NP) belong to?", "What belonged to ($x | Thing_NP)?", "What belongs to ($x | Thing_NP)?", "What does ($x | Thing_NP) belong to?", "Where does ($x | Thing_NP) belong?", "which ArchitecturalStructure belonged to ($x | Thing_NP)?", "which ArchitecturalStructure belongs to ($x | Thing_NP)?", "which ArchitecturalStructure was belonged to ($x | Thing_NP)?", "which ArchitecturalStructures belong to ($x | Thing_NP)?", "which ArchitecturalStructures belonged to ($x | Thing_NP)?", "which ArchitecturalStructures were belonged to ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_17",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures belong to ($x | Thing_NP)?", "How many ArchitecturalStructures did ($x | Thing_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/architecturalStyle> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1235",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | ArchitecturalStructure_NP) currently used?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currentlyUsedFor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What ArchitecturalStructure does ($x | Thing_NP) currently use for?", "What ArchitecturalStructures does ($x | Thing_NP) currently use for?", "What currently used for ($x | Thing_NP)?", "What currently uses for ($x | Thing_NP)?", "What does ($x | Thing_NP) currently use for?", "Where does ($x | Thing_NP) currently use?", "which ArchitecturalStructure currently used for ($x | Thing_NP)?", "which ArchitecturalStructure currently uses for ($x | Thing_NP)?", "which ArchitecturalStructure was currently used for ($x | Thing_NP)?", "which ArchitecturalStructures currently use for ($x | Thing_NP)?", "which ArchitecturalStructures currently used for ($x | Thing_NP)?", "which ArchitecturalStructures were currently used for ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#currently_use_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many ArchitecturalStructures currently use for ($x | Thing_NP)?", "How many ArchitecturalStructures did ($x | Thing_NP) currently use for?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/currentlyUsedFor> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Song_NP) produce?", "When did the ($x | Song_NP) produce?", "When was ($x | Song_NP) produced?", "When was the ($x | Song_NP) produced?", "When were ($x | Song_NP) produced?", "When were the ($x | Song_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What song produced in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1240",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1241",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which band does ($x | Person_NP) belong?", "to which band is ($x | Person_NP) belonged?", "to which bands  ($x | Person_NP) belong?", "to which bands are ($x | Person_NP) belonged?", "to which bands does belong ($x | Person_NP)?", "which band does ($x | Person_NP) belong to?", "which band does the ($x | Person_NP) belong to?", "which bands does ($x | Person_NP) belong to?", "which bands does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Band_NP) belong?", "Who belonged to ($x | Band_NP)?", "Who belongs to ($x | Band_NP)?", "Who does ($x | Band_NP) belong to?", "Who person does ($x | Band_NP) belong to?", "Who persons does ($x | Band_NP) belong to?", "which person belonged to ($x | Band_NP)?", "which person belongs to ($x | Band_NP)?", "which person was belonged to ($x | Band_NP)?", "which persons belong to ($x | Band_NP)?", "which persons belonged to ($x | Band_NP)?", "which persons were belonged to ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_10",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | Band_NP)?", "How many persons did ($x | Band_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/bandMember> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1244",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Artist_NP) belonged?", "to which genre does ($x | Artist_NP) belong?", "to which genre is ($x | Artist_NP) belonged?", "to which genres  ($x | Artist_NP) belong?", "to which genres are ($x | Artist_NP) belonged?", "to which genres does belong ($x | Artist_NP)?", "which genre does ($x | Artist_NP) belong to?", "which genre does the ($x | Artist_NP) belong to?", "which genres does ($x | Artist_NP) belong to?", "which genres does the ($x | Artist_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Genre_NP) belong?", "Who artist does ($x | Genre_NP) belong to?", "Who artists does ($x | Genre_NP) belong to?", "Who belonged to ($x | Genre_NP)?", "Who belongs to ($x | Genre_NP)?", "Who does ($x | Genre_NP) belong to?", "which artist belonged to ($x | Genre_NP)?", "which artist belongs to ($x | Genre_NP)?", "which artist was belonged to ($x | Genre_NP)?", "which artists belong to ($x | Genre_NP)?", "which artists belonged to ($x | Genre_NP)?", "which artists were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1246",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Artist" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many artists belong to ($x | Genre_NP)?", "How many artists did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SpaceStation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | SpaceStation_NP) launched?", "from which airport does ($x | SpaceStation_NP) launch?", "from which airport is ($x | SpaceStation_NP) launched?", "from which airports  ($x | SpaceStation_NP) launch?", "from which airports are ($x | SpaceStation_NP) launched?", "from which airports does launch ($x | SpaceStation_NP)?", "which airport does ($x | SpaceStation_NP) launch from?", "which airport does the ($x | SpaceStation_NP) launch from?", "which airports does ($x | SpaceStation_NP) launch from?", "which airports does the ($x | SpaceStation_NP) launch from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/launchPad> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Airport_NP) launch from?", "What launched from ($x | Airport_NP)?", "What launches from ($x | Airport_NP)?", "What spaceflight does ($x | Airport_NP) launch from?", "What spaceflights does ($x | Airport_NP) launch from?", "Where does ($x | Airport_NP) launch?", "which spaceflight launched from ($x | Airport_NP)?", "which spaceflight launches from ($x | Airport_NP)?", "which spaceflight was launched from ($x | Airport_NP)?", "which spaceflights launch from ($x | Airport_NP)?", "which spaceflights launched from ($x | Airport_NP)?", "which spaceflights were launched from ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1249",
    "lexicalEntryUri" : "http://localhost:8080#launch_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "SpaceStation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many spaceflights did ($x | Airport_NP) launch from?", "How many spaceflights launch from ($x | Airport_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/launchPad> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1250",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Company_NP) produce?", "Where is ($x | Company_NP) produced?", "Where was ($x | Company_NP) produced?", "in which location did ($x | Company_NP) produce?", "which location does ($x | Company_NP) produce in?", "which location was ($x | Company_NP) produce in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all company that were produced in ($x | Location_NP)?", "Give me all company Who company were produced in ($x | Location_NP)?", "Which people were produced in ($x | Location_NP)?", "Who company was produced in ($x | Location_NP)?", "which company was produced in ($x | Location_NP)?", "which company were produced in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#produced_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/wineProduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Building_NP) complete?", "When did the ($x | Building_NP) complete?", "When was ($x | Building_NP) completed?", "When was the ($x | Building_NP) completed?", "When were ($x | Building_NP) completed?", "When were the ($x | Building_NP) completed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Building completed in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1255",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1256",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "How many had  ($x | Stadium_NP)?", "How many have  ($x | Stadium_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#Have_seat_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1259",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What grapes grew in ($x | WineRegion_NP)?", "What grapes grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which wine region does ($x | Grape_NP) grow?", "in which wine region is ($x | Grape_NP) grown?", "in which wine regions are ($x | Grape_NP) grown?", "in which wine regions does ($x | Grape_NP) grow?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1261",
    "lexicalEntryUri" : "http://localhost:8080#grow_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) live?", "Where is ($x | Person_NP) lived?", "Where was ($x | Person_NP) lived?", "in which city did ($x | Person_NP) live?", "which city does ($x | Person_NP) live in?", "which city was ($x | Person_NP) live in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were lived in ($x | City_NP)?", "Give me all persons Who person were lived in ($x | City_NP)?", "Which people were lived in ($x | City_NP)?", "Who person was lived in ($x | City_NP)?", "which person was lived in ($x | City_NP)?", "which persons were lived in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1264",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1265",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Person_NP) born?", "When was ($x | Person_NP) born?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who person was born on ($x | date_NP)?", "which person was born on ($x | date_NP)?", "which persons were born on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Infrastructure" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Infrastructure_NP) ended?", "in which location does ($x | Infrastructure_NP) end?", "in which location is ($x | Infrastructure_NP) ended?", "in which locations  ($x | Infrastructure_NP) end?", "in which locations are ($x | Infrastructure_NP) ended?", "in which locations does end ($x | Infrastructure_NP)?", "which location does ($x | Infrastructure_NP) end in?", "which location does the ($x | Infrastructure_NP) end in?", "which locations does ($x | Infrastructure_NP) end in?", "which locations does the ($x | Infrastructure_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Infrastructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "What infrastructure does ($x | Location_NP) end in?", "What infrastructures does ($x | Location_NP) end in?", "Where does ($x | Location_NP) end?", "which infrastructure ended in ($x | Location_NP)?", "which infrastructure ends in ($x | Location_NP)?", "which infrastructure was ended in ($x | Location_NP)?", "which infrastructures end in ($x | Location_NP)?", "which infrastructures ended in ($x | Location_NP)?", "which infrastructures were ended in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1270",
    "lexicalEntryUri" : "http://localhost:8080#end_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Infrastructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many infrastructures did ($x | Location_NP) end in?", "How many infrastructures end in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1271",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | MilitaryConflict_NP) commence?", "When did the ($x | MilitaryConflict_NP) commence?", "When was ($x | MilitaryConflict_NP) commenced?", "When was the ($x | MilitaryConflict_NP) commenced?", "When were ($x | MilitaryConflict_NP) commenced?", "When were the ($x | MilitaryConflict_NP) commenced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What military conflict commenced on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#commence_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1274",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Settlement_NP) located?", "in which countries are ($x | Settlement_NP) located?", "in which country are the ($x | Settlement_NP)?", "in which country is ($x | Settlement_NP) located?", "in which country is the ($x | Settlement_NP)?", "what country is ($x | Settlement_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which settlement locate in ($x | Country_NP)?", "which settlements locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1276",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | State_NP) bordered?", "in which state does ($x | State_NP) border?", "in which state is ($x | State_NP) bordered?", "in which states  ($x | State_NP) border?", "in which states are ($x | State_NP) bordered?", "in which states does border ($x | State_NP)?", "which state does ($x | State_NP) border in?", "which state does the ($x | State_NP) border in?", "which states does ($x | State_NP) border in?", "which states does the ($x | State_NP) border in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/borderingstates> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What bordered in ($x | State_NP)?", "What borders in ($x | State_NP)?", "What does ($x | State_NP) border in?", "What state does ($x | State_NP) border in?", "What states does ($x | State_NP) border in?", "Where does ($x | State_NP) border?", "which state bordered in ($x | State_NP)?", "which state borders in ($x | State_NP)?", "which state was bordered in ($x | State_NP)?", "which states border in ($x | State_NP)?", "which states bordered in ($x | State_NP)?", "which states were bordered in ($x | State_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1279",
    "lexicalEntryUri" : "http://localhost:8080#border_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "State" ],
    "returnType" : [ "State" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many states border in ($x | State_NP)?", "How many states did ($x | State_NP) border in?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/borderingstates> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1280",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Book_NP) publish?", "When did the ($x | Book_NP) publish?", "When was ($x | Book_NP) published?", "When was the ($x | Book_NP) published?", "When were ($x | Book_NP) published?", "When were the ($x | Book_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What book published in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#published_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Book" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/publicationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | MusicalWork_NP) recored?", "in which populated place does ($x | MusicalWork_NP) record?", "in which populated place is ($x | MusicalWork_NP) recored?", "in which populated places  ($x | MusicalWork_NP) record?", "in which populated places are ($x | MusicalWork_NP) recored?", "in which populated places does record ($x | MusicalWork_NP)?", "which populated place does ($x | MusicalWork_NP) record in?", "which populated place does the ($x | MusicalWork_NP) record in?", "which populated places does ($x | MusicalWork_NP) record in?", "which populated places does the ($x | MusicalWork_NP) record in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordedIn> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | PopulatedPlace_NP) record in?", "What music does ($x | PopulatedPlace_NP) record in?", "What musics does ($x | PopulatedPlace_NP) record in?", "What records in ($x | PopulatedPlace_NP)?", "What recored in ($x | PopulatedPlace_NP)?", "Where does ($x | PopulatedPlace_NP) record?", "which music records in ($x | PopulatedPlace_NP)?", "which music recored in ($x | PopulatedPlace_NP)?", "which music was recored in ($x | PopulatedPlace_NP)?", "which musics record in ($x | PopulatedPlace_NP)?", "which musics recored in ($x | PopulatedPlace_NP)?", "which musics were recored in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1285",
    "lexicalEntryUri" : "http://localhost:8080#record_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many musics did ($x | PopulatedPlace_NP) record in?", "How many musics record in ($x | PopulatedPlace_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/recordedIn> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1286",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Thing_NP) stood?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Thing_NP) stand for?", "What stands for ($x | Thing_NP)?", "What stood for ($x | Thing_NP)?", "Where does ($x | Thing_NP) stand?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#stand_for_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1289",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Actor_NP) start acting?", "When was ($x | Actor_NP) started acting?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/activeYearsStartYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who actor was started acting on ($x | date_NP)?", "which actor was started acting on ($x | date_NP)?", "which actors were started acting on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1291",
    "lexicalEntryUri" : "http://localhost:8080#start_acting_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/activeYearsStartYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Building_NP) build?", "When did the ($x | Building_NP) build?", "When was ($x | Building_NP) built?", "When was the ($x | Building_NP) built?", "When were ($x | Building_NP) built?", "When were the ($x | Building_NP) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Building built in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1294",
    "lexicalEntryUri" : "http://localhost:8080#build_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1295",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) ended?", "in which countries  ($x | River_NP) end?", "in which countries are ($x | River_NP) ended?", "in which countries does end ($x | River_NP)?", "in which country does ($x | River_NP) end?", "in which country is ($x | River_NP) ended?", "which countries does ($x | River_NP) end in?", "which countries does the ($x | River_NP) end in?", "which country does ($x | River_NP) end in?", "which country does the ($x | River_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mouthCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) end in?", "What ended in ($x | Country_NP)?", "What ends in ($x | Country_NP)?", "What river does ($x | Country_NP) end in?", "What rivers does ($x | Country_NP) end in?", "Where does ($x | Country_NP) end?", "which river ended in ($x | Country_NP)?", "which river ends in ($x | Country_NP)?", "which river was ended in ($x | Country_NP)?", "which rivers end in ($x | Country_NP)?", "which rivers ended in ($x | Country_NP)?", "which rivers were ended in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#end_in_6",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | Country_NP) end in?", "How many rivers end in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/mouthCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Work_NP) wrote?", "in which language does ($x | Work_NP) write?", "in which language is ($x | Work_NP) wrote?", "in which languages  ($x | Work_NP) write?", "in which languages are ($x | Work_NP) wrote?", "in which languages does write ($x | Work_NP)?", "which language does ($x | Work_NP) write in?", "which language does the ($x | Work_NP) write in?", "which languages does ($x | Work_NP) write in?", "which languages does the ($x | Work_NP) write in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Language_NP) write in?", "What work does ($x | Language_NP) write in?", "What works does ($x | Language_NP) write in?", "What writes in ($x | Language_NP)?", "What wrote in ($x | Language_NP)?", "Where does ($x | Language_NP) write?", "which work was wrote in ($x | Language_NP)?", "which work writes in ($x | Language_NP)?", "which work wrote in ($x | Language_NP)?", "which works were wrote in ($x | Language_NP)?", "which works write in ($x | Language_NP)?", "which works wrote in ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1300",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many works did ($x | Language_NP) write in?", "How many works write in ($x | Language_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1301",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "RouteOfTransportation" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | RouteOfTransportation_NP) ended?", "in which location does ($x | RouteOfTransportation_NP) end?", "in which location is ($x | RouteOfTransportation_NP) ended?", "in which locations  ($x | RouteOfTransportation_NP) end?", "in which locations are ($x | RouteOfTransportation_NP) ended?", "in which locations does end ($x | RouteOfTransportation_NP)?", "which location does ($x | RouteOfTransportation_NP) end in?", "which location does the ($x | RouteOfTransportation_NP) end in?", "which locations does ($x | RouteOfTransportation_NP) end in?", "which locations does the ($x | RouteOfTransportation_NP) end in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "RouteOfTransportation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Location_NP) end in?", "What ended in ($x | Location_NP)?", "What ends in ($x | Location_NP)?", "What route of transportation does ($x | Location_NP) end in?", "What routes of transportation does ($x | Location_NP) end in?", "Where does ($x | Location_NP) end?", "which route of transportation ended in ($x | Location_NP)?", "which route of transportation ends in ($x | Location_NP)?", "which route of transportation was ended in ($x | Location_NP)?", "which routes of transportation end in ($x | Location_NP)?", "which routes of transportation ended in ($x | Location_NP)?", "which routes of transportation were ended in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#end_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "RouteOfTransportation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many routes of transportation did ($x | Location_NP) end in?", "How many routes of transportation end in ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1304",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) build?", "When did the ($x | ArchitecturalStructure_NP) build?", "When was ($x | ArchitecturalStructure_NP) built?", "When was the ($x | ArchitecturalStructure_NP) built?", "When were ($x | ArchitecturalStructure_NP) built?", "When were the ($x | ArchitecturalStructure_NP) built?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/buildingStartDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure built in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#build_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/buildingStartDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Actor_NP) born?", "Where is ($x | Actor_NP) born?", "Where was ($x | Actor_NP) born?", "in which country did ($x | Actor_NP) born?", "which country does ($x | Actor_NP) born in?", "which country was ($x | Actor_NP) born in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all actors that were born in ($x | Country_NP)?", "Give me all actors Who actor were born in ($x | Country_NP)?", "Which people were born in ($x | Country_NP)?", "Who actor was born in ($x | Country_NP)?", "which actor was born in ($x | Country_NP)?", "which actors were born in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1309",
    "lexicalEntryUri" : "http://localhost:8080#born_in_5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Airport_NP) located?", "in which cities  ($x | Airport_NP) locate?", "in which cities are ($x | Airport_NP) located?", "in which cities does locate ($x | Airport_NP)?", "in which city does ($x | Airport_NP) locate?", "in which city is ($x | Airport_NP) located?", "which cities does ($x | Airport_NP) locate in?", "which cities does the ($x | Airport_NP) locate in?", "which city does ($x | Airport_NP) locate in?", "which city does the ($x | Airport_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What airport does ($x | City_NP) locate in?", "What airports does ($x | City_NP) locate in?", "What does ($x | City_NP) locate in?", "What located in ($x | City_NP)?", "What locates in ($x | City_NP)?", "Where does ($x | City_NP) locate?", "which airport located in ($x | City_NP)?", "which airport locates in ($x | City_NP)?", "which airport was located in ($x | City_NP)?", "which airports locate in ($x | City_NP)?", "which airports located in ($x | City_NP)?", "which airports were located in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1312",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Airport" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many airports did ($x | City_NP) locate in?", "How many airports locate in ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1313",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When did the ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?", "When was the ($x | ArchitecturalStructure_NP) reopened?", "When were ($x | ArchitecturalStructure_NP) reopened?", "When were the ($x | ArchitecturalStructure_NP) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure reopened in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#reopen_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1316",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When did the ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?", "When was the ($x | Settlement_NP) founded?", "When were ($x | Settlement_NP) founded?", "When were the ($x | Settlement_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What settlement founded on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) destroy?", "When did the ($x | ArchitecturalStructure_NP) destroy?", "When was ($x | ArchitecturalStructure_NP) destroyed?", "When was the ($x | ArchitecturalStructure_NP) destroyed?", "When were ($x | ArchitecturalStructure_NP) destroyed?", "When were the ($x | ArchitecturalStructure_NP) destroyed?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/demolitionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure destroyed on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1321",
    "lexicalEntryUri" : "http://localhost:8080#destroy_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/demolitionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Article" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Article_NP) publish?", "When did the ($x | Article_NP) publish?", "When was ($x | Article_NP) published?", "When was the ($x | Article_NP) published?", "When were ($x | Article_NP) published?", "When were the ($x | Article_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What article published in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1324",
    "lexicalEntryUri" : "http://localhost:8080#published_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Article" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1325",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) inaugurate?", "When did the ($x | ArchitecturalStructure_NP) inaugurate?", "When was ($x | ArchitecturalStructure_NP) inaugurated?", "When was the ($x | ArchitecturalStructure_NP) inaugurated?", "When were ($x | ArchitecturalStructure_NP) inaugurated?", "When were the ($x | ArchitecturalStructure_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure inaugurated in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Company_NP) found?", "Where is ($x | Company_NP) founded?", "Where was ($x | Company_NP) founded?", "in which country did ($x | Company_NP) found?", "which country does ($x | Company_NP) found in?", "which country was ($x | Company_NP) found in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1329",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all company that were founded in ($x | Country_NP)?", "Give me all company Who company were founded in ($x | Country_NP)?", "Which people were founded in ($x | Country_NP)?", "Who company was founded in ($x | Country_NP)?", "which company was founded in ($x | Country_NP)?", "which company were founded in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1330",
    "lexicalEntryUri" : "http://localhost:8080#found_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Company" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundationPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1331",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) played?", "in which band does ($x | Person_NP) play?", "in which band is ($x | Person_NP) played?", "in which bands  ($x | Person_NP) play?", "in which bands are ($x | Person_NP) played?", "in which bands does play ($x | Person_NP)?", "which band does ($x | Person_NP) play in?", "which band does the ($x | Person_NP) play in?", "which bands does ($x | Person_NP) play in?", "which bands does the ($x | Person_NP) play in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/member> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | Band_NP) play?", "Who does ($x | Band_NP) play in?", "Who person does ($x | Band_NP) play in?", "Who persons does ($x | Band_NP) play in?", "Who played in ($x | Band_NP)?", "Who plays in ($x | Band_NP)?", "which person played in ($x | Band_NP)?", "which person plays in ($x | Band_NP)?", "which person was played in ($x | Band_NP)?", "which persons play in ($x | Band_NP)?", "which persons played in ($x | Band_NP)?", "which persons were played in ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1333",
    "lexicalEntryUri" : "http://localhost:8080#play_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons did ($x | Band_NP) play in?", "How many persons play in ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/member> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1334",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1335",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_ACTIVITY",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1336",
    "lexicalEntryUri" : "http://localhost:8080#compose_for_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1337",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Settlement_NP) found?", "When did the ($x | Settlement_NP) found?", "When was ($x | Settlement_NP) founded?", "When was the ($x | Settlement_NP) founded?", "When were ($x | Settlement_NP) founded?", "When were the ($x | Settlement_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What settlement founded in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1339",
    "lexicalEntryUri" : "http://localhost:8080#found_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1340",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Album_NP) belonged?", "to which genre does ($x | Album_NP) belong?", "to which genre is ($x | Album_NP) belonged?", "to which genres  ($x | Album_NP) belong?", "to which genres are ($x | Album_NP) belonged?", "to which genres does belong ($x | Album_NP)?", "which genre does ($x | Album_NP) belong to?", "which genre does the ($x | Album_NP) belong to?", "which genres does ($x | Album_NP) belong to?", "which genres does the ($x | Album_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What album does ($x | Genre_NP) belong to?", "What albums does ($x | Genre_NP) belong to?", "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which album belonged to ($x | Genre_NP)?", "which album belongs to ($x | Genre_NP)?", "which album was belonged to ($x | Genre_NP)?", "which albums belong to ($x | Genre_NP)?", "which albums belonged to ($x | Genre_NP)?", "which albums were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1342",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many albums belong to ($x | Genre_NP)?", "How many albums did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1343",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Building_NP) inaugurate?", "When did the ($x | Building_NP) inaugurate?", "When was ($x | Building_NP) inaugurated?", "When was the ($x | Building_NP) inaugurated?", "When were ($x | Building_NP) inaugurated?", "When were the ($x | Building_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1344",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Building inaugurated in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1345",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Building" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1346",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Album_NP) produce?", "When did the ($x | Album_NP) produce?", "When was ($x | Album_NP) produced?", "When was the ($x | Album_NP) produced?", "When were ($x | Album_NP) produced?", "When were the ($x | Album_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1347",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What album produced on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1348",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Album" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1349",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Film_NP) produce?", "When did the ($x | Film_NP) produce?", "When was ($x | Film_NP) produced?", "When was the ($x | Film_NP) produced?", "When were ($x | Film_NP) produced?", "When were the ($x | Film_NP) produced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/productionDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What film produced on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1351",
    "lexicalEntryUri" : "http://localhost:8080#produced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/productionDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1352",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Person_NP) come?", "Where is ($x | Person_NP) come?", "Where was ($x | Person_NP) come?", "from which country did ($x | Person_NP) come?", "which country does ($x | Person_NP) come from?", "which country was ($x | Person_NP) come from?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all persons that were come from ($x | Country_NP)?", "Give me all persons Who person were come from ($x | Country_NP)?", "Which people were come from ($x | Country_NP)?", "Who person was come from ($x | Country_NP)?", "which person was come from ($x | Country_NP)?", "which persons were come from ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1354",
    "lexicalEntryUri" : "http://localhost:8080#come_from",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/nationality> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1355",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) flown?", "into which river does ($x | River_NP) flow?", "into which river is ($x | River_NP) flown?", "into which rivers  ($x | River_NP) flow?", "into which rivers are ($x | River_NP) flown?", "into which rivers does flow ($x | River_NP)?", "which river does ($x | River_NP) flow into?", "which river does the ($x | River_NP) flow into?", "which rivers does ($x | River_NP) flow into?", "which rivers does the ($x | River_NP) flow into?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/inflow> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1356",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | River_NP) flow into?", "What flowed into ($x | River_NP)?", "What flows into ($x | River_NP)?", "What river does ($x | River_NP) flow into?", "What rivers does ($x | River_NP) flow into?", "Where does ($x | River_NP) flow?", "which river flowed into ($x | River_NP)?", "which river flows into ($x | River_NP)?", "which river was flown into ($x | River_NP)?", "which rivers flow into ($x | River_NP)?", "which rivers flowed into ($x | River_NP)?", "which rivers were flown into ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1357",
    "lexicalEntryUri" : "http://localhost:8080#flow_into",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many rivers did ($x | River_NP) flow into?", "How many rivers flow into ($x | River_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/inflow> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1358",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Settlement" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Settlement_NP) belonged?", "to which place does ($x | Settlement_NP) belong?", "to which place is ($x | Settlement_NP) belonged?", "to which places  ($x | Settlement_NP) belong?", "to which places are ($x | Settlement_NP) belonged?", "to which places does belong ($x | Settlement_NP)?", "which place does ($x | Settlement_NP) belong to?", "which place does the ($x | Settlement_NP) belong to?", "which places does ($x | Settlement_NP) belong to?", "which places does the ($x | Settlement_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subdivision> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Place_NP)?", "What belongs to ($x | Place_NP)?", "What does ($x | Place_NP) belong to?", "What settlement does ($x | Place_NP) belong to?", "What settlements does ($x | Place_NP) belong to?", "Where does ($x | Place_NP) belong?", "which settlement belonged to ($x | Place_NP)?", "which settlement belongs to ($x | Place_NP)?", "which settlement was belonged to ($x | Place_NP)?", "which settlements belong to ($x | Place_NP)?", "which settlements belonged to ($x | Place_NP)?", "which settlements were belonged to ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1360",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_15",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Settlement" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many settlements belong to ($x | Place_NP)?", "How many settlements did ($x | Place_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/subdivision> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1361",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Person_NP) belonged?", "to which sport team does ($x | Person_NP) belong?", "to which sport team is ($x | Person_NP) belonged?", "to which sport teams  ($x | Person_NP) belong?", "to which sport teams are ($x | Person_NP) belonged?", "to which sport teams does belong ($x | Person_NP)?", "which sport team does ($x | Person_NP) belong to?", "which sport team does the ($x | Person_NP) belong to?", "which sport teams does ($x | Person_NP) belong to?", "which sport teams does the ($x | Person_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/team> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1362",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "Where does ($x | SportsTeam_NP) belong?", "Who belonged to ($x | SportsTeam_NP)?", "Who belongs to ($x | SportsTeam_NP)?", "Who does ($x | SportsTeam_NP) belong to?", "Who person does ($x | SportsTeam_NP) belong to?", "Who persons does ($x | SportsTeam_NP) belong to?", "which person belonged to ($x | SportsTeam_NP)?", "which person belongs to ($x | SportsTeam_NP)?", "which person was belonged to ($x | SportsTeam_NP)?", "which persons belong to ($x | SportsTeam_NP)?", "which persons belonged to ($x | SportsTeam_NP)?", "which persons were belonged to ($x | SportsTeam_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1363",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many persons belong to ($x | SportsTeam_NP)?", "How many persons did ($x | SportsTeam_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/team> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1364",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Song_NP) publish?", "When did the ($x | Song_NP) publish?", "When was ($x | Song_NP) published?", "When was the ($x | Song_NP) published?", "When were ($x | Song_NP) published?", "When were the ($x | Song_NP) published?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/published> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1365",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What song published in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1366",
    "lexicalEntryUri" : "http://localhost:8080#published_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Song" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/published> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1367",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Person_NP) die?", "When was ($x | Person_NP) died?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who person was died on ($x | date_NP)?", "which person was died on ($x | date_NP)?", "which persons were died on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1369",
    "lexicalEntryUri" : "http://localhost:8080#die_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1370",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | River_NP) originated?", "in which countries  ($x | River_NP) originate?", "in which countries are ($x | River_NP) originated?", "in which countries does originate ($x | River_NP)?", "in which country does ($x | River_NP) originate?", "in which country is ($x | River_NP) originated?", "which countries does ($x | River_NP) originate in?", "which countries does the ($x | River_NP) originate in?", "which country does ($x | River_NP) originate in?", "which country does the ($x | River_NP) originate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1371",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What does ($x | Country_NP) originate in?", "What originated in ($x | Country_NP)?", "What originates in ($x | Country_NP)?", "What stream does ($x | Country_NP) originate in?", "What streams does ($x | Country_NP) originate in?", "Where does ($x | Country_NP) originate?", "which stream originated in ($x | Country_NP)?", "which stream originates in ($x | Country_NP)?", "which stream was originated in ($x | Country_NP)?", "which streams originate in ($x | Country_NP)?", "which streams originated in ($x | Country_NP)?", "which streams were originated in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1372",
    "lexicalEntryUri" : "http://localhost:8080#originate_in_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many streams did ($x | Country_NP) originate in?", "How many streams originate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/sourceCountry> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1373",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "PoliticalParty" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | PoliticalParty_NP) found?", "When did the ($x | PoliticalParty_NP) found?", "When was ($x | PoliticalParty_NP) founded?", "When was the ($x | PoliticalParty_NP) founded?", "When were ($x | PoliticalParty_NP) founded?", "When were the ($x | PoliticalParty_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formationDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1374",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What politicalParty founded on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1375",
    "lexicalEntryUri" : "http://localhost:8080#founded_on_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PoliticalParty" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/formationDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1376",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Lake_NP) located?", "in which countries are ($x | Lake_NP) located?", "in which country are the ($x | Lake_NP)?", "in which country is ($x | Lake_NP) located?", "in which country is the ($x | Lake_NP)?", "what country is ($x | Lake_NP) in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ "What does ($x | Country_NP) locate in?", "What locate in ($x | Country_NP)?", "What located in ($x | Country_NP)?", "which lake locate in ($x | Country_NP)?", "which lakes locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1378",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1379",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | City_NP) located?", "in which countries  ($x | City_NP) locate?", "in which countries are ($x | City_NP) located?", "in which countries does locate ($x | City_NP)?", "in which country does ($x | City_NP) locate?", "in which country is ($x | City_NP) located?", "which countries does ($x | City_NP) locate in?", "which countries does the ($x | City_NP) locate in?", "which country does ($x | City_NP) locate in?", "which country does the ($x | City_NP) locate in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1380",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What cities does ($x | Country_NP) locate in?", "What city does ($x | Country_NP) locate in?", "What does ($x | Country_NP) locate in?", "What located in ($x | Country_NP)?", "What locates in ($x | Country_NP)?", "Where does ($x | Country_NP) locate?", "which cities locate in ($x | Country_NP)?", "which cities located in ($x | Country_NP)?", "which cities were located in ($x | Country_NP)?", "which city located in ($x | Country_NP)?", "which city locates in ($x | Country_NP)?", "which city was located in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1381",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many cities did ($x | Country_NP) locate in?", "How many cities locate in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1382",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Beverage" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Beverage_NP) introduce?", "When did the ($x | Beverage_NP) introduce?", "When was ($x | Beverage_NP) introduced?", "When was the ($x | Beverage_NP) introduced?", "When were ($x | Beverage_NP) introduced?", "When were the ($x | Beverage_NP) introduced?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/introduced> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What beverage introduced on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1384",
    "lexicalEntryUri" : "http://localhost:8080#introduced_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Beverage" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/introduced> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1385",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Bridge_NP) inaugurate?", "When did the ($x | Bridge_NP) inaugurate?", "When was ($x | Bridge_NP) inaugurated?", "When was the ($x | Bridge_NP) inaugurated?", "When were ($x | Bridge_NP) inaugurated?", "When were the ($x | Bridge_NP) inaugurated?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/openingDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1386",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What Bridge inaugurated in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1387",
    "lexicalEntryUri" : "http://localhost:8080#inaugurate_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/openingDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1388",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | ArchitecturalStructure_NP) reopen?", "When did the ($x | ArchitecturalStructure_NP) reopen?", "When was ($x | ArchitecturalStructure_NP) reopened?", "When was the ($x | ArchitecturalStructure_NP) reopened?", "When were ($x | ArchitecturalStructure_NP) reopened?", "When were the ($x | ArchitecturalStructure_NP) reopened?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/reopeningDate> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1389",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ "What ArchitecturalStructure reopened on ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1390",
    "lexicalEntryUri" : "http://localhost:8080#reopen_on_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/reopeningDate> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1391",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "When did ($x | Organisation_NP) find?", "When was ($x | Organisation_NP) founded?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ "Who organization was founded in ($x | date_NP)?", "which organization was founded in ($x | date_NP)?", "which organizations were founded in ($x | date_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1393",
    "lexicalEntryUri" : "http://localhost:8080#found_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1394",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1395",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Who person is called  ($x | Thing_NP)?", "Who persons was called  ($x | Thing_NP)?", "which person is called  ($x | Thing_NP)?", "which person was called  ($x | Thing_NP)?", "which persons are called  ($x | Thing_NP)?", "which persons were called  ($x | Thing_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1396",
    "lexicalEntryUri" : "http://localhost:8080#call_1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1397",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where did ($x | Politician_NP) die?", "Where is ($x | Politician_NP) died?", "Where was ($x | Politician_NP) died?", "in which place did ($x | Politician_NP) die?", "which place does ($x | Politician_NP) die in?", "which place was ($x | Politician_NP) die in?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1398",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "Give all politicians that were died in ($x | Place_NP)?", "Give me all politicians Who politician were died in ($x | Place_NP)?", "Which people were died in ($x | Place_NP)?", "Who politician was died in ($x | Place_NP)?", "which politician was died in ($x | Place_NP)?", "which politicians were died in ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1399",
    "lexicalEntryUri" : "http://localhost:8080#die_in_3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Politician" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1400",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "What grapes grew in ($x | WineRegion_NP)?", "What grapes grow in ($x | WineRegion_NP)?", "which grape grew in ($x | WineRegion_NP)?", "which grape grows in ($x | WineRegion_NP)?", "which grapes grew in ($x | WineRegion_NP)?", "which grapes grow in ($x | WineRegion_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ "in which wine region does ($x | Grape_NP) grow?", "in which wine region is ($x | Grape_NP) grown?", "in which wine regions are ($x | Grape_NP) grown?", "in which wine regions does ($x | Grape_NP) grow?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1402",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_2",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1403",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Genre" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Where is ($x | Film_NP) belonged?", "to which genre does ($x | Film_NP) belong?", "to which genre is ($x | Film_NP) belonged?", "to which genres  ($x | Film_NP) belong?", "to which genres are ($x | Film_NP) belonged?", "to which genres does belong ($x | Film_NP)?", "which genre does ($x | Film_NP) belong to?", "which genre does the ($x | Film_NP) belong to?", "which genres does ($x | Film_NP) belong to?", "which genres does the ($x | Film_NP) belong to?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/genre> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "1404",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "What belonged to ($x | Genre_NP)?", "What belongs to ($x | Genre_NP)?", "What does ($x | Genre_NP) belong to?", "What film does ($x | Genre_NP) belong to?", "What films does ($x | Genre_NP) belong to?", "Where does ($x | Genre_NP) belong?", "which film belonged to ($x | Genre_NP)?", "which film belongs to ($x | Genre_NP)?", "which film was belonged to ($x | Genre_NP)?", "which films belong to ($x | Genre_NP)?", "which films belonged to ($x | Genre_NP)?", "which films were belonged to ($x | Genre_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1405",
    "lexicalEntryUri" : "http://localhost:8080#belong_to_4",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "How many films belong to ($x | Genre_NP)?", "How many films did ($x | Genre_NP) belong to?" ],
    "sparqlQuery" : "SELECT COUNT(?Answer ) WHERE { ?Answer <http://dbpedia.org/ontology/genre> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "1406",
    "lexicalEntryUri" : null,
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}
{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte di (X).", "Dammi tutti i data di morte di (X).", "di qual data di morte è (X)?", "Elenca i data di morte di (X).", "Mostrami l' data di morte di (X).", "qual era data di morte di (X)??", "qual è data di morte di (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte di (X)?", "la data di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte di (X).", "Dammi tutti i data di morte di (X).", "di qual data di morte è (X)?", "Elenca i data di morte di (X).", "Mostrami l' data di morte di (X).", "qual era data di morte di (X)??", "qual è data di morte di (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte di (X)?", "la data di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#author_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autori di (X).", "chi era autore di (X)??", "chi erano autori di (X)??", "chi sono autori di (X)??", "chi è autore di (X)??", "Dammi la autore di (X).", "Dammi la autori di (X).", "Dammi tutti i autore di (X).", "Dammi tutti i autori di (X).", "di chi autore è (X)?", "di chi autori è (X)?", "Elenca i autore di (X).", "Elenca tutti i autori di (X).", "Mostrami l' autore di (X).", "Mostrami l' autori di (X).", "quale autore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#author_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autore di (X)?", "la autore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#numberOfSeasons-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i numero di stagioni di (X).", "Dammi la numero di stagioni di (X).", "Dammi tutti i numero di stagioni di (X).", "di chi numero di stagioni è (X)?", "Elenca tutti i numero di stagioni di (X).", "Mostrami l' numero di stagioni di (X).", "qual erano numero di stagioni di (X)??", "qual sono numero di stagioni di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfSeasons> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#budget-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autori di (X).", "Dammi la autori di (X).", "Dammi la budget di (X).", "Dammi tutti i autori di (X).", "Dammi tutti i budget di (X).", "di chi autori è (X)?", "di qual budget è (X)?", "Elenca i budget di (X).", "Elenca tutti i autori di (X).", "Mostrami l' autori di (X).", "Mostrami l' budget di (X).", "qual era budget di (X)??", "qual erano autori di (X)??", "qual sono autori di (X)??", "qual è budget di (X)??", "quale budget ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#budget-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' budget di (X)?", "la budget di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i editori di (X).", "chi era editore di (X)??", "chi erano editori di (X)??", "chi sono editori di (X)??", "chi è editore di (X)??", "Dammi la editore di (X).", "Dammi la editori di (X).", "Dammi tutti i editore di (X).", "Dammi tutti i editori di (X).", "di chi editore è (X)?", "di chi editori è (X)?", "Elenca i editore di (X).", "Elenca tutti i editori di (X).", "Mostrami l' editore di (X).", "Mostrami l' editori di (X).", "quale editore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' editore di (X)?", "la editore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i editori di (X).", "chi era editore di (X)??", "chi erano editori di (X)??", "chi sono editori di (X)??", "chi è editore di (X)??", "Dammi la editore di (X).", "Dammi la editori di (X).", "Dammi tutti i editore di (X).", "Dammi tutti i editori di (X).", "di chi editore è (X)?", "di chi editori è (X)?", "Elenca i editore di (X).", "Elenca tutti i editori di (X).", "Mostrami l' editore di (X).", "Mostrami l' editori di (X).", "quale editore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' editore di (X)?", "la editore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i editori di (X).", "chi era editore di (X)??", "chi erano editori di (X)??", "chi sono editori di (X)??", "chi è editore di (X)??", "Dammi la editore di (X).", "Dammi la editori di (X).", "Dammi tutti i editore di (X).", "Dammi tutti i editori di (X).", "di chi editore è (X)?", "di chi editori è (X)?", "Elenca i editore di (X).", "Elenca tutti i editori di (X).", "Mostrami l' editore di (X).", "Mostrami l' editori di (X).", "quale editore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#editor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' editore di (X)?", "la editore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " chi lealtà è (X)?", " i lealtà  (X).", " qual lealtà è (X)?", "Dammi la lealtà  (X).", "Dammi tutti i lealtà  (X).", "Elenca i lealtà  (X).", "Elenca tutti i lealtà  (X).", "Mostrami l' lealtà  (X).", "qual era lealtà  (X)??", "qual erano lealtà  (X)??", "qual sono lealtà  (X)??", "qual è lealtà  (X)??", "quale lealtà ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lealtà  (X)?", "la lealtà  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " chi lealtà è (X)?", " i lealtà  (X).", " qual lealtà è (X)?", "Dammi la lealtà  (X).", "Dammi tutti i lealtà  (X).", "Elenca i lealtà  (X).", "Elenca tutti i lealtà  (X).", "Mostrami l' lealtà  (X).", "qual era lealtà  (X)??", "qual erano lealtà  (X)??", "qual sono lealtà  (X)??", "qual è lealtà  (X)??", "quale lealtà ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#loyalty",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Loyalty" ],
    "returnType" : [ "Color" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lealtà  (X)?", "la lealtà  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era alter ego di (X)??", "chi è alter ego di (X)??", "Dammi la alter ego di (X).", "Dammi tutti i alter ego di (X).", "di chi alter ego è (X)?", "Elenca i alter ego di (X).", "Mostrami l' alter ego di (X).", "quale alter ego ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#alterEgo-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' alter ego di (X)?", "la alter ego di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#height_of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Tower" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#height_of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Tower" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#king",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era re di (X)??", "chi è re di (X)??", "Dammi la re di (X).", "Dammi tutti i re di (X).", "di chi re è (X)?", "Elenca i re di (X).", "Mostrami l' re di (X).", "quale re ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#king",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' re di (X)?", "la re di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#revenue-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la reddito di (X).", "Dammi tutti i reddito di (X).", "di qual reddito è (X)?", "Elenca i reddito di (X).", "Mostrami l' reddito di (X).", "qual era reddito di (X)??", "qual è reddito di (X)??", "quale reddito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/revenue> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#revenue-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' reddito di (X)?", "la reddito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/revenue> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era sindaco di (X)??", "chi è sindaco di (X)??", "Dammi la sindaco di (X).", "Dammi tutti i sindaco di (X).", "di chi sindaco è (X)?", "Elenca i sindaco di (X).", "Mostrami l' sindaco di (X).", "quale sindaco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sindaco di (X)?", "la sindaco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#almaMater-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i case di distribuzione di (X).", "Dammi la case di distribuzione di (X).", "Dammi la università di (X).", "Dammi tutti i case di distribuzione di (X).", "Dammi tutti i università di (X).", "di chi case di distribuzione è (X)?", "di qual università è (X)?", "Elenca i università di (X).", "Elenca tutti i case di distribuzione di (X).", "Mostrami l' case di distribuzione di (X).", "Mostrami l' università di (X).", "qual era università di (X)??", "qual erano case di distribuzione di (X)??", "qual sono case di distribuzione di (X)??", "qual è università di (X)??", "quale università ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#almaMater-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "EducationalInstitution" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' università di (X)?", "la università di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte di (X).", "Dammi tutti i data di morte di (X).", "di qual data di morte è (X)?", "Elenca i data di morte di (X).", "Mostrami l' data di morte di (X).", "qual era data di morte di (X)??", "qual è data di morte di (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte di (X)?", "la data di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte di (X).", "Dammi tutti i data di morte di (X).", "di qual data di morte è (X)?", "Elenca i data di morte di (X).", "Mostrami l' data di morte di (X).", "qual era data di morte di (X)??", "qual è data di morte di (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte di (X)?", "la data di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i lingue ufficiali di (X).", "Dammi la lingua ufficiale di (X).", "Dammi la lingue ufficiali di (X).", "Dammi tutti i lingua ufficiale di (X).", "Dammi tutti i lingue ufficiali di (X).", "di chi lingue ufficiali è (X)?", "di qual lingua ufficiale è (X)?", "Elenca i lingua ufficiale di (X).", "Elenca tutti i lingue ufficiali di (X).", "Mostrami l' lingua ufficiale di (X).", "Mostrami l' lingue ufficiali di (X).", "qual era lingua ufficiale di (X)??", "qual erano lingue ufficiali di (X)??", "qual sono lingue ufficiali di (X)??", "qual è lingua ufficiale di (X)??", "quale lingua ufficiale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lingua ufficiale di (X)?", "la lingua ufficiale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i lingue ufficiali di (X).", "Dammi la lingua ufficiale di (X).", "Dammi la lingue ufficiali di (X).", "Dammi tutti i lingua ufficiale di (X).", "Dammi tutti i lingue ufficiali di (X).", "di chi lingue ufficiali è (X)?", "di qual lingua ufficiale è (X)?", "Elenca i lingua ufficiale di (X).", "Elenca tutti i lingue ufficiali di (X).", "Mostrami l' lingua ufficiale di (X).", "Mostrami l' lingue ufficiali di (X).", "qual era lingua ufficiale di (X)??", "qual erano lingue ufficiali di (X)??", "qual sono lingue ufficiali di (X)??", "qual è lingua ufficiale di (X)??", "quale lingua ufficiale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lingua ufficiale di (X)?", "la lingua ufficiale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i linguaggi di programmazione di (X).", "Dammi la linguaggi di programmazione di (X).", "Dammi la linguaggio di programmazione di (X).", "Dammi tutti i linguaggi di programmazione di (X).", "Dammi tutti i linguaggio di programmazione di (X).", "di chi linguaggi di programmazione è (X)?", "di qual linguaggio di programmazione è (X)?", "Elenca i linguaggio di programmazione di (X).", "Elenca tutti i linguaggi di programmazione di (X).", "Mostrami l' linguaggi di programmazione di (X).", "Mostrami l' linguaggio di programmazione di (X).", "qual era linguaggio di programmazione di (X)??", "qual erano linguaggi di programmazione di (X)??", "qual sono linguaggi di programmazione di (X)??", "qual è linguaggio di programmazione di (X)??", "quale linguaggio di programmazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' linguaggio di programmazione di (X)?", "la linguaggio di programmazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i linguaggi di programmazione di (X).", "Dammi la linguaggi di programmazione di (X).", "Dammi la linguaggio di programmazione di (X).", "Dammi tutti i linguaggi di programmazione di (X).", "Dammi tutti i linguaggio di programmazione di (X).", "di chi linguaggi di programmazione è (X)?", "di qual linguaggio di programmazione è (X)?", "Elenca i linguaggio di programmazione di (X).", "Elenca tutti i linguaggi di programmazione di (X).", "Mostrami l' linguaggi di programmazione di (X).", "Mostrami l' linguaggio di programmazione di (X).", "qual era linguaggio di programmazione di (X)??", "qual erano linguaggi di programmazione di (X)??", "qual sono linguaggi di programmazione di (X)??", "qual è linguaggio di programmazione di (X)??", "quale linguaggio di programmazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#programmingLanguage_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' linguaggio di programmazione di (X)?", "la linguaggio di programmazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di sepoltura di (X).", "Dammi tutti i luogo di sepoltura di (X).", "di qual luogo di sepoltura è (X)?", "Elenca i luogo di sepoltura di (X).", "Mostrami l' luogo di sepoltura di (X).", "qual era luogo di sepoltura di (X)??", "qual è luogo di sepoltura di (X)??", "quale luogo di sepoltura ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di sepoltura di (X)?", "la luogo di sepoltura di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di sepoltura di (X).", "Dammi tutti i luogo di sepoltura di (X).", "di qual luogo di sepoltura è (X)?", "Elenca i luogo di sepoltura di (X).", "Mostrami l' luogo di sepoltura di (X).", "qual era luogo di sepoltura di (X)??", "qual è luogo di sepoltura di (X)??", "quale luogo di sepoltura ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di sepoltura di (X)?", "la luogo di sepoltura di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di sepoltura di (X).", "Dammi tutti i luogo di sepoltura di (X).", "di qual luogo di sepoltura è (X)?", "Elenca i luogo di sepoltura di (X).", "Mostrami l' luogo di sepoltura di (X).", "qual era luogo di sepoltura di (X)??", "qual è luogo di sepoltura di (X)??", "quale luogo di sepoltura ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#restingPlace-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di sepoltura di (X)?", "la luogo di sepoltura di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#showJudge-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era giudice di (X)??", "chi è giudice di (X)??", "Dammi la giudice di (X).", "Dammi tutti i giudice di (X).", "di chi giudice è (X)?", "Elenca i giudice di (X).", "Mostrami l' giudice di (X).", "quale giudice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/showJudge> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#showJudge-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' giudice di (X)?", "la giudice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/showJudge> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i tutor di dottorato di (X).", "chi era tutor di dottorato di (X)??", "chi erano tutor di dottorato di (X)??", "chi sono tutor di dottorato di (X)??", "chi è tutor di dottorato di (X)??", "Dammi la tutor di dottorato di (X).", "Dammi tutti i tutor di dottorato di (X).", "di chi tutor di dottorato è (X)?", "Elenca i tutor di dottorato di (X).", "Elenca tutti i tutor di dottorato di (X).", "Mostrami l' tutor di dottorato di (X).", "quale tutor di dottorato ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' tutor di dottorato di (X)?", "la tutor di dottorato di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i tutor di dottorato di (X).", "chi era tutor di dottorato di (X)??", "chi erano tutor di dottorato di (X)??", "chi sono tutor di dottorato di (X)??", "chi è tutor di dottorato di (X)??", "Dammi la tutor di dottorato di (X).", "Dammi tutti i tutor di dottorato di (X).", "di chi tutor di dottorato è (X)?", "Elenca i tutor di dottorato di (X).", "Elenca tutti i tutor di dottorato di (X).", "Mostrami l' tutor di dottorato di (X).", "quale tutor di dottorato ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' tutor di dottorato di (X)?", "la tutor di dottorato di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i tutor di dottorato di (X).", "chi era tutor di dottorato di (X)??", "chi erano tutor di dottorato di (X)??", "chi sono tutor di dottorato di (X)??", "chi è tutor di dottorato di (X)??", "Dammi la tutor di dottorato di (X).", "Dammi tutti i tutor di dottorato di (X).", "di chi tutor di dottorato è (X)?", "Elenca i tutor di dottorato di (X).", "Elenca tutti i tutor di dottorato di (X).", "Mostrami l' tutor di dottorato di (X).", "quale tutor di dottorato ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#doctoralSupervisor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' tutor di dottorato di (X)?", "la tutor di dottorato di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "chi era produttore di (X)??", "chi erano produttori di (X)??", "chi sono produttori di (X)??", "chi è produttore di (X)??", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttore è (X)?", "di chi produttori è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "chi era produttore di (X)??", "chi erano produttori di (X)??", "chi sono produttori di (X)??", "chi è produttore di (X)??", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttore è (X)?", "di chi produttori è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "chi era produttore di (X)??", "chi erano produttori di (X)??", "chi sono produttori di (X)??", "chi è produttore di (X)??", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttore è (X)?", "di chi produttori è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#producer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#length_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i nemici di (X).", "Dammi la lunghezza di (X).", "Dammi la nemici di (X).", "Dammi tutti i lunghezza di (X).", "Dammi tutti i nemici di (X).", "di chi nemici è (X)?", "di qual lunghezza è (X)?", "Elenca i lunghezza di (X).", "Elenca tutti i nemici di (X).", "Mostrami l' lunghezza di (X).", "Mostrami l' nemici di (X).", "qual era lunghezza di (X)??", "qual erano nemici di (X)??", "qual sono nemici di (X)??", "qual è lunghezza di (X)??", "quale lunghezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#length_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "River" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lunghezza di (X)?", "la lunghezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#citiesOf",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i città di (X).", "Dammi la città di (X).", "Dammi tutti i città di (X).", "di chi città è (X)?", "Elenca tutti i città di (X).", "Mostrami l' città di (X).", "qual erano città di (X)??", "qual sono città di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i presentatori di (X).", "chi era presentatore di (X)??", "chi erano presentatori di (X)??", "chi sono presentatori di (X)??", "chi è presentatore di (X)??", "Dammi la presentatore di (X).", "Dammi la presentatori di (X).", "Dammi tutti i presentatore di (X).", "Dammi tutti i presentatori di (X).", "di chi presentatore è (X)?", "di chi presentatori è (X)?", "Elenca i presentatore di (X).", "Elenca tutti i presentatori di (X).", "Mostrami l' presentatore di (X).", "Mostrami l' presentatori di (X).", "quale presentatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presentatore di (X)?", "la presentatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i presentatori di (X).", "chi era presentatore di (X)??", "chi erano presentatori di (X)??", "chi sono presentatori di (X)??", "chi è presentatore di (X)??", "Dammi la presentatore di (X).", "Dammi la presentatori di (X).", "Dammi tutti i presentatore di (X).", "Dammi tutti i presentatori di (X).", "di chi presentatore è (X)?", "di chi presentatori è (X)?", "Elenca i presentatore di (X).", "Elenca tutti i presentatori di (X).", "Mostrami l' presentatore di (X).", "Mostrami l' presentatori di (X).", "quale presentatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presentatore di (X)?", "la presentatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i presentatori di (X).", "chi era presentatore di (X)??", "chi erano presentatori di (X)??", "chi sono presentatori di (X)??", "chi è presentatore di (X)??", "Dammi la presentatore di (X).", "Dammi la presentatori di (X).", "Dammi tutti i presentatore di (X).", "Dammi tutti i presentatori di (X).", "di chi presentatore è (X)?", "di chi presentatori è (X)?", "Elenca i presentatore di (X).", "Elenca tutti i presentatori di (X).", "Mostrami l' presentatore di (X).", "Mostrami l' presentatori di (X).", "quale presentatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#host_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presentatore di (X)?", "la presentatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la posizione di (X).", "Dammi tutti i posizione di (X).", "di qual posizione è (X)?", "Elenca i posizione di (X).", "Mostrami l' posizione di (X).", "qual era posizione di (X)??", "qual è posizione di (X)??", "quale posizione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' posizione di (X)?", "la posizione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la posizione di (X).", "Dammi tutti i posizione di (X).", "di qual posizione è (X)?", "Elenca i posizione di (X).", "Mostrami l' posizione di (X).", "qual era posizione di (X)??", "qual è posizione di (X)??", "quale posizione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' posizione di (X)?", "la posizione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i residenze di (X).", "chi era residenza di (X)??", "chi erano residenze di (X)??", "chi sono residenze di (X)??", "chi è residenza di (X)??", "Dammi la residenza di (X).", "Dammi la residenze di (X).", "Dammi tutti i residenza di (X).", "Dammi tutti i residenze di (X).", "di chi residenza è (X)?", "di chi residenze è (X)?", "Elenca i residenza di (X).", "Elenca tutti i residenze di (X).", "Mostrami l' residenza di (X).", "Mostrami l' residenze di (X).", "quale residenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' residenza di (X)?", "la residenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i residenze di (X).", "chi era residenza di (X)??", "chi erano residenze di (X)??", "chi sono residenze di (X)??", "chi è residenza di (X)??", "Dammi la residenza di (X).", "Dammi la residenze di (X).", "Dammi tutti i residenza di (X).", "Dammi tutti i residenze di (X).", "di chi residenza è (X)?", "di chi residenze è (X)?", "Elenca i residenza di (X).", "Elenca tutti i residenze di (X).", "Mostrami l' residenza di (X).", "Mostrami l' residenze di (X).", "quale residenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' residenza di (X)?", "la residenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i residenze di (X).", "chi era residenza di (X)??", "chi erano residenze di (X)??", "chi sono residenze di (X)??", "chi è residenza di (X)??", "Dammi la residenza di (X).", "Dammi la residenze di (X).", "Dammi tutti i residenza di (X).", "Dammi tutti i residenze di (X).", "di chi residenza è (X)?", "di chi residenze è (X)?", "Elenca i residenza di (X).", "Elenca tutti i residenze di (X).", "Mostrami l' residenza di (X).", "Mostrami l' residenze di (X).", "quale residenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#residence-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' residenza di (X)?", "la residenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#postalCode-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la codice postale di (X).", "Dammi tutti i codice postale di (X).", "di qual codice postale è (X)?", "Elenca i codice postale di (X).", "Mostrami l' codice postale di (X).", "qual era codice postale di (X)??", "qual è codice postale di (X)??", "quale codice postale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#postalCode-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' codice postale di (X)?", "la codice postale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/postalCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#race_driver_with",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i piloti con (X).", "chi era pilota con (X)??", "chi erano piloti con (X)??", "chi sono piloti con (X)??", "chi è pilota con (X)??", "con chi pilota è (X)?", "con chi piloti è (X)?", "Dammi la pilota con (X).", "Dammi la piloti con (X).", "Dammi tutti i pilota con (X).", "Dammi tutti i piloti con (X).", "Elenca i pilota con (X).", "Elenca tutti i piloti con (X).", "Mostrami l' pilota con (X).", "Mostrami l' piloti con (X).", "quale pilota ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/races> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#race_driver_with",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' pilota con (X)?", "la pilota con (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/races> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#race_driver_with",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i piloti con (X).", "chi era pilota con (X)??", "chi erano piloti con (X)??", "chi sono piloti con (X)??", "chi è pilota con (X)??", "con chi pilota è (X)?", "con chi piloti è (X)?", "Dammi la pilota con (X).", "Dammi la piloti con (X).", "Dammi tutti i pilota con (X).", "Dammi tutti i piloti con (X).", "Elenca i pilota con (X).", "Elenca tutti i piloti con (X).", "Mostrami l' pilota con (X).", "Mostrami l' piloti con (X).", "quale pilota ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/races> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#race_driver_with",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' pilota con (X)?", "la pilota con (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/races> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#electoralDistrict-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la distretto elettorale di (X).", "Dammi tutti i distretto elettorale di (X).", "di qual distretto elettorale è (X)?", "Elenca i distretto elettorale di (X).", "Mostrami l' distretto elettorale di (X).", "qual era distretto elettorale di (X)??", "qual è distretto elettorale di (X)??", "quale distretto elettorale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/region> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#electoralDistrict-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' distretto elettorale di (X)?", "la distretto elettorale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/region> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#founder-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatori di (X).", "chi era fondatore di (X)??", "chi erano fondatori di (X)??", "chi sono fondatori di (X)??", "chi è fondatore di (X)??", "Dammi la fondatore di (X).", "Dammi la fondatori di (X).", "Dammi tutti i fondatore di (X).", "Dammi tutti i fondatori di (X).", "di chi fondatore è (X)?", "di chi fondatori è (X)?", "Elenca i fondatore di (X).", "Elenca tutti i fondatori di (X).", "Mostrami l' fondatore di (X).", "Mostrami l' fondatori di (X).", "quale fondatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#founder-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatore di (X)?", "la fondatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la quartier generale di (X).", "Dammi tutti i quartier generale di (X).", "di qual quartier generale è (X)?", "Elenca i quartier generale di (X).", "Mostrami l' quartier generale di (X).", "qual era quartier generale di (X)??", "qual è quartier generale di (X)??", "quale quartier generale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' quartier generale di (X)?", "la quartier generale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la quartier generale di (X).", "Dammi tutti i quartier generale di (X).", "di qual quartier generale è (X)?", "Elenca i quartier generale di (X).", "Mostrami l' quartier generale di (X).", "qual era quartier generale di (X)??", "qual è quartier generale di (X)??", "quale quartier generale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' quartier generale di (X)?", "la quartier generale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la quartier generale di (X).", "Dammi tutti i quartier generale di (X).", "di qual quartier generale è (X)?", "Elenca i quartier generale di (X).", "Mostrami l' quartier generale di (X).", "qual era quartier generale di (X)??", "qual è quartier generale di (X)??", "quale quartier generale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#headquarter_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' quartier generale di (X)?", "la quartier generale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la prefisso di (X).", "Dammi tutti i prefisso di (X).", "di qual prefisso è (X)?", "Elenca i prefisso di (X).", "Mostrami l' prefisso di (X).", "qual era prefisso di (X)??", "qual è prefisso di (X)??", "quale prefisso ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' prefisso di (X)?", "la prefisso di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la prefisso di (X).", "Dammi tutti i prefisso di (X).", "di qual prefisso è (X)?", "Elenca i prefisso di (X).", "Mostrami l' prefisso di (X).", "qual era prefisso di (X)??", "qual è prefisso di (X)??", "quale prefisso ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' prefisso di (X)?", "la prefisso di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la prefisso di (X).", "Dammi tutti i prefisso di (X).", "di qual prefisso è (X)?", "Elenca i prefisso di (X).", "Mostrami l' prefisso di (X).", "qual era prefisso di (X)??", "qual è prefisso di (X)??", "quale prefisso ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#areaCode_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' prefisso di (X)?", "la prefisso di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#politicalLeader-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i leader politici di (X).", "Dammi la leader politici di (X).", "Dammi la leader politico di (X).", "Dammi tutti i leader politici di (X).", "Dammi tutti i leader politico di (X).", "di chi leader politici è (X)?", "di qual leader politico è (X)?", "Elenca i leader politico di (X).", "Elenca tutti i leader politici di (X).", "Mostrami l' leader politici di (X).", "Mostrami l' leader politico di (X).", "qual era leader politico di (X)??", "qual erano leader politici di (X)??", "qual sono leader politici di (X)??", "qual è leader politico di (X)??", "quale leader politico ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/politicalLeader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#politicalLeader-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' leader politico di (X)?", "la leader politico di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/politicalLeader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di sedi di (X).", "Dammi tutti i numero di sedi di (X).", "di qual numero di sedi è (X)?", "Elenca i numero di sedi di (X).", "Mostrami l' numero di sedi di (X).", "qual era numero di sedi di (X)??", "qual è numero di sedi di (X)??", "quale numero di sedi ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di sedi di (X)?", "la numero di sedi di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di sedi di (X).", "Dammi tutti i numero di sedi di (X).", "di qual numero di sedi è (X)?", "Elenca i numero di sedi di (X).", "Mostrami l' numero di sedi di (X).", "qual era numero di sedi di (X)??", "qual è numero di sedi di (X)??", "quale numero di sedi ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#number_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di sedi di (X)?", "la numero di sedi di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfLocations> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#netIncome-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cittadinanze di (X).", "Dammi la cittadinanze di (X).", "Dammi la reddito netto di (X).", "Dammi tutti i cittadinanze di (X).", "Dammi tutti i reddito netto di (X).", "di chi cittadinanze è (X)?", "di qual reddito netto è (X)?", "Elenca i reddito netto di (X).", "Elenca tutti i cittadinanze di (X).", "Mostrami l' cittadinanze di (X).", "Mostrami l' reddito netto di (X).", "qual era reddito netto di (X)??", "qual erano cittadinanze di (X)??", "qual sono cittadinanze di (X)??", "qual è reddito netto di (X)??", "quale reddito netto ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#netIncome-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' reddito netto di (X)?", "la reddito netto di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/netIncome> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i compositori musicali di (X).", "chi era compositore musicale di (X)??", "chi erano compositori musicali di (X)??", "chi sono compositori musicali di (X)??", "chi è compositore musicale di (X)??", "Dammi la compositore musicale di (X).", "Dammi la compositori musicali di (X).", "Dammi tutti i compositore musicale di (X).", "Dammi tutti i compositori musicali di (X).", "di chi compositore musicale è (X)?", "di chi compositori musicali è (X)?", "Elenca i compositore musicale di (X).", "Elenca tutti i compositori musicali di (X).", "Mostrami l' compositore musicale di (X).", "Mostrami l' compositori musicali di (X).", "quale compositore musicale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' compositore musicale di (X)?", "la compositore musicale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i compositori musicali di (X).", "chi era compositore musicale di (X)??", "chi erano compositori musicali di (X)??", "chi sono compositori musicali di (X)??", "chi è compositore musicale di (X)??", "Dammi la compositore musicale di (X).", "Dammi la compositori musicali di (X).", "Dammi tutti i compositore musicale di (X).", "Dammi tutti i compositori musicali di (X).", "di chi compositore musicale è (X)?", "di chi compositori musicali è (X)?", "Elenca i compositore musicale di (X).", "Elenca tutti i compositori musicali di (X).", "Mostrami l' compositore musicale di (X).", "Mostrami l' compositori musicali di (X).", "quale compositore musicale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' compositore musicale di (X)?", "la compositore musicale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i compositori musicali di (X).", "chi era compositore musicale di (X)??", "chi erano compositori musicali di (X)??", "chi sono compositori musicali di (X)??", "chi è compositore musicale di (X)??", "Dammi la compositore musicale di (X).", "Dammi la compositori musicali di (X).", "Dammi tutti i compositore musicale di (X).", "Dammi tutti i compositori musicali di (X).", "di chi compositore musicale è (X)?", "di chi compositori musicali è (X)?", "Elenca i compositore musicale di (X).", "Elenca tutti i compositori musicali di (X).", "Mostrami l' compositore musicale di (X).", "Mostrami l' compositori musicali di (X).", "quale compositore musicale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#musicComposer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' compositore musicale di (X)?", "la compositore musicale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i ingredienti di (X).", "Dammi la ingrediente di (X).", "Dammi la ingredienti di (X).", "Dammi tutti i ingrediente di (X).", "Dammi tutti i ingredienti di (X).", "di chi ingredienti è (X)?", "di qual ingrediente è (X)?", "Elenca i ingrediente di (X).", "Elenca tutti i ingredienti di (X).", "Mostrami l' ingrediente di (X).", "Mostrami l' ingredienti di (X).", "qual era ingrediente di (X)??", "qual erano ingredienti di (X)??", "qual sono ingredienti di (X)??", "qual è ingrediente di (X)??", "quale ingrediente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ingrediente di (X)?", "la ingrediente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i ingredienti di (X).", "Dammi la ingrediente di (X).", "Dammi la ingredienti di (X).", "Dammi tutti i ingrediente di (X).", "Dammi tutti i ingredienti di (X).", "di chi ingredienti è (X)?", "di qual ingrediente è (X)?", "Elenca i ingrediente di (X).", "Elenca tutti i ingredienti di (X).", "Mostrami l' ingrediente di (X).", "Mostrami l' ingredienti di (X).", "qual era ingrediente di (X)??", "qual erano ingredienti di (X)??", "qual sono ingredienti di (X)??", "qual è ingrediente di (X)??", "quale ingrediente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ingrediente di (X)?", "la ingrediente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i ingredienti di (X).", "Dammi la ingrediente di (X).", "Dammi la ingredienti di (X).", "Dammi tutti i ingrediente di (X).", "Dammi tutti i ingredienti di (X).", "di chi ingredienti è (X)?", "di qual ingrediente è (X)?", "Elenca i ingrediente di (X).", "Elenca tutti i ingredienti di (X).", "Mostrami l' ingrediente di (X).", "Mostrami l' ingredienti di (X).", "qual era ingrediente di (X)??", "qual erano ingredienti di (X)??", "qual sono ingredienti di (X)??", "qual è ingrediente di (X)??", "quale ingrediente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#ingredient_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ingrediente di (X)?", "la ingrediente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i città di (X).", "Dammi la città di (X).", "Dammi tutti i città di (X).", "di chi città è (X)?", "di qual città è (X)?", "Elenca i città di (X).", "Elenca tutti i città di (X).", "Mostrami l' città di (X).", "qual era città di (X)??", "qual erano città di (X)??", "qual sono città di (X)??", "qual è città di (X)??", "quale città ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' città di (X)?", "la città di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i città di (X).", "Dammi la città di (X).", "Dammi tutti i città di (X).", "di chi città è (X)?", "di qual città è (X)?", "Elenca i città di (X).", "Elenca tutti i città di (X).", "Mostrami l' città di (X).", "qual era città di (X)??", "qual erano città di (X)??", "qual sono città di (X)??", "qual è città di (X)??", "quale città ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#city-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "AdministrativeRegion" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' città di (X)?", "la città di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/isPartOf> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#predecessor-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era predecessore di (X)??", "chi è predecessore di (X)??", "Dammi la predecessore di (X).", "Dammi tutti i predecessore di (X).", "di chi predecessore è (X)?", "Elenca i predecessore di (X).", "Mostrami l' predecessore di (X).", "quale predecessore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/predecessor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#predecessor-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Politician" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' predecessore di (X)?", "la predecessore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/predecessor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figli di (X).", "chi era figlio di (X)??", "chi erano figli di (X)??", "chi sono figli di (X)??", "chi è figlio di (X)??", "Dammi la figli di (X).", "Dammi la figlio di (X).", "Dammi tutti i figli di (X).", "Dammi tutti i figlio di (X).", "di chi figli è (X)?", "di chi figlio è (X)?", "Elenca i figlio di (X).", "Elenca tutti i figli di (X).", "Mostrami l' figli di (X).", "Mostrami l' figlio di (X).", "quale figlio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlio di (X)?", "la figlio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figli di (X).", "chi era figlio di (X)??", "chi erano figli di (X)??", "chi sono figli di (X)??", "chi è figlio di (X)??", "Dammi la figli di (X).", "Dammi la figlio di (X).", "Dammi tutti i figli di (X).", "Dammi tutti i figlio di (X).", "di chi figli è (X)?", "di chi figlio è (X)?", "Elenca i figlio di (X).", "Elenca tutti i figli di (X).", "Mostrami l' figli di (X).", "Mostrami l' figlio di (X).", "quale figlio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#son_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlio di (X)?", "la figlio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#president",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era presidente di (X)??", "chi è presidente di (X)??", "Dammi la presidente di (X).", "Dammi tutti i presidente di (X).", "di chi presidente è (X)?", "Elenca i presidente di (X).", "Mostrami l' presidente di (X).", "quale presidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#president",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presidente di (X)?", "la presidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPostgraduateStudents",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "University" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di studenti postdoc di (X).", "Dammi tutti i numero di studenti postdoc di (X).", "di qual numero di studenti postdoc è (X)?", "Elenca i numero di studenti postdoc di (X).", "Mostrami l' numero di studenti postdoc di (X).", "qual era numero di studenti postdoc di (X)??", "qual è numero di studenti postdoc di (X)??", "quale numero di studenti postdoc ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPostgraduateStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPostgraduateStudents",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "University" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di studenti postdoc di (X)?", "la numero di studenti postdoc di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPostgraduateStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#seating_capacity_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la capienza di (X).", "Dammi tutti i capienza di (X).", "di qual capienza è (X)?", "Elenca i capienza di (X).", "Mostrami l' capienza di (X).", "qual era capienza di (X)??", "qual è capienza di (X)??", "quale capienza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#seating_capacity_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capienza di (X)?", "la capienza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#seating_capacity_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la capienza di (X).", "Dammi tutti i capienza di (X).", "di qual capienza è (X)?", "Elenca i capienza di (X).", "Mostrami l' capienza di (X).", "qual era capienza di (X)??", "qual è capienza di (X)??", "quale capienza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#seating_capacity_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capienza di (X)?", "la capienza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#races",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i gare di (X).", "Dammi la gare di (X).", "Dammi tutti i gare di (X).", "di chi gare è (X)?", "Elenca tutti i gare di (X).", "Mostrami l' gare di (X).", "qual erano gare di (X)??", "qual sono gare di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/races> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#height_of_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#height_of_1",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Model" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#publicationDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i compositori di (X).", "Dammi la compositori di (X).", "Dammi la data di pubblicazione di (X).", "Dammi tutti i compositori di (X).", "Dammi tutti i data di pubblicazione di (X).", "di chi compositori è (X)?", "di qual data di pubblicazione è (X)?", "Elenca i data di pubblicazione di (X).", "Elenca tutti i compositori di (X).", "Mostrami l' compositori di (X).", "Mostrami l' data di pubblicazione di (X).", "qual era data di pubblicazione di (X)??", "qual erano compositori di (X)??", "qual sono compositori di (X)??", "qual è data di pubblicazione di (X)??", "quale data di pubblicazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#publicationDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di pubblicazione di (X)?", "la data di pubblicazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publicationDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i sviluppatori di (X).", "chi era sviluppatore di (X)??", "chi erano sviluppatori di (X)??", "chi sono sviluppatori di (X)??", "chi è sviluppatore di (X)??", "Dammi la sviluppatore di (X).", "Dammi la sviluppatori di (X).", "Dammi tutti i sviluppatore di (X).", "Dammi tutti i sviluppatori di (X).", "di chi sviluppatore è (X)?", "di chi sviluppatori è (X)?", "Elenca i sviluppatore di (X).", "Elenca tutti i sviluppatori di (X).", "Mostrami l' sviluppatore di (X).", "Mostrami l' sviluppatori di (X).", "quale sviluppatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sviluppatore di (X)?", "la sviluppatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i sviluppatori di (X).", "chi era sviluppatore di (X)??", "chi erano sviluppatori di (X)??", "chi sono sviluppatori di (X)??", "chi è sviluppatore di (X)??", "Dammi la sviluppatore di (X).", "Dammi la sviluppatori di (X).", "Dammi tutti i sviluppatore di (X).", "Dammi tutti i sviluppatori di (X).", "di chi sviluppatore è (X)?", "di chi sviluppatori è (X)?", "Elenca i sviluppatore di (X).", "Elenca tutti i sviluppatori di (X).", "Mostrami l' sviluppatore di (X).", "Mostrami l' sviluppatori di (X).", "quale sviluppatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#developer_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sviluppatore di (X)?", "la sviluppatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#homeStadium_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i stadi di (X).", "Dammi la stadi di (X).", "Dammi la stadio di (X).", "Dammi tutti i stadi di (X).", "Dammi tutti i stadio di (X).", "di chi stadi è (X)?", "di qual stadio è (X)?", "Elenca i stadio di (X).", "Elenca tutti i stadi di (X).", "Mostrami l' stadi di (X).", "Mostrami l' stadio di (X).", "qual era stadio di (X)??", "qual erano stadi di (X)??", "qual sono stadi di (X)??", "qual è stadio di (X)??", "quale stadio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#homeStadium_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "SoccerClub" ],
    "returnType" : [ "Building" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' stadio di (X)?", "la stadio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#director-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i budget di (X).", "chi era direttore di (X)??", "chi erano budget di (X)??", "chi sono budget di (X)??", "chi è direttore di (X)??", "Dammi la budget di (X).", "Dammi la direttore di (X).", "Dammi tutti i budget di (X).", "Dammi tutti i direttore di (X).", "di chi budget è (X)?", "di chi direttore è (X)?", "Elenca i direttore di (X).", "Elenca tutti i budget di (X).", "Mostrami l' budget di (X).", "Mostrami l' direttore di (X).", "quale direttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#director-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' direttore di (X)?", "la direttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i musiche di (X).", "Dammi la musica di (X).", "Dammi la musiche di (X).", "Dammi tutti i musica di (X).", "Dammi tutti i musiche di (X).", "di chi musiche è (X)?", "di qual musica è (X)?", "Elenca i musica di (X).", "Elenca tutti i musiche di (X).", "Mostrami l' musica di (X).", "Mostrami l' musiche di (X).", "qual era musica di (X)??", "qual erano musiche di (X)??", "qual sono musiche di (X)??", "qual è musica di (X)??", "quale musica ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' musica di (X)?", "la musica di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i musiche di (X).", "Dammi la musica di (X).", "Dammi la musiche di (X).", "Dammi tutti i musica di (X).", "Dammi tutti i musiche di (X).", "di chi musiche è (X)?", "di qual musica è (X)?", "Elenca i musica di (X).", "Elenca tutti i musiche di (X).", "Mostrami l' musica di (X).", "Mostrami l' musiche di (X).", "qual era musica di (X)??", "qual erano musiche di (X)??", "qual sono musiche di (X)??", "qual è musica di (X)??", "quale musica ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#music_by",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' musica di (X)?", "la musica di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cicli della fondazione di (X).", "chi era ciclo della fondazione di (X)??", "chi erano cicli della fondazione di (X)??", "chi sono cicli della fondazione di (X)??", "chi è ciclo della fondazione di (X)??", "Dammi la cicli della fondazione di (X).", "Dammi la ciclo della fondazione di (X).", "Dammi tutti i cicli della fondazione di (X).", "Dammi tutti i ciclo della fondazione di (X).", "di chi cicli della fondazione è (X)?", "di chi ciclo della fondazione è (X)?", "Elenca i ciclo della fondazione di (X).", "Elenca tutti i cicli della fondazione di (X).", "Mostrami l' cicli della fondazione di (X).", "Mostrami l' ciclo della fondazione di (X).", "quale ciclo della fondazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ciclo della fondazione di (X)?", "la ciclo della fondazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cicli della fondazione di (X).", "chi era ciclo della fondazione di (X)??", "chi erano cicli della fondazione di (X)??", "chi sono cicli della fondazione di (X)??", "chi è ciclo della fondazione di (X)??", "Dammi la cicli della fondazione di (X).", "Dammi la ciclo della fondazione di (X).", "Dammi tutti i cicli della fondazione di (X).", "Dammi tutti i ciclo della fondazione di (X).", "di chi cicli della fondazione è (X)?", "di chi ciclo della fondazione è (X)?", "Elenca i ciclo della fondazione di (X).", "Elenca tutti i cicli della fondazione di (X).", "Mostrami l' cicli della fondazione di (X).", "Mostrami l' ciclo della fondazione di (X).", "quale ciclo della fondazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#foundation_series_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ciclo della fondazione di (X)?", "la ciclo della fondazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#child_of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figlie di (X).", "chi era figlia di (X)??", "chi erano figlie di (X)??", "chi sono figlie di (X)??", "chi è figlia di (X)??", "Dammi la figlia di (X).", "Dammi la figlie di (X).", "Dammi tutti i figlia di (X).", "Dammi tutti i figlie di (X).", "di chi figlia è (X)?", "di chi figlie è (X)?", "Elenca i figlia di (X).", "Elenca tutti i figlie di (X).", "Mostrami l' figlia di (X).", "Mostrami l' figlie di (X).", "quale figlia ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#child_of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlia di (X)?", "la figlia di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i partiti di (X).", "Dammi la partiti di (X).", "Dammi la partito di (X).", "Dammi tutti i partiti di (X).", "Dammi tutti i partito di (X).", "di chi partiti è (X)?", "di qual partito è (X)?", "Elenca i partito di (X).", "Elenca tutti i partiti di (X).", "Mostrami l' partiti di (X).", "Mostrami l' partito di (X).", "qual era partito di (X)??", "qual erano partiti di (X)??", "qual sono partiti di (X)??", "qual è partito di (X)??", "quale partito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' partito di (X)?", "la partito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i partiti di (X).", "Dammi la partiti di (X).", "Dammi la partito di (X).", "Dammi tutti i partiti di (X).", "Dammi tutti i partito di (X).", "di chi partiti è (X)?", "di qual partito è (X)?", "Elenca i partito di (X).", "Elenca tutti i partiti di (X).", "Mostrami l' partiti di (X).", "Mostrami l' partito di (X).", "qual era partito di (X)??", "qual erano partiti di (X)??", "qual sono partiti di (X)??", "qual è partito di (X)??", "quale partito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' partito di (X)?", "la partito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i partiti di (X).", "Dammi la partiti di (X).", "Dammi la partito di (X).", "Dammi tutti i partiti di (X).", "Dammi tutti i partito di (X).", "di chi partiti è (X)?", "di qual partito è (X)?", "Elenca i partito di (X).", "Elenca tutti i partiti di (X).", "Mostrami l' partiti di (X).", "Mostrami l' partito di (X).", "qual era partito di (X)??", "qual erano partiti di (X)??", "qual sono partiti di (X)??", "qual è partito di (X)??", "quale partito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' partito di (X)?", "la partito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i partiti di (X).", "Dammi la partiti di (X).", "Dammi la partito di (X).", "Dammi tutti i partiti di (X).", "Dammi tutti i partito di (X).", "di chi partiti è (X)?", "di qual partito è (X)?", "Elenca i partito di (X).", "Elenca tutti i partiti di (X).", "Mostrami l' partiti di (X).", "Mostrami l' partito di (X).", "qual era partito di (X)??", "qual erano partiti di (X)??", "qual sono partiti di (X)??", "qual è partito di (X)??", "quale partito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#party-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' partito di (X)?", "la partito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#assets-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i società sussidiarie di (X).", "Dammi la patrimonio di (X).", "Dammi la società sussidiarie di (X).", "Dammi tutti i patrimonio di (X).", "Dammi tutti i società sussidiarie di (X).", "di chi società sussidiarie è (X)?", "di qual patrimonio è (X)?", "Elenca i patrimonio di (X).", "Elenca tutti i società sussidiarie di (X).", "Mostrami l' patrimonio di (X).", "Mostrami l' società sussidiarie di (X).", "qual era patrimonio di (X)??", "qual erano società sussidiarie di (X)??", "qual sono società sussidiarie di (X)??", "qual è patrimonio di (X)??", "quale patrimonio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/assets> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#assets-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' patrimonio di (X)?", "la patrimonio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/assets> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#assets-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i società sussidiarie di (X).", "Dammi la patrimonio di (X).", "Dammi la società sussidiarie di (X).", "Dammi tutti i patrimonio di (X).", "Dammi tutti i società sussidiarie di (X).", "di chi società sussidiarie è (X)?", "di qual patrimonio è (X)?", "Elenca i patrimonio di (X).", "Elenca tutti i società sussidiarie di (X).", "Mostrami l' patrimonio di (X).", "Mostrami l' società sussidiarie di (X).", "qual era patrimonio di (X)??", "qual erano società sussidiarie di (X)??", "qual sono società sussidiarie di (X)??", "qual è patrimonio di (X)??", "quale patrimonio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/assets> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#assets-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' patrimonio di (X)?", "la patrimonio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/assets> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i capi di (X).", "chi era capo di (X)??", "chi erano capi di (X)??", "chi sono capi di (X)??", "chi è capo di (X)??", "Dammi la capi di (X).", "Dammi la capo di (X).", "Dammi tutti i capi di (X).", "Dammi tutti i capo di (X).", "di chi capi è (X)?", "di chi capo è (X)?", "Elenca i capo di (X).", "Elenca tutti i capi di (X).", "Mostrami l' capi di (X).", "Mostrami l' capo di (X).", "quale capo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capo di (X)?", "la capo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i capi di (X).", "chi era capo di (X)??", "chi erano capi di (X)??", "chi sono capi di (X)??", "chi è capo di (X)??", "Dammi la capi di (X).", "Dammi la capo di (X).", "Dammi tutti i capi di (X).", "Dammi tutti i capo di (X).", "di chi capi è (X)?", "di chi capo è (X)?", "Elenca i capo di (X).", "Elenca tutti i capi di (X).", "Mostrami l' capi di (X).", "Mostrami l' capo di (X).", "quale capo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capo di (X)?", "la capo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i capi di (X).", "chi era capo di (X)??", "chi erano capi di (X)??", "chi sono capi di (X)??", "chi è capo di (X)??", "Dammi la capi di (X).", "Dammi la capo di (X).", "Dammi tutti i capi di (X).", "Dammi tutti i capo di (X).", "di chi capi è (X)?", "di chi capo è (X)?", "Elenca i capo di (X).", "Elenca tutti i capi di (X).", "Mostrami l' capi di (X).", "Mostrami l' capo di (X).", "quale capo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#leader-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capo di (X)?", "la capo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#subsidiary-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era società sussidiaria di (X)??", "chi è società sussidiaria di (X)??", "Dammi la società sussidiaria di (X).", "Dammi tutti i società sussidiaria di (X).", "di chi società sussidiaria è (X)?", "Elenca i società sussidiaria di (X).", "Mostrami l' società sussidiaria di (X).", "quale società sussidiaria ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsidiary> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#subsidiary-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' società sussidiaria di (X)?", "la società sussidiaria di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/subsidiary> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#videogame-by",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i videogiochi di (X).", "chi era videogioco di (X)??", "chi erano videogiochi di (X)??", "chi sono videogiochi di (X)??", "chi è videogioco di (X)??", "Dammi la videogiochi di (X).", "Dammi la videogioco di (X).", "Dammi tutti i videogiochi di (X).", "Dammi tutti i videogioco di (X).", "di chi videogiochi è (X)?", "di chi videogioco è (X)?", "Elenca i videogioco di (X).", "Elenca tutti i videogiochi di (X).", "Mostrami l' videogiochi di (X).", "Mostrami l' videogioco di (X).", "quale videogioco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#videogame-by",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' videogioco di (X)?", "la videogioco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#videogame-by",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i videogiochi di (X).", "Dammi la videogiochi di (X).", "Dammi la videogioco di (X).", "Dammi tutti i videogiochi di (X).", "Dammi tutti i videogioco di (X).", "di chi videogiochi è (X)?", "di qual videogioco è (X)?", "Elenca i videogioco di (X).", "Elenca tutti i videogiochi di (X).", "Mostrami l' videogiochi di (X).", "Mostrami l' videogioco di (X).", "qual era videogioco di (X)??", "qual erano videogiochi di (X)??", "qual sono videogiochi di (X)??", "qual è videogioco di (X)??", "quale videogioco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#videogame-by",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' videogioco di (X)?", "la videogioco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#equity-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la equity di (X).", "Dammi tutti i equity di (X).", "di qual equity è (X)?", "Elenca i equity di (X).", "Mostrami l' equity di (X).", "qual era equity di (X)??", "qual è equity di (X)??", "quale equity ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/equity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#equity-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' equity di (X)?", "la equity di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/equity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la forma di governo di (X).", "Dammi tutti i forma di governo di (X).", "di qual forma di governo è (X)?", "Elenca i forma di governo di (X).", "Mostrami l' forma di governo di (X).", "qual era forma di governo di (X)??", "qual è forma di governo di (X)??", "quale forma di governo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' forma di governo di (X)?", "la forma di governo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la forma di governo di (X).", "Dammi tutti i forma di governo di (X).", "di qual forma di governo è (X)?", "Elenca i forma di governo di (X).", "Mostrami l' forma di governo di (X).", "qual era forma di governo di (X)??", "qual è forma di governo di (X)??", "quale forma di governo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' forma di governo di (X)?", "la forma di governo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la forma di governo di (X).", "Dammi tutti i forma di governo di (X).", "di qual forma di governo è (X)?", "Elenca i forma di governo di (X).", "Mostrami l' forma di governo di (X).", "qual era forma di governo di (X)??", "qual è forma di governo di (X)??", "quale forma di governo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' forma di governo di (X)?", "la forma di governo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la forma di governo di (X).", "Dammi tutti i forma di governo di (X).", "di qual forma di governo è (X)?", "Elenca i forma di governo di (X).", "Mostrami l' forma di governo di (X).", "qual era forma di governo di (X)??", "qual è forma di governo di (X)??", "quale forma di governo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#formOfGovernment-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' forma di governo di (X)?", "la forma di governo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#ingredients",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i ingredienti di (X).", "Dammi la ingredienti di (X).", "Dammi tutti i ingredienti di (X).", "di chi ingredienti è (X)?", "Elenca tutti i ingredienti di (X).", "Mostrami l' ingredienti di (X).", "qual erano ingredienti di (X)??", "qual sono ingredienti di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/Ingredient> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di dissoluzione di (X).", "Dammi tutti i data di dissoluzione di (X).", "di qual data di dissoluzione è (X)?", "Elenca i data di dissoluzione di (X).", "Mostrami l' data di dissoluzione di (X).", "qual era data di dissoluzione di (X)??", "qual è data di dissoluzione di (X)??", "quale data di dissoluzione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di dissoluzione di (X)?", "la data di dissoluzione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di dissoluzione di (X).", "Dammi tutti i data di dissoluzione di (X).", "di qual data di dissoluzione è (X)?", "Elenca i data di dissoluzione di (X).", "Mostrami l' data di dissoluzione di (X).", "qual era data di dissoluzione di (X)??", "qual è data di dissoluzione di (X)??", "quale data di dissoluzione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di dissoluzione di (X)?", "la data di dissoluzione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di dissoluzione di (X).", "Dammi tutti i data di dissoluzione di (X).", "di qual data di dissoluzione è (X)?", "Elenca i data di dissoluzione di (X).", "Mostrami l' data di dissoluzione di (X).", "qual era data di dissoluzione di (X)??", "qual è data di dissoluzione di (X)??", "quale data di dissoluzione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#dissolutionDate_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di dissoluzione di (X)?", "la data di dissoluzione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i valuta della (X).", "Dammi la valuta della (X).", "Dammi tutti i valuta della (X).", "della chi valuta è (X)?", "della qual valuta è (X)?", "Elenca i valuta della (X).", "Elenca tutti i valuta della (X).", "Mostrami l' valuta della (X).", "qual era valuta della (X)??", "qual erano valuta della (X)??", "qual sono valuta della (X)??", "qual è valuta della (X)??", "quale valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' valuta della (X)?", "la valuta della (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i valuta della (X).", "Dammi la valuta della (X).", "Dammi tutti i valuta della (X).", "della chi valuta è (X)?", "della qual valuta è (X)?", "Elenca i valuta della (X).", "Elenca tutti i valuta della (X).", "Mostrami l' valuta della (X).", "qual era valuta della (X)??", "qual erano valuta della (X)??", "qual sono valuta della (X)??", "qual è valuta della (X)??", "quale valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' valuta della (X)?", "la valuta della (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i valuta della (X).", "Dammi la valuta della (X).", "Dammi tutti i valuta della (X).", "della chi valuta è (X)?", "della qual valuta è (X)?", "Elenca i valuta della (X).", "Elenca tutti i valuta della (X).", "Mostrami l' valuta della (X).", "qual era valuta della (X)??", "qual erano valuta della (X)??", "qual sono valuta della (X)??", "qual è valuta della (X)??", "quale valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' valuta della (X)?", "la valuta della (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i valuta della (X).", "Dammi la valuta della (X).", "Dammi tutti i valuta della (X).", "della chi valuta è (X)?", "della qual valuta è (X)?", "Elenca i valuta della (X).", "Elenca tutti i valuta della (X).", "Mostrami l' valuta della (X).", "qual era valuta della (X)??", "qual erano valuta della (X)??", "qual sono valuta della (X)??", "qual è valuta della (X)??", "quale valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' valuta della (X)?", "la valuta della (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i valuta della (X).", "Dammi la valuta della (X).", "Dammi tutti i valuta della (X).", "della chi valuta è (X)?", "della qual valuta è (X)?", "Elenca i valuta della (X).", "Elenca tutti i valuta della (X).", "Mostrami l' valuta della (X).", "qual era valuta della (X)??", "qual erano valuta della (X)??", "qual sono valuta della (X)??", "qual è valuta della (X)??", "quale valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#currency_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' valuta della (X)?", "la valuta della (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la religione di (X).", "Dammi tutti i religione di (X).", "di qual religione è (X)?", "Elenca i religione di (X).", "Mostrami l' religione di (X).", "qual era religione di (X)??", "qual è religione di (X)??", "quale religione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#religion-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' religione di (X)?", "la religione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/religion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#child_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figli di (X).", "chi era figlio di (X)??", "chi erano figli di (X)??", "chi sono figli di (X)??", "chi è figlio di (X)??", "Dammi la figli di (X).", "Dammi la figlio di (X).", "Dammi tutti i figli di (X).", "Dammi tutti i figlio di (X).", "di chi figli è (X)?", "di chi figlio è (X)?", "Elenca i figlio di (X).", "Elenca tutti i figli di (X).", "Mostrami l' figli di (X).", "Mostrami l' figlio di (X).", "quale figlio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#child_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlio di (X)?", "la figlio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatori di (X).", "chi era fondatore di (X)??", "chi erano fondatori di (X)??", "chi sono fondatori di (X)??", "chi è fondatore di (X)??", "Dammi la fondatore di (X).", "Dammi la fondatori di (X).", "Dammi tutti i fondatore di (X).", "Dammi tutti i fondatori di (X).", "di chi fondatore è (X)?", "di chi fondatori è (X)?", "Elenca i fondatore di (X).", "Elenca tutti i fondatori di (X).", "Mostrami l' fondatore di (X).", "Mostrami l' fondatori di (X).", "quale fondatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatore di (X)?", "la fondatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/founder> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatori di (X).", "chi era fondatore di (X)??", "chi erano fondatori di (X)??", "chi sono fondatori di (X)??", "chi è fondatore di (X)??", "Dammi la fondatore di (X).", "Dammi la fondatori di (X).", "Dammi tutti i fondatore di (X).", "Dammi tutti i fondatori di (X).", "di chi fondatore è (X)?", "di chi fondatori è (X)?", "Elenca i fondatore di (X).", "Elenca tutti i fondatori di (X).", "Mostrami l' fondatore di (X).", "Mostrami l' fondatori di (X).", "quale fondatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#founder_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatore di (X)?", "la fondatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#population_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i abitanti di (X).", "Dammi la abitanti di (X).", "Dammi tutti i abitanti di (X).", "di chi abitanti è (X)?", "Elenca tutti i abitanti di (X).", "Mostrami l' abitanti di (X).", "qual erano abitanti di (X)??", "qual sono abitanti di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#vicepresident",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era vicepresidente di (X)??", "chi è vicepresidente di (X)??", "Dammi la vicepresidente di (X).", "Dammi tutti i vicepresidente di (X).", "di chi vicepresidente è (X)?", "Elenca i vicepresidente di (X).", "Mostrami l' vicepresidente di (X).", "quale vicepresidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#vicepresident",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' vicepresidente di (X)?", "la vicepresidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#successor-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era successore di (X)??", "chi è successore di (X)??", "Dammi la successore di (X).", "Dammi tutti i successore di (X).", "di chi successore è (X)?", "Elenca i successore di (X).", "Mostrami l' successore di (X).", "quale successore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#successor-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' successore di (X)?", "la successore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figli di (X).", "chi era figlio di (X)??", "chi erano figli di (X)??", "chi sono figli di (X)??", "chi è figlio di (X)??", "Dammi la figli di (X).", "Dammi la figlio di (X).", "Dammi tutti i figli di (X).", "Dammi tutti i figlio di (X).", "di chi figli è (X)?", "di chi figlio è (X)?", "Elenca i figlio di (X).", "Elenca tutti i figli di (X).", "Mostrami l' figli di (X).", "Mostrami l' figlio di (X).", "quale figlio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlio di (X)?", "la figlio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i figli di (X).", "chi era figlio di (X)??", "chi erano figli di (X)??", "chi sono figli di (X)??", "chi è figlio di (X)??", "Dammi la figli di (X).", "Dammi la figlio di (X).", "Dammi tutti i figli di (X).", "Dammi tutti i figlio di (X).", "di chi figli è (X)?", "di chi figlio è (X)?", "Elenca i figlio di (X).", "Elenca tutti i figli di (X).", "Mostrami l' figli di (X).", "Mostrami l' figlio di (X).", "quale figlio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#child_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' figlio di (X)?", "la figlio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#numberOfUndergraduateStudents",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di studenti universitari di (X).", "Dammi tutti i numero di studenti universitari di (X).", "di qual numero di studenti universitari è (X)?", "Elenca i numero di studenti universitari di (X).", "Mostrami l' numero di studenti universitari di (X).", "qual era numero di studenti universitari di (X)??", "qual è numero di studenti universitari di (X)??", "quale numero di studenti universitari ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfUndergraduateStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#numberOfUndergraduateStudents",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di studenti universitari di (X)?", "la numero di studenti universitari di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfUndergraduateStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#opponent-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i giudici di (X).", "chi era nemico di (X)??", "chi erano giudici di (X)??", "chi sono giudici di (X)??", "chi è nemico di (X)??", "Dammi la giudici di (X).", "Dammi la nemico di (X).", "Dammi tutti i giudici di (X).", "Dammi tutti i nemico di (X).", "di chi giudici è (X)?", "di chi nemico è (X)?", "Elenca i nemico di (X).", "Elenca tutti i giudici di (X).", "Mostrami l' giudici di (X).", "Mostrami l' nemico di (X).", "quale nemico ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/opponent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#opponent-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nemico di (X)?", "la nemico di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/opponent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#location-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la posizione di (X).", "Dammi tutti i posizione di (X).", "di qual posizione è (X)?", "Elenca i posizione di (X).", "Mostrami l' posizione di (X).", "qual era posizione di (X)??", "qual è posizione di (X)??", "quale posizione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#location-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' posizione di (X)?", "la posizione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#distributor-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era casa di distribuzione di (X)??", "chi è casa di distribuzione di (X)??", "Dammi la casa di distribuzione di (X).", "Dammi tutti i casa di distribuzione di (X).", "di chi casa di distribuzione è (X)?", "Elenca i casa di distribuzione di (X).", "Mostrami l' casa di distribuzione di (X).", "quale casa di distribuzione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#distributor-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' casa di distribuzione di (X)?", "la casa di distribuzione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i nazione di (X).", "Dammi la nazione di (X).", "Dammi tutti i nazione di (X).", "di chi nazione è (X)?", "di qual nazione è (X)?", "Elenca i nazione di (X).", "Elenca tutti i nazione di (X).", "Mostrami l' nazione di (X).", "qual era nazione di (X)??", "qual erano nazione di (X)??", "qual sono nazione di (X)??", "qual è nazione di (X)??", "quale nazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazione di (X)?", "la nazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i nazione di (X).", "Dammi la nazione di (X).", "Dammi tutti i nazione di (X).", "di chi nazione è (X)?", "di qual nazione è (X)?", "Elenca i nazione di (X).", "Elenca tutti i nazione di (X).", "Mostrami l' nazione di (X).", "qual era nazione di (X)??", "qual erano nazione di (X)??", "qual sono nazione di (X)??", "qual è nazione di (X)??", "quale nazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazione di (X)?", "la nazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i nazione di (X).", "Dammi la nazione di (X).", "Dammi tutti i nazione di (X).", "di chi nazione è (X)?", "di qual nazione è (X)?", "Elenca i nazione di (X).", "Elenca tutti i nazione di (X).", "Mostrami l' nazione di (X).", "qual era nazione di (X)??", "qual erano nazione di (X)??", "qual sono nazione di (X)??", "qual è nazione di (X)??", "quale nazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazione di (X)?", "la nazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i nazione di (X).", "Dammi la nazione di (X).", "Dammi tutti i nazione di (X).", "di chi nazione è (X)?", "di qual nazione è (X)?", "Elenca i nazione di (X).", "Elenca tutti i nazione di (X).", "Mostrami l' nazione di (X).", "qual era nazione di (X)??", "qual erano nazione di (X)??", "qual sono nazione di (X)??", "qual è nazione di (X)??", "quale nazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#foundationPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazione di (X)?", "la nazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#Borough-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i quartieri di (X).", "chi era quartiere di (X)??", "chi erano quartieri di (X)??", "chi sono quartieri di (X)??", "chi è quartiere di (X)??", "Dammi la quartiere di (X).", "Dammi la quartieri di (X).", "Dammi tutti i quartiere di (X).", "Dammi tutti i quartieri di (X).", "di chi quartiere è (X)?", "di chi quartieri è (X)?", "Elenca i quartiere di (X).", "Elenca tutti i quartieri di (X).", "Mostrami l' quartiere di (X).", "Mostrami l' quartieri di (X).", "quale quartiere ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#Borough-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' quartiere di (X)?", "la quartiere di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i mogli di (X).", "Dammi la cittadinanza di (X).", "Dammi la mogli di (X).", "Dammi tutti i cittadinanza di (X).", "Dammi tutti i mogli di (X).", "di chi mogli è (X)?", "di qual cittadinanza è (X)?", "Elenca i cittadinanza di (X).", "Elenca tutti i mogli di (X).", "Mostrami l' cittadinanza di (X).", "Mostrami l' mogli di (X).", "qual era cittadinanza di (X)??", "qual erano mogli di (X)??", "qual sono mogli di (X)??", "qual è cittadinanza di (X)??", "quale cittadinanza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#citizenship-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' cittadinanza di (X)?", "la cittadinanza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/citizenship> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#publisher-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era editore di (X)??", "chi è editore di (X)??", "Dammi la editore di (X).", "Dammi tutti i editore di (X).", "di chi editore è (X)?", "Elenca i editore di (X).", "Mostrami l' editore di (X).", "quale editore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#publisher-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' editore di (X)?", "la editore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era padre di (X)??", "chi è padre di (X)??", "Dammi la padre di (X).", "Dammi tutti i padre di (X).", "di chi padre è (X)?", "Elenca i padre di (X).", "Mostrami l' padre di (X).", "quale padre ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' padre di (X)?", "la padre di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era padre di (X)??", "chi è padre di (X)??", "Dammi la padre di (X).", "Dammi tutti i padre di (X).", "di chi padre è (X)?", "Elenca i padre di (X).", "Mostrami l' padre di (X).", "quale padre ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' padre di (X)?", "la padre di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era padre di (X)??", "chi è padre di (X)??", "Dammi la padre di (X).", "Dammi tutti i padre di (X).", "di chi padre è (X)?", "Elenca i padre di (X).", "Mostrami l' padre di (X).", "quale padre ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#father_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' padre di (X)?", "la padre di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/father> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i direttori di (X).", "chi era compositore di (X)??", "chi erano direttori di (X)??", "chi sono direttori di (X)??", "chi è compositore di (X)??", "Dammi la compositore di (X).", "Dammi la direttori di (X).", "Dammi tutti i compositore di (X).", "Dammi tutti i direttori di (X).", "di chi compositore è (X)?", "di chi direttori è (X)?", "Elenca i compositore di (X).", "Elenca tutti i direttori di (X).", "Mostrami l' compositore di (X).", "Mostrami l' direttori di (X).", "quale compositore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#composer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' compositore di (X)?", "la compositore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#elevation_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaUrban> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#elevation_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaUrban> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#seatingCapacity",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i posti a sedere di (X).", "Dammi la posti a sedere di (X).", "Dammi tutti i posti a sedere di (X).", "di chi posti a sedere è (X)?", "Elenca tutti i posti a sedere di (X).", "Mostrami l' posti a sedere di (X).", "qual erano posti a sedere di (X)??", "qual sono posti a sedere di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era creatrice di (X)??", "chi è creatrice di (X)??", "Dammi la creatrice di (X).", "Dammi tutti i creatrice di (X).", "di chi creatrice è (X)?", "Elenca i creatrice di (X).", "Mostrami l' creatrice di (X).", "quale creatrice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' creatrice di (X)?", "la creatrice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la città più grande di (X).", "Dammi tutti i città più grande di (X).", "di qual città più grande è (X)?", "Elenca i città più grande di (X).", "Mostrami l' città più grande di (X).", "qual era città più grande di (X)??", "qual è città più grande di (X)??", "quale città più grande ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' città più grande di (X)?", "la città più grande di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la città più grande di (X).", "Dammi tutti i città più grande di (X).", "di qual città più grande è (X)?", "Elenca i città più grande di (X).", "Mostrami l' città più grande di (X).", "qual era città più grande di (X)??", "qual è città più grande di (X)??", "quale città più grande ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' città più grande di (X)?", "la città più grande di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la città più grande di (X).", "Dammi tutti i città più grande di (X).", "di qual città più grande è (X)?", "Elenca i città più grande di (X).", "Mostrami l' città più grande di (X).", "qual era città più grande di (X)??", "qual è città più grande di (X)??", "quale città più grande ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#largestCity_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' città più grande di (X)?", "la città più grande di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di nascita di (X).", "Dammi tutti i anno di nascita di (X).", "di qual anno di nascita è (X)?", "Elenca i anno di nascita di (X).", "Mostrami l' anno di nascita di (X).", "qual era anno di nascita di (X)??", "qual è anno di nascita di (X)??", "quale anno di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di nascita di (X)?", "la anno di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di nascita di (X).", "Dammi tutti i anno di nascita di (X).", "di qual anno di nascita è (X)?", "Elenca i anno di nascita di (X).", "Mostrami l' anno di nascita di (X).", "qual era anno di nascita di (X)??", "qual è anno di nascita di (X)??", "quale anno di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di nascita di (X)?", "la anno di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di nascita di (X).", "Dammi tutti i anno di nascita di (X).", "di qual anno di nascita è (X)?", "Elenca i anno di nascita di (X).", "Mostrami l' anno di nascita di (X).", "qual era anno di nascita di (X)??", "qual è anno di nascita di (X)??", "quale anno di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#birthYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di nascita di (X)?", "la anno di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i prime stagioni di (X).", "Dammi la prima stagione di (X).", "Dammi la prime stagioni di (X).", "Dammi tutti i prima stagione di (X).", "Dammi tutti i prime stagioni di (X).", "di chi prime stagioni è (X)?", "di qual prima stagione è (X)?", "Elenca i prima stagione di (X).", "Elenca tutti i prime stagioni di (X).", "Mostrami l' prima stagione di (X).", "Mostrami l' prime stagioni di (X).", "qual era prima stagione di (X)??", "qual erano prime stagioni di (X)??", "qual sono prime stagioni di (X)??", "qual è prima stagione di (X)??", "quale prima stagione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' prima stagione di (X)?", "la prima stagione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i prime stagioni di (X).", "Dammi la prima stagione di (X).", "Dammi la prime stagioni di (X).", "Dammi tutti i prima stagione di (X).", "Dammi tutti i prime stagioni di (X).", "di chi prime stagioni è (X)?", "di qual prima stagione è (X)?", "Elenca i prima stagione di (X).", "Elenca tutti i prime stagioni di (X).", "Mostrami l' prima stagione di (X).", "Mostrami l' prime stagioni di (X).", "qual era prima stagione di (X)??", "qual erano prime stagioni di (X)??", "qual sono prime stagioni di (X)??", "qual è prima stagione di (X)??", "quale prima stagione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#firstSeason_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' prima stagione di (X)?", "la prima stagione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seasonNumber> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#partner-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i mariti di (X).", "chi era partner di (X)??", "chi erano mariti di (X)??", "chi sono mariti di (X)??", "chi è partner di (X)??", "Dammi la mariti di (X).", "Dammi la partner di (X).", "Dammi tutti i mariti di (X).", "Dammi tutti i partner di (X).", "di chi mariti è (X)?", "di chi partner è (X)?", "Elenca i partner di (X).", "Elenca tutti i mariti di (X).", "Mostrami l' mariti di (X).", "Mostrami l' partner di (X).", "quale partner ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/partner> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#partner-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' partner di (X)?", "la partner di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/partner> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatrici di (X).", "chi era fondatrice di (X)??", "chi erano fondatrici di (X)??", "chi sono fondatrici di (X)??", "chi è fondatrice di (X)??", "Dammi la fondatrice di (X).", "Dammi la fondatrici di (X).", "Dammi tutti i fondatrice di (X).", "Dammi tutti i fondatrici di (X).", "di chi fondatrice è (X)?", "di chi fondatrici è (X)?", "Elenca i fondatrice di (X).", "Elenca tutti i fondatrici di (X).", "Mostrami l' fondatrice di (X).", "Mostrami l' fondatrici di (X).", "quale fondatrice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parentCompany> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatrice di (X)?", "la fondatrice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parentCompany> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#currencyCode-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la codice valuta di (X).", "Dammi tutti i codice valuta di (X).", "di qual codice valuta è (X)?", "Elenca i codice valuta di (X).", "Mostrami l' codice valuta di (X).", "qual era codice valuta di (X)??", "qual è codice valuta di (X)??", "quale codice valuta ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currencyCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#currencyCode-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' codice valuta di (X)?", "la codice valuta di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currencyCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di fondazione dii (X).", "Dammi tutti i anno di fondazione dii (X).", "dii qual anno di fondazione è (X)?", "Elenca i anno di fondazione dii (X).", "Mostrami l' anno di fondazione dii (X).", "qual era anno di fondazione dii (X)??", "qual è anno di fondazione dii (X)??", "quale anno di fondazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di fondazione dii (X)?", "la anno di fondazione dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di fondazione dii (X).", "Dammi tutti i anno di fondazione dii (X).", "dii qual anno di fondazione è (X)?", "Elenca i anno di fondazione dii (X).", "Mostrami l' anno di fondazione dii (X).", "qual era anno di fondazione dii (X)??", "qual è anno di fondazione dii (X)??", "quale anno di fondazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di fondazione dii (X)?", "la anno di fondazione dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la anno di fondazione dii (X).", "Dammi tutti i anno di fondazione dii (X).", "dii qual anno di fondazione è (X)?", "Elenca i anno di fondazione dii (X).", "Mostrami l' anno di fondazione dii (X).", "qual era anno di fondazione dii (X)??", "qual è anno di fondazione dii (X)??", "quale anno di fondazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#foundingYear_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno di fondazione dii (X)?", "la anno di fondazione dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#numberOfEpisodes-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i numero di episodi di (X).", "Dammi la numero di episodi di (X).", "Dammi tutti i numero di episodi di (X).", "di chi numero di episodi è (X)?", "Elenca tutti i numero di episodi di (X).", "Mostrami l' numero di episodi di (X).", "qual erano numero di episodi di (X)??", "qual sono numero di episodi di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEpisodes> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#numberOfEmployees",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di impiegati di (X).", "Dammi tutti i numero di impiegati di (X).", "di qual numero di impiegati è (X)?", "Elenca i numero di impiegati di (X).", "Mostrami l' numero di impiegati di (X).", "qual era numero di impiegati di (X)??", "qual è numero di impiegati di (X)??", "quale numero di impiegati ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#numberOfEmployees",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di impiegati di (X)?", "la numero di impiegati di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfEmployees> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#spouse-of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i mogli di (X).", "chi era marito di (X)??", "chi erano mogli di (X)??", "chi sono mogli di (X)??", "chi è marito di (X)??", "Dammi la marito di (X).", "Dammi la mogli di (X).", "Dammi tutti i marito di (X).", "Dammi tutti i mogli di (X).", "di chi marito è (X)?", "di chi mogli è (X)?", "Elenca i marito di (X).", "Elenca tutti i mogli di (X).", "Mostrami l' marito di (X).", "Mostrami l' mogli di (X).", "quale marito ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#spouse-of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' marito di (X)?", "la marito di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#cost_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la costo di (X).", "Dammi tutti i costo di (X).", "di qual costo è (X)?", "Elenca i costo di (X).", "Mostrami l' costo di (X).", "qual era costo di (X)??", "qual è costo di (X)??", "quale costo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#cost_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' costo di (X)?", "la costo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i genitori di (X).", "chi era genitore di (X)??", "chi erano genitori di (X)??", "chi sono genitori di (X)??", "chi è genitore di (X)??", "Dammi la genitore di (X).", "Dammi la genitori di (X).", "Dammi tutti i genitore di (X).", "Dammi tutti i genitori di (X).", "di chi genitore è (X)?", "di chi genitori è (X)?", "Elenca i genitore di (X).", "Elenca tutti i genitori di (X).", "Mostrami l' genitore di (X).", "Mostrami l' genitori di (X).", "quale genitore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' genitore di (X)?", "la genitore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i genitori di (X).", "chi era genitore di (X)??", "chi erano genitori di (X)??", "chi sono genitori di (X)??", "chi è genitore di (X)??", "Dammi la genitore di (X).", "Dammi la genitori di (X).", "Dammi tutti i genitore di (X).", "Dammi tutti i genitori di (X).", "di chi genitore è (X)?", "di chi genitori è (X)?", "Elenca i genitore di (X).", "Elenca tutti i genitori di (X).", "Mostrami l' genitore di (X).", "Mostrami l' genitori di (X).", "quale genitore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' genitore di (X)?", "la genitore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i genitori di (X).", "chi era genitore di (X)??", "chi erano genitori di (X)??", "chi sono genitori di (X)??", "chi è genitore di (X)??", "Dammi la genitore di (X).", "Dammi la genitori di (X).", "Dammi tutti i genitore di (X).", "Dammi tutti i genitori di (X).", "di chi genitore è (X)?", "di chi genitori è (X)?", "Elenca i genitore di (X).", "Elenca tutti i genitori di (X).", "Mostrami l' genitore di (X).", "Mostrami l' genitori di (X).", "quale genitore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#parent-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' genitore di (X)?", "la genitore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#actor-of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i leader politici di (X).", "chi era attrice di (X)??", "chi erano leader politici di (X)??", "chi sono leader politici di (X)??", "chi è attrice di (X)??", "Dammi la attrice di (X).", "Dammi la leader politici di (X).", "Dammi tutti i attrice di (X).", "Dammi tutti i leader politici di (X).", "di chi attrice è (X)?", "di chi leader politici è (X)?", "Elenca i attrice di (X).", "Elenca tutti i leader politici di (X).", "Mostrami l' attrice di (X).", "Mostrami l' leader politici di (X).", "quale attrice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/Actor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "311",
    "lexicalEntryUri" : "http://localhost:8080#actor-of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' attrice di (X)?", "la attrice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/Actor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "312",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era allenatore di (X)??", "chi è allenatore di (X)??", "Dammi la allenatore di (X).", "Dammi tutti i allenatore di (X).", "di chi allenatore è (X)?", "Elenca i allenatore di (X).", "Mostrami l' allenatore di (X).", "quale allenatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' allenatore di (X)?", "la allenatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era allenatore di (X)??", "chi è allenatore di (X)??", "Dammi la allenatore di (X).", "Dammi tutti i allenatore di (X).", "di chi allenatore è (X)?", "Elenca i allenatore di (X).", "Mostrami l' allenatore di (X).", "quale allenatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#coach_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' allenatore di (X)?", "la allenatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "316",
    "lexicalEntryUri" : "http://localhost:8080#manufacturer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "chi era produttore di (X)??", "chi erano produttori di (X)??", "chi sono produttori di (X)??", "chi è produttore di (X)??", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttore è (X)?", "di chi produttori è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "317",
    "lexicalEntryUri" : "http://localhost:8080#manufacturer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/manufacturer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#trueName",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la vero nome di (X).", "Dammi tutti i vero nome di (X).", "di qual vero nome è (X)?", "Elenca i vero nome di (X).", "Mostrami l' vero nome di (X).", "qual era vero nome di (X)??", "qual è vero nome di (X)??", "quale vero nome ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#trueName",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' vero nome di (X)?", "la vero nome di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i membri di (X).", "chi era membro di (X)??", "chi erano membri di (X)??", "chi sono membri di (X)??", "chi è membro di (X)??", "Dammi la membri di (X).", "Dammi la membro di (X).", "Dammi tutti i membri di (X).", "Dammi tutti i membro di (X).", "di chi membri è (X)?", "di chi membro è (X)?", "Elenca i membro di (X).", "Elenca tutti i membri di (X).", "Mostrami l' membri di (X).", "Mostrami l' membro di (X).", "quale membro ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "321",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' membro di (X)?", "la membro di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "322",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i membri di (X).", "Dammi la membri di (X).", "Dammi la membro di (X).", "Dammi tutti i membri di (X).", "Dammi tutti i membro di (X).", "di chi membri è (X)?", "di qual membro è (X)?", "Elenca i membro di (X).", "Elenca tutti i membri di (X).", "Mostrami l' membri di (X).", "Mostrami l' membro di (X).", "qual era membro di (X)??", "qual erano membri di (X)??", "qual sono membri di (X)??", "qual è membro di (X)??", "quale membro ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/membership> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' membro di (X)?", "la membro di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/membership> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i membri di (X).", "chi era membro di (X)??", "chi erano membri di (X)??", "chi sono membri di (X)??", "chi è membro di (X)??", "Dammi la membri di (X).", "Dammi la membro di (X).", "Dammi tutti i membri di (X).", "Dammi tutti i membro di (X).", "di chi membri è (X)?", "di chi membro è (X)?", "Elenca i membro di (X).", "Elenca tutti i membri di (X).", "Mostrami l' membri di (X).", "Mostrami l' membro di (X).", "quale membro ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#membership-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' membro di (X)?", "la membro di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "326",
    "lexicalEntryUri" : "http://localhost:8080#presenter-of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i presentatori di (X).", "chi era presentatore di (X)??", "chi erano presentatori di (X)??", "chi sono presentatori di (X)??", "chi è presentatore di (X)??", "Dammi la presentatore di (X).", "Dammi la presentatori di (X).", "Dammi tutti i presentatore di (X).", "Dammi tutti i presentatori di (X).", "di chi presentatore è (X)?", "di chi presentatori è (X)?", "Elenca i presentatore di (X).", "Elenca tutti i presentatori di (X).", "Mostrami l' presentatore di (X).", "Mostrami l' presentatori di (X).", "quale presentatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "327",
    "lexicalEntryUri" : "http://localhost:8080#presenter-of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presentatore di (X)?", "la presentatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#pages",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i pagine di (X).", "Dammi la pagine di (X).", "Dammi tutti i pagine di (X).", "di chi pagine è (X)?", "Elenca tutti i pagine di (X).", "Mostrami l' pagine di (X).", "qual erano pagine di (X)??", "qual sono pagine di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i movimenti artistici di (X).", "Dammi la movimenti artistici di (X).", "Dammi la movimento artistico di (X).", "Dammi tutti i movimenti artistici di (X).", "Dammi tutti i movimento artistico di (X).", "di chi movimenti artistici è (X)?", "di qual movimento artistico è (X)?", "Elenca i movimento artistico di (X).", "Elenca tutti i movimenti artistici di (X).", "Mostrami l' movimenti artistici di (X).", "Mostrami l' movimento artistico di (X).", "qual era movimento artistico di (X)??", "qual erano movimenti artistici di (X)??", "qual sono movimenti artistici di (X)??", "qual è movimento artistico di (X)??", "quale movimento artistico ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' movimento artistico di (X)?", "la movimento artistico di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "331",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i movimenti artistici di (X).", "Dammi la movimenti artistici di (X).", "Dammi la movimento artistico di (X).", "Dammi tutti i movimenti artistici di (X).", "Dammi tutti i movimento artistico di (X).", "di chi movimenti artistici è (X)?", "di qual movimento artistico è (X)?", "Elenca i movimento artistico di (X).", "Elenca tutti i movimenti artistici di (X).", "Mostrami l' movimenti artistici di (X).", "Mostrami l' movimento artistico di (X).", "qual era movimento artistico di (X)??", "qual erano movimenti artistici di (X)??", "qual sono movimenti artistici di (X)??", "qual è movimento artistico di (X)??", "quale movimento artistico ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "332",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' movimento artistico di (X)?", "la movimento artistico di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i movimenti artistici di (X).", "Dammi la movimenti artistici di (X).", "Dammi la movimento artistico di (X).", "Dammi tutti i movimenti artistici di (X).", "Dammi tutti i movimento artistico di (X).", "di chi movimenti artistici è (X)?", "di qual movimento artistico è (X)?", "Elenca i movimento artistico di (X).", "Elenca tutti i movimenti artistici di (X).", "Mostrami l' movimenti artistici di (X).", "Mostrami l' movimento artistico di (X).", "qual era movimento artistico di (X)??", "qual erano movimenti artistici di (X)??", "qual sono movimenti artistici di (X)??", "qual è movimento artistico di (X)??", "quale movimento artistico ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#artisticMovement_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Artist" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' movimento artistico di (X)?", "la movimento artistico di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/movement> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "335",
    "lexicalEntryUri" : "http://localhost:8080#coach",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era allenatore di (X)??", "chi è allenatore di (X)??", "Dammi la allenatore di (X).", "Dammi tutti i allenatore di (X).", "di chi allenatore è (X)?", "Elenca i allenatore di (X).", "Mostrami l' allenatore di (X).", "quale allenatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "336",
    "lexicalEntryUri" : "http://localhost:8080#coach",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' allenatore di (X)?", "la allenatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "337",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di studenti di (X).", "Dammi tutti i numero di studenti di (X).", "di qual numero di studenti è (X)?", "Elenca i numero di studenti di (X).", "Mostrami l' numero di studenti di (X).", "qual era numero di studenti di (X)??", "qual è numero di studenti di (X)??", "quale numero di studenti ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStudents-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "EducationalInstitution" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di studenti di (X)?", "la numero di studenti di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfStudents> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#countryCode-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la codice nazionale di (X).", "Dammi tutti i codice nazionale di (X).", "di qual codice nazionale è (X)?", "Elenca i codice nazionale di (X).", "Mostrami l' codice nazionale di (X).", "qual era codice nazionale di (X)??", "qual è codice nazionale di (X)??", "quale codice nazionale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/countryCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "340",
    "lexicalEntryUri" : "http://localhost:8080#countryCode-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' codice nazionale di (X)?", "la codice nazionale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/countryCode> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "341",
    "lexicalEntryUri" : "http://localhost:8080#areaTotal-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i redditi netti di (X).", "Dammi la area totale di (X).", "Dammi la redditi netti di (X).", "Dammi tutti i area totale di (X).", "Dammi tutti i redditi netti di (X).", "di chi redditi netti è (X)?", "di qual area totale è (X)?", "Elenca i area totale di (X).", "Elenca tutti i redditi netti di (X).", "Mostrami l' area totale di (X).", "Mostrami l' redditi netti di (X).", "qual era area totale di (X)??", "qual erano redditi netti di (X)??", "qual sono redditi netti di (X)??", "qual è area totale di (X)??", "quale area totale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "342",
    "lexicalEntryUri" : "http://localhost:8080#areaTotal-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' area totale di (X)?", "la area totale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i influenze di (X).", "chi era influenza di (X)??", "chi erano influenze di (X)??", "chi sono influenze di (X)??", "chi è influenza di (X)??", "Dammi la influenza di (X).", "Dammi la influenze di (X).", "Dammi tutti i influenza di (X).", "Dammi tutti i influenze di (X).", "di chi influenza è (X)?", "di chi influenze è (X)?", "Elenca i influenza di (X).", "Elenca tutti i influenze di (X).", "Mostrami l' influenza di (X).", "Mostrami l' influenze di (X).", "quale influenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' influenza di (X)?", "la influenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "345",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i influenze di (X).", "chi era influenza di (X)??", "chi erano influenze di (X)??", "chi sono influenze di (X)??", "chi è influenza di (X)??", "Dammi la influenza di (X).", "Dammi la influenze di (X).", "Dammi tutti i influenza di (X).", "Dammi tutti i influenze di (X).", "di chi influenza è (X)?", "di chi influenze è (X)?", "Elenca i influenza di (X).", "Elenca tutti i influenze di (X).", "Mostrami l' influenza di (X).", "Mostrami l' influenze di (X).", "quale influenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "346",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' influenza di (X)?", "la influenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i influenze di (X).", "chi era influenza di (X)??", "chi erano influenze di (X)??", "chi sono influenze di (X)??", "chi è influenza di (X)??", "Dammi la influenza di (X).", "Dammi la influenze di (X).", "Dammi tutti i influenza di (X).", "Dammi tutti i influenze di (X).", "di chi influenza è (X)?", "di chi influenze è (X)?", "Elenca i influenza di (X).", "Elenca tutti i influenze di (X).", "Mostrami l' influenza di (X).", "Mostrami l' influenze di (X).", "quale influenza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#influencer_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' influenza di (X)?", "la influenza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#countryOf",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la nazione di (X).", "Dammi tutti i nazione di (X).", "di qual nazione è (X)?", "Elenca i nazione di (X).", "Mostrami l' nazione di (X).", "qual era nazione di (X)??", "qual è nazione di (X)??", "quale nazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "350",
    "lexicalEntryUri" : "http://localhost:8080#countryOf",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazione di (X)?", "la nazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundationPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "351",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttori è (X)?", "di qual produttore è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "qual era produttore di (X)??", "qual erano produttori di (X)??", "qual sono produttori di (X)??", "qual è produttore di (X)??", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produttori di (X).", "Dammi la produttore di (X).", "Dammi la produttori di (X).", "Dammi tutti i produttore di (X).", "Dammi tutti i produttori di (X).", "di chi produttori è (X)?", "di qual produttore è (X)?", "Elenca i produttore di (X).", "Elenca tutti i produttori di (X).", "Mostrami l' produttore di (X).", "Mostrami l' produttori di (X).", "qual era produttore di (X)??", "qual erano produttori di (X)??", "qual sono produttori di (X)??", "qual è produttore di (X)??", "quale produttore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#recordLabel_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Genre" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produttore di (X)?", "la produttore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/RecordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "355",
    "lexicalEntryUri" : "http://localhost:8080#members",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i membri di (X).", "chi era imembro di (X)??", "chi erano membri di (X)??", "chi sono membri di (X)??", "chi è imembro di (X)??", "Dammi la imembro di (X).", "Dammi la membri di (X).", "Dammi tutti i imembro di (X).", "Dammi tutti i membri di (X).", "di chi imembro è (X)?", "di chi membri è (X)?", "Elenca i imembro di (X).", "Elenca tutti i membri di (X).", "Mostrami l' imembro di (X).", "Mostrami l' membri di (X).", "quale imembro ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "356",
    "lexicalEntryUri" : "http://localhost:8080#members",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' imembro di (X)?", "la imembro di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la autobiografia di (X).", "Dammi tutti i autobiografia di (X).", "di qual autobiografia è (X)?", "Elenca i autobiografia di (X).", "Mostrami l' autobiografia di (X).", "qual era autobiografia di (X)??", "qual è autobiografia di (X)??", "quale autobiografia ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autobiografia di (X)?", "la autobiografia di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la autobiografia di (X).", "Dammi tutti i autobiografia di (X).", "di qual autobiografia è (X)?", "Elenca i autobiografia di (X).", "Mostrami l' autobiografia di (X).", "qual era autobiografia di (X)??", "qual è autobiografia di (X)??", "quale autobiografia ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "360",
    "lexicalEntryUri" : "http://localhost:8080#autobiography-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autobiografia di (X)?", "la autobiografia di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/literaryGenre> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "361",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i mogli di (X).", "chi era moglie di (X)??", "chi erano mogli di (X)??", "chi sono mogli di (X)??", "chi è moglie di (X)??", "Dammi la mogli di (X).", "Dammi la moglie di (X).", "Dammi tutti i mogli di (X).", "Dammi tutti i moglie di (X).", "di chi mogli è (X)?", "di chi moglie è (X)?", "Elenca i moglie di (X).", "Elenca tutti i mogli di (X).", "Mostrami l' mogli di (X).", "Mostrami l' moglie di (X).", "quale moglie ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' moglie di (X)?", "la moglie di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i mogli di (X).", "chi era moglie di (X)??", "chi erano mogli di (X)??", "chi sono mogli di (X)??", "chi è moglie di (X)??", "Dammi la mogli di (X).", "Dammi la moglie di (X).", "Dammi tutti i mogli di (X).", "Dammi tutti i moglie di (X).", "di chi mogli è (X)?", "di chi moglie è (X)?", "Elenca i moglie di (X).", "Elenca tutti i mogli di (X).", "Mostrami l' mogli di (X).", "Mostrami l' moglie di (X).", "quale moglie ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#wife-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' moglie di (X)?", "la moglie di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "365",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la posizione di (X).", "Dammi tutti i posizione di (X).", "di qual posizione è (X)?", "Elenca i posizione di (X).", "Mostrami l' posizione di (X).", "qual era posizione di (X)??", "qual è posizione di (X)??", "quale posizione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' posizione di (X)?", "la posizione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la posizione di (X).", "Dammi tutti i posizione di (X).", "di qual posizione è (X)?", "Elenca i posizione di (X).", "Mostrami l' posizione di (X).", "qual era posizione di (X)??", "qual è posizione di (X)??", "quale posizione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#Location-of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' posizione di (X)?", "la posizione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produzioni di vino di (X).", "Dammi la produzione di vino di (X).", "Dammi la produzioni di vino di (X).", "Dammi tutti i produzione di vino di (X).", "Dammi tutti i produzioni di vino di (X).", "di chi produzioni di vino è (X)?", "di qual produzione di vino è (X)?", "Elenca i produzione di vino di (X).", "Elenca tutti i produzioni di vino di (X).", "Mostrami l' produzione di vino di (X).", "Mostrami l' produzioni di vino di (X).", "qual era produzione di vino di (X)??", "qual erano produzioni di vino di (X)??", "qual sono produzioni di vino di (X)??", "qual è produzione di vino di (X)??", "quale produzione di vino ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "370",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produzione di vino di (X)?", "la produzione di vino di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i produzioni di vino di (X).", "Dammi la produzione di vino di (X).", "Dammi la produzioni di vino di (X).", "Dammi tutti i produzione di vino di (X).", "Dammi tutti i produzioni di vino di (X).", "di chi produzioni di vino è (X)?", "di qual produzione di vino è (X)?", "Elenca i produzione di vino di (X).", "Elenca tutti i produzioni di vino di (X).", "Mostrami l' produzione di vino di (X).", "Mostrami l' produzioni di vino di (X).", "qual era produzione di vino di (X)??", "qual erano produzioni di vino di (X)??", "qual sono produzioni di vino di (X)??", "qual è produzione di vino di (X)??", "quale produzione di vino ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#wine_production-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Location" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' produzione di vino di (X)?", "la produzione di vino di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineProduced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#gamesBy",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i giochi di (X).", "chi era gioco di (X)??", "chi erano giochi di (X)??", "chi sono giochi di (X)??", "chi è gioco di (X)??", "Dammi la giochi di (X).", "Dammi la gioco di (X).", "Dammi tutti i giochi di (X).", "Dammi tutti i gioco di (X).", "di chi giochi è (X)?", "di chi gioco è (X)?", "Elenca i gioco di (X).", "Elenca tutti i giochi di (X).", "Mostrami l' giochi di (X).", "Mostrami l' gioco di (X).", "quale gioco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#gamesBy",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' gioco di (X)?", "la gioco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#presenter-of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i presentatrici di (X).", "chi era presentatrice di (X)??", "chi erano presentatrici di (X)??", "chi sono presentatrici di (X)??", "chi è presentatrice di (X)??", "Dammi la presentatrice di (X).", "Dammi la presentatrici di (X).", "Dammi tutti i presentatrice di (X).", "Dammi tutti i presentatrici di (X).", "di chi presentatrice è (X)?", "di chi presentatrici è (X)?", "Elenca i presentatrice di (X).", "Elenca tutti i presentatrici di (X).", "Mostrami l' presentatrice di (X).", "Mostrami l' presentatrici di (X).", "quale presentatrice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#presenter-of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presentatrice di (X)?", "la presentatrice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "377",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di pagine di (X).", "Dammi tutti i numero di pagine di (X).", "di qual numero di pagine è (X)?", "Elenca i numero di pagine di (X).", "Mostrami l' numero di pagine di (X).", "qual era numero di pagine di (X)??", "qual è numero di pagine di (X)??", "quale numero di pagine ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di pagine di (X)?", "la numero di pagine di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "379",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di pagine di (X).", "Dammi tutti i numero di pagine di (X).", "di qual numero di pagine è (X)?", "Elenca i numero di pagine di (X).", "Mostrami l' numero di pagine di (X).", "qual era numero di pagine di (X)??", "qual è numero di pagine di (X)??", "quale numero di pagine ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di pagine di (X)?", "la numero di pagine di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la numero di pagine di (X).", "Dammi tutti i numero di pagine di (X).", "di qual numero di pagine è (X)?", "Elenca i numero di pagine di (X).", "Mostrami l' numero di pagine di (X).", "qual era numero di pagine di (X)??", "qual è numero di pagine di (X)??", "quale numero di pagine ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "382",
    "lexicalEntryUri" : "http://localhost:8080#numberOfPages-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di pagine di (X)?", "la numero di pagine di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#found",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatori di (X).", "chi era fondatore di (X)??", "chi erano fondatori di (X)??", "chi sono fondatori di (X)??", "chi è fondatore di (X)??", "Dammi la fondatore di (X).", "Dammi la fondatori di (X).", "Dammi tutti i fondatore di (X).", "Dammi tutti i fondatori di (X).", "di chi fondatore è (X)?", "di chi fondatori è (X)?", "Elenca i fondatore di (X).", "Elenca tutti i fondatori di (X).", "Mostrami l' fondatore di (X).", "Mostrami l' fondatori di (X).", "quale fondatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "384",
    "lexicalEntryUri" : "http://localhost:8080#found",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Pope" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatore di (X)?", "la fondatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#programming-language",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la linguaggio di programmazione di (X).", "Dammi tutti i linguaggio di programmazione di (X).", "di qual linguaggio di programmazione è (X)?", "Elenca i linguaggio di programmazione di (X).", "Mostrami l' linguaggio di programmazione di (X).", "qual era linguaggio di programmazione di (X)??", "qual è linguaggio di programmazione di (X)??", "quale linguaggio di programmazione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#programming-language",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "ProgrammingLanguage" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' linguaggio di programmazione di (X)?", "la linguaggio di programmazione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "387",
    "lexicalEntryUri" : "http://localhost:8080#vero_nome_de",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i vero nome di (X).", "Dammi la vero nome di (X).", "Dammi tutti i vero nome di (X).", "di chi vero nome è (X)?", "di qual vero nome è (X)?", "Elenca i vero nome di (X).", "Elenca tutti i vero nome di (X).", "Mostrami l' vero nome di (X).", "qual era vero nome di (X)??", "qual erano vero nome di (X)??", "qual sono vero nome di (X)??", "qual è vero nome di (X)??", "quale vero nome ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#vero_nome_de",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' vero nome di (X)?", "la vero nome di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "389",
    "lexicalEntryUri" : "http://localhost:8080#leader_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i re dei (X).", "chi era re dei (X)??", "chi erano re dei (X)??", "chi sono re dei (X)??", "chi è re dei (X)??", "Dammi la re dei (X).", "Dammi tutti i re dei (X).", "dei chi re è (X)?", "Elenca i re dei (X).", "Elenca tutti i re dei (X).", "Mostrami l' re dei (X).", "quale re ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#leader_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' re dei (X)?", "la re dei (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#spouse-of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i creatori di (X).", "chi era moglie di (X)??", "chi erano creatori di (X)??", "chi sono creatori di (X)??", "chi è moglie di (X)??", "Dammi la creatori di (X).", "Dammi la moglie di (X).", "Dammi tutti i creatori di (X).", "Dammi tutti i moglie di (X).", "di chi creatori è (X)?", "di chi moglie è (X)?", "Elenca i moglie di (X).", "Elenca tutti i creatori di (X).", "Mostrami l' creatori di (X).", "Mostrami l' moglie di (X).", "quale moglie ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#spouse-of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' moglie di (X)?", "la moglie di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "393",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era sindaco di (X)??", "chi è sindaco di (X)??", "Dammi la sindaco di (X).", "Dammi tutti i sindaco di (X).", "di chi sindaco è (X)?", "Elenca i sindaco di (X).", "Mostrami l' sindaco di (X).", "quale sindaco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "394",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sindaco di (X)?", "la sindaco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la paese più grande di (X).", "Dammi tutti i paese più grande di (X).", "di qual paese più grande è (X)?", "Elenca i paese più grande di (X).", "Mostrami l' paese più grande di (X).", "qual era paese più grande di (X)??", "qual è paese più grande di (X)??", "quale paese più grande ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' paese più grande di (X)?", "la paese più grande di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la paese più grande di (X).", "Dammi tutti i paese più grande di (X).", "di qual paese più grande è (X)?", "Elenca i paese più grande di (X).", "Mostrami l' paese più grande di (X).", "qual era paese più grande di (X)??", "qual è paese più grande di (X)??", "quale paese più grande ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "398",
    "lexicalEntryUri" : "http://localhost:8080#largest_country_in",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' paese più grande di (X)?", "la paese più grande di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "399",
    "lexicalEntryUri" : "http://localhost:8080#autobiography",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la autobiografia di (X).", "Dammi tutti i autobiografia di (X).", "di qual autobiografia è (X)?", "Elenca i autobiografia di (X).", "Mostrami l' autobiografia di (X).", "qual era autobiografia di (X)??", "qual è autobiografia di (X)??", "quale autobiografia ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#autobiography",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autobiografia di (X)?", "la autobiografia di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "402",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "403",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#elevation-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di nascita di (X).", "Dammi tutti i luogo di nascita di (X).", "di qual luogo di nascita è (X)?", "Elenca i luogo di nascita di (X).", "Mostrami l' luogo di nascita di (X).", "qual era luogo di nascita di (X)??", "qual è luogo di nascita di (X)??", "quale luogo di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "406",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di nascita di (X)?", "la luogo di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "407",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di nascita di (X).", "Dammi tutti i luogo di nascita di (X).", "di qual luogo di nascita è (X)?", "Elenca i luogo di nascita di (X).", "Mostrami l' luogo di nascita di (X).", "qual era luogo di nascita di (X)??", "qual è luogo di nascita di (X)??", "quale luogo di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "408",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di nascita di (X)?", "la luogo di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la luogo di nascita di (X).", "Dammi tutti i luogo di nascita di (X).", "di qual luogo di nascita è (X)?", "Elenca i luogo di nascita di (X).", "Mostrami l' luogo di nascita di (X).", "qual era luogo di nascita di (X)??", "qual è luogo di nascita di (X)??", "quale luogo di nascita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#birthPlace_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' luogo di nascita di (X)?", "la luogo di nascita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "411",
    "lexicalEntryUri" : "http://localhost:8080#gross-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la guadagno di (X).", "Dammi tutti i guadagno di (X).", "di qual guadagno è (X)?", "Elenca i guadagno di (X).", "Mostrami l' guadagno di (X).", "qual era guadagno di (X)??", "qual è guadagno di (X)??", "quale guadagno ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/gross> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "412",
    "lexicalEntryUri" : "http://localhost:8080#gross-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' guadagno di (X)?", "la guadagno di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/gross> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "413",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la capitale di (X).", "Dammi tutti i capitale di (X).", "di qual capitale è (X)?", "Elenca i capitale di (X).", "Mostrami l' capitale di (X).", "qual era capitale di (X)??", "qual è capitale di (X)??", "quale capitale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capitale di (X)?", "la capitale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la capitale di (X).", "Dammi tutti i capitale di (X).", "di qual capitale è (X)?", "Elenca i capitale di (X).", "Mostrami l' capitale di (X).", "qual era capitale di (X)??", "qual è capitale di (X)??", "quale capitale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "416",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capitale di (X)?", "la capitale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "417",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la capitale di (X).", "Dammi tutti i capitale di (X).", "di qual capitale è (X)?", "Elenca i capitale di (X).", "Mostrami l' capitale di (X).", "qual era capitale di (X)??", "qual è capitale di (X)??", "quale capitale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "418",
    "lexicalEntryUri" : "http://localhost:8080#capital-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' capitale di (X)?", "la capitale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#nicknames",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i soprannomi di (X).", "Dammi la soprannome di (X).", "Dammi la soprannomi di (X).", "Dammi tutti i soprannome di (X).", "Dammi tutti i soprannomi di (X).", "di chi soprannomi è (X)?", "di qual soprannome è (X)?", "Elenca i soprannome di (X).", "Elenca tutti i soprannomi di (X).", "Mostrami l' soprannome di (X).", "Mostrami l' soprannomi di (X).", "qual era soprannome di (X)??", "qual erano soprannomi di (X)??", "qual sono soprannomi di (X)??", "qual è soprannome di (X)??", "quale soprannome ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#nicknames",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' soprannome di (X)?", "la soprannome di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "421",
    "lexicalEntryUri" : "http://localhost:8080#episode_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i episodi di (X).", "Dammi la episodi di (X).", "Dammi la episodio di (X).", "Dammi tutti i episodi di (X).", "Dammi tutti i episodio di (X).", "di chi episodi è (X)?", "di qual episodio è (X)?", "Elenca i episodio di (X).", "Elenca tutti i episodi di (X).", "Mostrami l' episodi di (X).", "Mostrami l' episodio di (X).", "qual era episodio di (X)??", "qual erano episodi di (X)??", "qual sono episodi di (X)??", "qual è episodio di (X)??", "quale episodio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "422",
    "lexicalEntryUri" : "http://localhost:8080#episode_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionEpisode" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' episodio di (X)?", "la episodio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "423",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data della morte di (X).", "Dammi tutti i data della morte di (X).", "di qual data della morte è (X)?", "Elenca i data della morte di (X).", "Mostrami l' data della morte di (X).", "qual era data della morte di (X)??", "qual è data della morte di (X)??", "quale data della morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "424",
    "lexicalEntryUri" : "http://localhost:8080#deathDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data della morte di (X)?", "la data della morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "425",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i costi di (X).", "Dammi la costi di (X).", "Dammi la costo di (X).", "Dammi tutti i costi di (X).", "Dammi tutti i costo di (X).", "di chi costi è (X)?", "di qual costo è (X)?", "Elenca i costo di (X).", "Elenca tutti i costi di (X).", "Mostrami l' costi di (X).", "Mostrami l' costo di (X).", "qual era costo di (X)??", "qual erano costi di (X)??", "qual sono costi di (X)??", "qual è costo di (X)??", "quale costo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "426",
    "lexicalEntryUri" : "http://localhost:8080#cost-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' costo di (X)?", "la costo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "427",
    "lexicalEntryUri" : "http://localhost:8080#nearestCity-to",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la ciittà più vicina di (X).", "Dammi tutti i ciittà più vicina di (X).", "di qual ciittà più vicina è (X)?", "Elenca i ciittà più vicina di (X).", "Mostrami l' ciittà più vicina di (X).", "qual era ciittà più vicina di (X)??", "qual è ciittà più vicina di (X)??", "quale ciittà più vicina ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nearestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "428",
    "lexicalEntryUri" : "http://localhost:8080#nearestCity-to",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ciittà più vicina di (X)?", "la ciittà più vicina di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nearestCity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "429",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di completamento di (X).", "Dammi tutti i data di completamento di (X).", "di qual data di completamento è (X)?", "Elenca i data di completamento di (X).", "Mostrami l' data di completamento di (X).", "qual era data di completamento di (X)??", "qual è data di completamento di (X)??", "quale data di completamento ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "430",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di completamento di (X)?", "la data di completamento di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "431",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di completamento di (X).", "Dammi tutti i data di completamento di (X).", "di qual data di completamento è (X)?", "Elenca i data di completamento di (X).", "Mostrami l' data di completamento di (X).", "qual era data di completamento di (X)??", "qual è data di completamento di (X)??", "quale data di completamento ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "432",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di completamento di (X)?", "la data di completamento di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "433",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di completamento di (X).", "Dammi tutti i data di completamento di (X).", "di qual data di completamento è (X)?", "Elenca i data di completamento di (X).", "Mostrami l' data di completamento di (X).", "qual era data di completamento di (X)??", "qual è data di completamento di (X)??", "quale data di completamento ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "434",
    "lexicalEntryUri" : "http://localhost:8080#completionDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di completamento di (X)?", "la data di completamento di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "435",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStaff",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i partiti di (X).", "Dammi la numero di dipendenti di (X).", "Dammi la partiti di (X).", "Dammi tutti i numero di dipendenti di (X).", "Dammi tutti i partiti di (X).", "di chi partiti è (X)?", "di qual numero di dipendenti è (X)?", "Elenca i numero di dipendenti di (X).", "Elenca tutti i partiti di (X).", "Mostrami l' numero di dipendenti di (X).", "Mostrami l' partiti di (X).", "qual era numero di dipendenti di (X)??", "qual erano partiti di (X)??", "qual sono partiti di (X)??", "qual è numero di dipendenti di (X)??", "quale numero di dipendenti ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/staff> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "436",
    "lexicalEntryUri" : "http://localhost:8080#numberOfStaff",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' numero di dipendenti di (X)?", "la numero di dipendenti di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/staff> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "437",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte of (X).", "Dammi tutti i data di morte of (X).", "Elenca i data di morte of (X).", "Mostrami l' data di morte of (X).", "of qual data di morte è (X)?", "qual era data di morte of (X)??", "qual è data di morte of (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "438",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte of (X)?", "la data di morte of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "439",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di morte of (X).", "Dammi tutti i data di morte of (X).", "Elenca i data di morte of (X).", "Mostrami l' data di morte of (X).", "of qual data di morte è (X)?", "qual era data di morte of (X)??", "qual è data di morte of (X)??", "quale data di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "440",
    "lexicalEntryUri" : "http://localhost:8080#DeathDate-of_2",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Royalty" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di morte of (X)?", "la data di morte of (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "441",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i professioni di (X).", "Dammi la durata di (X).", "Dammi la professioni di (X).", "Dammi tutti i durata di (X).", "Dammi tutti i professioni di (X).", "di chi professioni è (X)?", "di qual durata è (X)?", "Elenca i durata di (X).", "Elenca tutti i professioni di (X).", "Mostrami l' durata di (X).", "Mostrami l' professioni di (X).", "qual era durata di (X)??", "qual erano professioni di (X)??", "qual sono professioni di (X)??", "qual è durata di (X)??", "quale durata ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/runtime> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "442",
    "lexicalEntryUri" : "http://localhost:8080#runtime-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' durata di (X)?", "la durata di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/runtime> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "443",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autori di (X).", "chi era autore di (X)??", "chi erano autori di (X)??", "chi sono autori di (X)??", "chi è autore di (X)??", "Dammi la autore di (X).", "Dammi la autori di (X).", "Dammi tutti i autore di (X).", "Dammi tutti i autori di (X).", "di chi autore è (X)?", "di chi autori è (X)?", "Elenca i autore di (X).", "Elenca tutti i autori di (X).", "Mostrami l' autore di (X).", "Mostrami l' autori di (X).", "quale autore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "444",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autore di (X)?", "la autore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "445",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autori di (X).", "chi era autore di (X)??", "chi erano autori di (X)??", "chi sono autori di (X)??", "chi è autore di (X)??", "Dammi la autore di (X).", "Dammi la autori di (X).", "Dammi tutti i autore di (X).", "Dammi tutti i autori di (X).", "di chi autore è (X)?", "di chi autori è (X)?", "Elenca i autore di (X).", "Elenca tutti i autori di (X).", "Mostrami l' autore di (X).", "Mostrami l' autori di (X).", "quale autore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "446",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autore di (X)?", "la autore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "447",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autori di (X).", "chi era autore di (X)??", "chi erano autori di (X)??", "chi sono autori di (X)??", "chi è autore di (X)??", "Dammi la autore di (X).", "Dammi la autori di (X).", "Dammi tutti i autore di (X).", "Dammi tutti i autori di (X).", "di chi autore è (X)?", "di chi autori è (X)?", "Elenca i autore di (X).", "Elenca tutti i autori di (X).", "Mostrami l' autore di (X).", "Mostrami l' autori di (X).", "quale autore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "448",
    "lexicalEntryUri" : "http://localhost:8080#author_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autore di (X)?", "la autore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "449",
    "lexicalEntryUri" : "http://localhost:8080#designer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i attori di (X).", "chi era ideatore di (X)??", "chi erano attori di (X)??", "chi sono attori di (X)??", "chi è ideatore di (X)??", "Dammi la attori di (X).", "Dammi la ideatore di (X).", "Dammi tutti i attori di (X).", "Dammi tutti i ideatore di (X).", "di chi attori è (X)?", "di chi ideatore è (X)?", "Elenca i ideatore di (X).", "Elenca tutti i attori di (X).", "Mostrami l' attori di (X).", "Mostrami l' ideatore di (X).", "quale ideatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "450",
    "lexicalEntryUri" : "http://localhost:8080#designer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' ideatore di (X)?", "la ideatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "451",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fondatori di (X).", "chi era fondatore di (X)??", "chi erano fondatori di (X)??", "chi sono fondatori di (X)??", "chi è fondatore di (X)??", "Dammi la fondatore di (X).", "Dammi la fondatori di (X).", "Dammi tutti i fondatore di (X).", "Dammi tutti i fondatori di (X).", "di chi fondatore è (X)?", "di chi fondatori è (X)?", "Elenca i fondatore di (X).", "Elenca tutti i fondatori di (X).", "Mostrami l' fondatore di (X).", "Mostrami l' fondatori di (X).", "quale fondatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parentCompany> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "452",
    "lexicalEntryUri" : "http://localhost:8080#founder_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fondatore di (X)?", "la fondatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parentCompany> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "453",
    "lexicalEntryUri" : "http://localhost:8080#revenueYear-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i inni di (X).", "Dammi la anno del reddito dichiarato di (X).", "Dammi la inni di (X).", "Dammi tutti i anno del reddito dichiarato di (X).", "Dammi tutti i inni di (X).", "di chi inni è (X)?", "di qual anno del reddito dichiarato è (X)?", "Elenca i anno del reddito dichiarato di (X).", "Elenca tutti i inni di (X).", "Mostrami l' anno del reddito dichiarato di (X).", "Mostrami l' inni di (X).", "qual era anno del reddito dichiarato di (X)??", "qual erano inni di (X)??", "qual sono inni di (X)??", "qual è anno del reddito dichiarato di (X)??", "quale anno del reddito dichiarato ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/revenueYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "454",
    "lexicalEntryUri" : "http://localhost:8080#revenueYear-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' anno del reddito dichiarato di (X)?", "la anno del reddito dichiarato di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/revenueYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "455",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la data di uscita di (X).", "Dammi tutti i data di uscita di (X).", "di qual data di uscita è (X)?", "Elenca i data di uscita di (X).", "Mostrami l' data di uscita di (X).", "qual era data di uscita di (X)??", "qual è data di uscita di (X)??", "quale data di uscita ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "456",
    "lexicalEntryUri" : "http://localhost:8080#releaseDate-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Song" ],
    "returnType" : [ "date" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' data di uscita di (X)?", "la data di uscita di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/releaseDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "457",
    "lexicalEntryUri" : "http://localhost:8080#operatingIncome-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i genitori di (X).", "Dammi la genitori di (X).", "Dammi la reddito operativo di (X).", "Dammi tutti i genitori di (X).", "Dammi tutti i reddito operativo di (X).", "di chi genitori è (X)?", "di qual reddito operativo è (X)?", "Elenca i reddito operativo di (X).", "Elenca tutti i genitori di (X).", "Mostrami l' genitori di (X).", "Mostrami l' reddito operativo di (X).", "qual era reddito operativo di (X)??", "qual erano genitori di (X)??", "qual sono genitori di (X)??", "qual è reddito operativo di (X)??", "quale reddito operativo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operatingIncome> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "458",
    "lexicalEntryUri" : "http://localhost:8080#operatingIncome-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' reddito operativo di (X)?", "la reddito operativo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operatingIncome> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "459",
    "lexicalEntryUri" : "http://localhost:8080#President-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la presidente di (X).", "Dammi tutti i presidente di (X).", "di qual presidente è (X)?", "Elenca i presidente di (X).", "Mostrami l' presidente di (X).", "qual era presidente di (X)??", "qual è presidente di (X)??", "quale presidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "460",
    "lexicalEntryUri" : "http://localhost:8080#President-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presidente di (X)?", "la presidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/office> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "461",
    "lexicalEntryUri" : "http://localhost:8080#President-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era presidente di (X)??", "chi è presidente di (X)??", "Dammi la presidente di (X).", "Dammi tutti i presidente di (X).", "di chi presidente è (X)?", "Elenca i presidente di (X).", "Mostrami l' presidente di (X).", "quale presidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "462",
    "lexicalEntryUri" : "http://localhost:8080#President-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' presidente di (X)?", "la presidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "463",
    "lexicalEntryUri" : "http://localhost:8080#launchPad",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i rampe di lancio di (X).", "chi era rampa di lancio di (X)??", "chi erano rampe di lancio di (X)??", "chi sono rampe di lancio di (X)??", "chi è rampa di lancio di (X)??", "Dammi la rampa di lancio di (X).", "Dammi la rampe di lancio di (X).", "Dammi tutti i rampa di lancio di (X).", "Dammi tutti i rampe di lancio di (X).", "di chi rampa di lancio è (X)?", "di chi rampe di lancio è (X)?", "Elenca i rampa di lancio di (X).", "Elenca tutti i rampe di lancio di (X).", "Mostrami l' rampa di lancio di (X).", "Mostrami l' rampe di lancio di (X).", "quale rampa di lancio ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "464",
    "lexicalEntryUri" : "http://localhost:8080#launchPad",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Company" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' rampa di lancio di (X)?", "la rampa di lancio di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "465",
    "lexicalEntryUri" : "http://localhost:8080#quartieri_de",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i quartieri di (X).", "Dammi la quartiere di (X).", "Dammi la quartieri di (X).", "Dammi tutti i quartiere di (X).", "Dammi tutti i quartieri di (X).", "di chi quartieri è (X)?", "di qual quartiere è (X)?", "Elenca i quartiere di (X).", "Elenca tutti i quartieri di (X).", "Mostrami l' quartiere di (X).", "Mostrami l' quartieri di (X).", "qual era quartiere di (X)??", "qual erano quartieri di (X)??", "qual sono quartieri di (X)??", "qual è quartiere di (X)??", "quale quartiere ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "466",
    "lexicalEntryUri" : "http://localhost:8080#quartieri_de",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' quartiere di (X)?", "la quartiere di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "467",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i regioni del vino di (X).", "Dammi la regione del vino di (X).", "Dammi la regioni del vino di (X).", "Dammi tutti i regione del vino di (X).", "Dammi tutti i regioni del vino di (X).", "di chi regioni del vino è (X)?", "di qual regione del vino è (X)?", "Elenca i regione del vino di (X).", "Elenca tutti i regioni del vino di (X).", "Mostrami l' regione del vino di (X).", "Mostrami l' regioni del vino di (X).", "qual era regione del vino di (X)??", "qual erano regioni del vino di (X)??", "qual sono regioni del vino di (X)??", "qual è regione del vino di (X)??", "quale regione del vino ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "468",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' regione del vino di (X)?", "la regione del vino di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "469",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i regioni del vino di (X).", "Dammi la regione del vino di (X).", "Dammi la regioni del vino di (X).", "Dammi tutti i regione del vino di (X).", "Dammi tutti i regioni del vino di (X).", "di chi regioni del vino è (X)?", "di qual regione del vino è (X)?", "Elenca i regione del vino di (X).", "Elenca tutti i regioni del vino di (X).", "Mostrami l' regione del vino di (X).", "Mostrami l' regioni del vino di (X).", "qual era regione del vino di (X)??", "qual erano regioni del vino di (X)??", "qual sono regioni del vino di (X)??", "qual è regione del vino di (X)??", "quale regione del vino ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "470",
    "lexicalEntryUri" : "http://localhost:8080#wine_region_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "Place" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' regione del vino di (X)?", "la regione del vino di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "471",
    "lexicalEntryUri" : "http://localhost:8080#purpose-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la obiettivo di (X).", "Dammi tutti i obiettivo di (X).", "di qual obiettivo è (X)?", "Elenca i obiettivo di (X).", "Mostrami l' obiettivo di (X).", "qual era obiettivo di (X)??", "qual è obiettivo di (X)??", "quale obiettivo ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/purpose> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "472",
    "lexicalEntryUri" : "http://localhost:8080#purpose-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' obiettivo di (X)?", "la obiettivo di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/purpose> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "473",
    "lexicalEntryUri" : "http://localhost:8080#author_of_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i autrice di (X).", "chi era autrice di (X)??", "chi erano autrice di (X)??", "chi sono autrice di (X)??", "chi è autrice di (X)??", "Dammi la autrice di (X).", "Dammi tutti i autrice di (X).", "di chi autrice è (X)?", "Elenca i autrice di (X).", "Elenca tutti i autrice di (X).", "Mostrami l' autrice di (X).", "quale autrice ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "474",
    "lexicalEntryUri" : "http://localhost:8080#author_of_f",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' autrice di (X)?", "la autrice di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "475",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la popolazione totale di (X).", "Dammi tutti i popolazione totale di (X).", "di qual popolazione totale è (X)?", "Elenca i popolazione totale di (X).", "Mostrami l' popolazione totale di (X).", "qual era popolazione totale di (X)??", "qual è popolazione totale di (X)??", "quale popolazione totale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "476",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' popolazione totale di (X)?", "la popolazione totale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "477",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la popolazione totale di (X).", "Dammi tutti i popolazione totale di (X).", "di qual popolazione totale è (X)?", "Elenca i popolazione totale di (X).", "Mostrami l' popolazione totale di (X).", "qual era popolazione totale di (X)??", "qual è popolazione totale di (X)??", "quale popolazione totale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "478",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' popolazione totale di (X)?", "la popolazione totale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "479",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la popolazione totale di (X).", "Dammi tutti i popolazione totale di (X).", "di qual popolazione totale è (X)?", "Elenca i popolazione totale di (X).", "Mostrami l' popolazione totale di (X).", "qual era popolazione totale di (X)??", "qual è popolazione totale di (X)??", "quale popolazione totale ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "480",
    "lexicalEntryUri" : "http://localhost:8080#populationTotal-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' popolazione totale di (X)?", "la popolazione totale di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "481",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fuso orario di (X).", "Dammi la fuso orario di (X).", "Dammi tutti i fuso orario di (X).", "di chi fuso orario è (X)?", "di qual fuso orario è (X)?", "Elenca i fuso orario di (X).", "Elenca tutti i fuso orario di (X).", "Mostrami l' fuso orario di (X).", "qual era fuso orario di (X)??", "qual erano fuso orario di (X)??", "qual sono fuso orario di (X)??", "qual è fuso orario di (X)??", "quale fuso orario ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timezone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "482",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fuso orario di (X)?", "la fuso orario di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timezone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "483",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fuso orario di (X).", "Dammi la fuso orario di (X).", "Dammi tutti i fuso orario di (X).", "di chi fuso orario è (X)?", "di qual fuso orario è (X)?", "Elenca i fuso orario di (X).", "Elenca tutti i fuso orario di (X).", "Mostrami l' fuso orario di (X).", "qual era fuso orario di (X)??", "qual erano fuso orario di (X)??", "qual sono fuso orario di (X)??", "qual è fuso orario di (X)??", "quale fuso orario ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timezone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "484",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fuso orario di (X)?", "la fuso orario di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timezone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "485",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i fuso orario di (X).", "Dammi la fuso orario di (X).", "Dammi tutti i fuso orario di (X).", "di chi fuso orario è (X)?", "di qual fuso orario è (X)?", "Elenca i fuso orario di (X).", "Elenca tutti i fuso orario di (X).", "Mostrami l' fuso orario di (X).", "qual era fuso orario di (X)??", "qual erano fuso orario di (X)??", "qual sono fuso orario di (X)??", "qual è fuso orario di (X)??", "quale fuso orario ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "486",
    "lexicalEntryUri" : "http://localhost:8080#timeZone-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' fuso orario di (X)?", "la fuso orario di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "487",
    "lexicalEntryUri" : "http://localhost:8080#actor-of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i attrici di (X).", "chi era attore di (X)??", "chi erano attrici di (X)??", "chi sono attrici di (X)??", "chi è attore di (X)??", "Dammi la attore di (X).", "Dammi la attrici di (X).", "Dammi tutti i attore di (X).", "Dammi tutti i attrici di (X).", "di chi attore è (X)?", "di chi attrici è (X)?", "Elenca i attore di (X).", "Elenca tutti i attrici di (X).", "Mostrami l' attore di (X).", "Mostrami l' attrici di (X).", "quale attore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/Actor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "488",
    "lexicalEntryUri" : "http://localhost:8080#actor-of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' attore di (X)?", "la attore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/Actor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "489",
    "lexicalEntryUri" : "http://localhost:8080#occupation-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la professione di (X).", "Dammi tutti i professione di (X).", "di qual professione è (X)?", "Elenca i professione di (X).", "Mostrami l' professione di (X).", "qual era professione di (X)??", "qual è professione di (X)??", "quale professione ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/occupation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "490",
    "lexicalEntryUri" : "http://localhost:8080#occupation-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' professione di (X)?", "la professione di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/occupation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "491",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la nazionalità dii (X).", "Dammi tutti i nazionalità dii (X).", "dii qual nazionalità è (X)?", "Elenca i nazionalità dii (X).", "Mostrami l' nazionalità dii (X).", "qual era nazionalità dii (X)??", "qual è nazionalità dii (X)??", "quale nazionalità ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "492",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazionalità dii (X)?", "la nazionalità dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "493",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la nazionalità dii (X).", "Dammi tutti i nazionalità dii (X).", "dii qual nazionalità è (X)?", "Elenca i nazionalità dii (X).", "Mostrami l' nazionalità dii (X).", "qual era nazionalità dii (X)??", "qual è nazionalità dii (X)??", "quale nazionalità ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "494",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazionalità dii (X)?", "la nazionalità dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "495",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la nazionalità dii (X).", "Dammi tutti i nazionalità dii (X).", "dii qual nazionalità è (X)?", "Elenca i nazionalità dii (X).", "Mostrami l' nazionalità dii (X).", "qual era nazionalità dii (X)??", "qual è nazionalità dii (X)??", "quale nazionalità ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "496",
    "lexicalEntryUri" : "http://localhost:8080#nationality_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' nazionalità dii (X)?", "la nazionalità dii (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "497",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i sviluppatori di (X).", "chi era sviluppatore di (X)??", "chi erano sviluppatori di (X)??", "chi sono sviluppatori di (X)??", "chi è sviluppatore di (X)??", "Dammi la sviluppatore di (X).", "Dammi la sviluppatori di (X).", "Dammi tutti i sviluppatore di (X).", "Dammi tutti i sviluppatori di (X).", "di chi sviluppatore è (X)?", "di chi sviluppatori è (X)?", "Elenca i sviluppatore di (X).", "Elenca tutti i sviluppatori di (X).", "Mostrami l' sviluppatore di (X).", "Mostrami l' sviluppatori di (X).", "quale sviluppatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "498",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sviluppatore di (X)?", "la sviluppatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "499",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i sviluppatori di (X).", "chi era sviluppatore di (X)??", "chi erano sviluppatori di (X)??", "chi sono sviluppatori di (X)??", "chi è sviluppatore di (X)??", "Dammi la sviluppatore di (X).", "Dammi la sviluppatori di (X).", "Dammi tutti i sviluppatore di (X).", "Dammi tutti i sviluppatori di (X).", "di chi sviluppatore è (X)?", "di chi sviluppatori è (X)?", "Elenca i sviluppatore di (X).", "Elenca tutti i sviluppatori di (X).", "Mostrami l' sviluppatore di (X).", "Mostrami l' sviluppatori di (X).", "quale sviluppatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "500",
    "lexicalEntryUri" : "http://localhost:8080#developer_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sviluppatore di (X)?", "la sviluppatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "501",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cause di morte di (X).", "Dammi la causa di morte di (X).", "Dammi la cause di morte di (X).", "Dammi tutti i causa di morte di (X).", "Dammi tutti i cause di morte di (X).", "di chi cause di morte è (X)?", "di qual causa di morte è (X)?", "Elenca i causa di morte di (X).", "Elenca tutti i cause di morte di (X).", "Mostrami l' causa di morte di (X).", "Mostrami l' cause di morte di (X).", "qual era causa di morte di (X)??", "qual erano cause di morte di (X)??", "qual sono cause di morte di (X)??", "qual è causa di morte di (X)??", "quale causa di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "502",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' causa di morte di (X)?", "la causa di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "503",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cause di morte di (X).", "Dammi la causa di morte di (X).", "Dammi la cause di morte di (X).", "Dammi tutti i causa di morte di (X).", "Dammi tutti i cause di morte di (X).", "di chi cause di morte è (X)?", "di qual causa di morte è (X)?", "Elenca i causa di morte di (X).", "Elenca tutti i cause di morte di (X).", "Mostrami l' causa di morte di (X).", "Mostrami l' cause di morte di (X).", "qual era causa di morte di (X)??", "qual erano cause di morte di (X)??", "qual sono cause di morte di (X)??", "qual è causa di morte di (X)??", "quale causa di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "504",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' causa di morte di (X)?", "la causa di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "505",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i cause di morte di (X).", "Dammi la causa di morte di (X).", "Dammi la cause di morte di (X).", "Dammi tutti i causa di morte di (X).", "Dammi tutti i cause di morte di (X).", "di chi cause di morte è (X)?", "di qual causa di morte è (X)?", "Elenca i causa di morte di (X).", "Elenca tutti i cause di morte di (X).", "Mostrami l' causa di morte di (X).", "Mostrami l' cause di morte di (X).", "qual era causa di morte di (X)??", "qual erano cause di morte di (X)??", "qual sono cause di morte di (X)??", "qual è causa di morte di (X)??", "quale causa di morte ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "506",
    "lexicalEntryUri" : "http://localhost:8080#causeOfDeath_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' causa di morte di (X)?", "la causa di morte di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "507",
    "lexicalEntryUri" : "http://localhost:8080#book_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i libri del (X).", "chi era libri del (X)??", "chi erano libri del (X)??", "chi sono libri del (X)??", "chi è libri del (X)??", "Dammi la libri del (X).", "Dammi tutti i libri del (X).", "del chi libri è (X)?", "Elenca i libri del (X).", "Elenca tutti i libri del (X).", "Mostrami l' libri del (X).", "quale libri ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "508",
    "lexicalEntryUri" : "http://localhost:8080#book_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' libri del (X)?", "la libri del (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/series> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "509",
    "lexicalEntryUri" : "http://localhost:8080#anthem-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la linno di (X).", "Dammi tutti i linno di (X).", "di qual linno è (X)?", "Elenca i linno di (X).", "Mostrami l' linno di (X).", "qual era linno di (X)??", "qual è linno di (X)??", "quale linno ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/anthem> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "510",
    "lexicalEntryUri" : "http://localhost:8080#anthem-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' linno di (X)?", "la linno di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/anthem> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "511",
    "lexicalEntryUri" : "http://localhost:8080#booksFromCollection",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i libri di (X).", "Dammi la libri di (X).", "Dammi tutti i libri di (X).", "di chi libri è (X)?", "Elenca tutti i libri di (X).", "Mostrami l' libri di (X).", "qual erano libri di (X)??", "qual sono libri di (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/series> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "512",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era successore di (X)??", "chi è successore di (X)??", "Dammi la successore di (X).", "Dammi tutti i successore di (X).", "di chi successore è (X)?", "Elenca i successore di (X).", "Mostrami l' successore di (X).", "quale successore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "513",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' successore di (X)?", "la successore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "514",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era successore di (X)??", "chi è successore di (X)??", "Dammi la successore di (X).", "Dammi tutti i successore di (X).", "di chi successore è (X)?", "Elenca i successore di (X).", "Mostrami l' successore di (X).", "quale successore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "515",
    "lexicalEntryUri" : "http://localhost:8080#successor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' successore di (X)?", "la successore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "516",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la lingua ufficiale  di (X).", "Dammi tutti i lingua ufficiale  di (X).", "di qual lingua ufficiale  è (X)?", "Elenca i lingua ufficiale  di (X).", "Mostrami l' lingua ufficiale  di (X).", "qual era lingua ufficiale  di (X)??", "qual è lingua ufficiale  di (X)??", "quale lingua ufficiale  ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "517",
    "lexicalEntryUri" : "http://localhost:8080#officialLanguage",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' lingua ufficiale  di (X)?", "la lingua ufficiale  di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "518",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i vice presidenti di (X).", "chi era vice presidente di (X)??", "chi erano vice presidenti di (X)??", "chi sono vice presidenti di (X)??", "chi è vice presidente di (X)??", "Dammi la vice presidente di (X).", "Dammi la vice presidenti di (X).", "Dammi tutti i vice presidente di (X).", "Dammi tutti i vice presidenti di (X).", "di chi vice presidente è (X)?", "di chi vice presidenti è (X)?", "Elenca i vice presidente di (X).", "Elenca tutti i vice presidenti di (X).", "Mostrami l' vice presidente di (X).", "Mostrami l' vice presidenti di (X).", "quale vice presidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "519",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' vice presidente di (X)?", "la vice presidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "520",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i vice presidenti di (X).", "chi era vice presidente di (X)??", "chi erano vice presidenti di (X)??", "chi sono vice presidenti di (X)??", "chi è vice presidente di (X)??", "Dammi la vice presidente di (X).", "Dammi la vice presidenti di (X).", "Dammi tutti i vice presidente di (X).", "Dammi tutti i vice presidenti di (X).", "di chi vice presidente è (X)?", "di chi vice presidenti è (X)?", "Elenca i vice presidente di (X).", "Elenca tutti i vice presidenti di (X).", "Mostrami l' vice presidente di (X).", "Mostrami l' vice presidenti di (X).", "quale vice presidente ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "521",
    "lexicalEntryUri" : "http://localhost:8080#vice_president_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' vice presidente di (X)?", "la vice presidente di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "522",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i creatrici di (X).", "chi era creatore di (X)??", "chi erano creatrici di (X)??", "chi sono creatrici di (X)??", "chi è creatore di (X)??", "Dammi la creatore di (X).", "Dammi la creatrici di (X).", "Dammi tutti i creatore di (X).", "Dammi tutti i creatrici di (X).", "di chi creatore è (X)?", "di chi creatrici è (X)?", "Elenca i creatore di (X).", "Elenca tutti i creatrici di (X).", "Mostrami l' creatore di (X).", "Mostrami l' creatrici di (X).", "quale creatore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "523",
    "lexicalEntryUri" : "http://localhost:8080#creator_of_m",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Agent" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' creatore di (X)?", "la creatore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "524",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era sindaco di (X)??", "chi è sindaco di (X)??", "Dammi la sindaco di (X).", "Dammi tutti i sindaco di (X).", "di chi sindaco è (X)?", "Elenca i sindaco di (X).", "Mostrami l' sindaco di (X).", "quale sindaco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "525",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sindaco di (X)?", "la sindaco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "526",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era sindaco di (X)??", "chi è sindaco di (X)??", "Dammi la sindaco di (X).", "Dammi tutti i sindaco di (X).", "di chi sindaco è (X)?", "Elenca i sindaco di (X).", "Mostrami l' sindaco di (X).", "quale sindaco ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "527",
    "lexicalEntryUri" : "http://localhost:8080#mayor_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' sindaco di (X)?", "la sindaco di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "528",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i soprannomi di (X).", "Dammi la soprannome di (X).", "Dammi la soprannomi di (X).", "Dammi tutti i soprannome di (X).", "Dammi tutti i soprannomi di (X).", "di chi soprannomi è (X)?", "di qual soprannome è (X)?", "Elenca i soprannome di (X).", "Elenca tutti i soprannomi di (X).", "Mostrami l' soprannome di (X).", "Mostrami l' soprannomi di (X).", "qual era soprannome di (X)??", "qual erano soprannomi di (X)??", "qual sono soprannomi di (X)??", "qual è soprannome di (X)??", "quale soprannome ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "529",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' soprannome di (X)?", "la soprannome di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "530",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " i soprannomi di (X).", "Dammi la soprannome di (X).", "Dammi la soprannomi di (X).", "Dammi tutti i soprannome di (X).", "Dammi tutti i soprannomi di (X).", "di chi soprannomi è (X)?", "di qual soprannome è (X)?", "Elenca i soprannome di (X).", "Elenca tutti i soprannomi di (X).", "Mostrami l' soprannome di (X).", "Mostrami l' soprannomi di (X).", "qual era soprannome di (X)??", "qual erano soprannomi di (X)??", "qual sono soprannomi di (X)??", "qual è soprannome di (X)??", "quale soprannome ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "531",
    "lexicalEntryUri" : "http://localhost:8080#nickname_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' soprannome di (X)?", "la soprannome di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "532",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "533",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "534",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Dammi la altezza di (X).", "Dammi tutti i altezza di (X).", "di qual altezza è (X)?", "Elenca i altezza di (X).", "Mostrami l' altezza di (X).", "qual era altezza di (X)??", "qual è altezza di (X)??", "quale altezza ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "535",
    "lexicalEntryUri" : "http://localhost:8080#height_of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' altezza di (X)?", "la altezza di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "536",
    "lexicalEntryUri" : "http://localhost:8080#writer-of",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi era scrittore di (X)??", "chi è scrittore di (X)??", "Dammi la scrittore di (X).", "Dammi tutti i scrittore di (X).", "di chi scrittore è (X)?", "Elenca i scrittore di (X).", "Mostrami l' scrittore di (X).", "quale scrittore ha (X)??" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "537",
    "lexicalEntryUri" : "http://localhost:8080#writer-of",
    "language" : "IT",
    "type" : "NP",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "l' scrittore di (X)?", "la scrittore di (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "538",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "539",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "540",
    "lexicalEntryUri" : "http://localhost:8080#to_create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "541",
    "lexicalEntryUri" : "http://localhost:8080#to_program",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha programmato (X)", "Dammi tutti  chi hanno programmare (X)", "chi  (X)?", "chi ha programmato  (X)?", "chi ha programmato (X)?", "chi programmare  (X)?", "chi programmare (X)?", "cosa programmare (X)?", "quale (Y) ha programmato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) programmare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/programmer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "542",
    "lexicalEntryUri" : "http://localhost:8080#to_program",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  programmare da (X)", "Mostrami l'  ha programmato da (X)", "quale (Y) ha ha programmato (X)?", "quale (Y) ha programmato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "543",
    "lexicalEntryUri" : "http://localhost:8080#to_program",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) programmare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha programmato da (X)?", "quante (Y) sono programma da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/programmer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "544",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dirigere (X)", "Dammi tutti  chi hanno ha diretto (X)", "chi  (X)?", "chi dirigere  (X)?", "chi dirigere (X)?", "chi ha diretto  (X)?", "chi ha diretto (X)?", "cosa dirigere (X)?", "quale (Y) ha diretto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dirigere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "545",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dirigere da (X)", "Mostrami l'  ha diretto da (X)", "quale (Y) ha diretto da (X)?", "quale (Y) ha ha diretto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "546",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dirigere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dirige da (X)?", "quante (Y) sono ha diretto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "547",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dirigere (X)", "Dammi tutti  chi hanno ha diretto (X)", "chi  (X)?", "chi dirigere  (X)?", "chi dirigere (X)?", "chi ha diretto  (X)?", "chi ha diretto (X)?", "cosa dirigere (X)?", "quale (Y) ha diretto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dirigere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "548",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dirigere da (X)", "Mostrami l'  ha diretto da (X)", "quale (Y) ha diretto da (X)?", "quale (Y) ha ha diretto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "549",
    "lexicalEntryUri" : "http://localhost:8080#to_direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dirigere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dirige da (X)?", "quante (Y) sono ha diretto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "550",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport qual hanno servire (X)", "Dammi tutti airports qual hanno ha servito (X)", "chi  (X)?", "cosa servire (X)?", "qual ha servito (X)?", "qual ha servito airlines (X)?", "qual servire (X)?", "qual servire airline (X)?", "quale (Y) ha servito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) servire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "551",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airline servire da (X)", "Dammi tutti airlines servire da (X)", "Mostrami l' airline ha servito da (X)", "Mostrami l' airlines ha servito da (X)", "quale (Y) ha ha servito (X)?", "quale (Y) ha servito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "552",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) servire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha servito da (X)?", "quante (Y) sono serve da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "553",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport qual hanno servire (X)", "Dammi tutti airports qual hanno ha servito (X)", "chi  (X)?", "cosa servire (X)?", "qual ha servito (X)?", "qual ha servito airlines (X)?", "qual servire (X)?", "qual servire airline (X)?", "quale (Y) ha servito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) servire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "554",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airline servire da (X)", "Dammi tutti airlines servire da (X)", "Mostrami l' airline ha servito da (X)", "Mostrami l' airlines ha servito da (X)", "quale (Y) ha ha servito (X)?", "quale (Y) ha servito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "555",
    "lexicalEntryUri" : "http://localhost:8080#to_serve_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) servire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha servito da (X)?", "quante (Y) sono serve da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "556",
    "lexicalEntryUri" : "http://localhost:8080#to_support",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha supportato (X)", "Dammi tutti  chi hanno supportare (X)", "chi  (X)?", "chi ha supportato (X)?", "chi ha supportato ideologies (X)?", "chi supportare (X)?", "chi supportare ideology (X)?", "cosa supportare (X)?", "quale (Y) ha supportato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) supportare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ideology> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "557",
    "lexicalEntryUri" : "http://localhost:8080#to_support",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ideologies supportare da (X)", "Dammi tutti ideology supportare da (X)", "Mostrami l' ideologies ha supportato da (X)", "Mostrami l' ideology ha supportato da (X)", "quale (Y) ha ha supportato (X)?", "quale (Y) ha supportato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "558",
    "lexicalEntryUri" : "http://localhost:8080#to_support",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha supportato da (X)?", "quante (Y) sono supporta da (X)?", "quante (Y) supportare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ideology> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "559",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "560",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "561",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "562",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "563",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "564",
    "lexicalEntryUri" : "http://localhost:8080#to_write_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "565",
    "lexicalEntryUri" : "http://localhost:8080#to_precede",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti album qual hanno precedere (X)", "Dammi tutti albums qual hanno ha preceduto (X)", "chi  (X)?", "cosa precedere (X)?", "qual ha preceduto (X)?", "qual ha preceduto albums (X)?", "qual precedere (X)?", "qual precedere album (X)?", "quale (Y) ha preceduto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) precedere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/prevTitle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "566",
    "lexicalEntryUri" : "http://localhost:8080#to_precede",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti album precedere da (X)", "Dammi tutti albums precedere da (X)", "Mostrami l' album ha preceduto da (X)", "Mostrami l' albums ha preceduto da (X)", "quale (Y) ha ha preceduto (X)?", "quale (Y) ha preceduto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "567",
    "lexicalEntryUri" : "http://localhost:8080#to_precede",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) precedere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha preceduto da (X)?", "quante (Y) sono precede da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/prevTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "568",
    "lexicalEntryUri" : "http://localhost:8080#to_drain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno drenare (X)", "Dammi tutti  qual hanno ha drenato (X)", "chi  (X)?", "cosa drenare (X)?", "qual drenare  (X)?", "qual drenare (X)?", "qual ha drenato  (X)?", "qual ha drenato (X)?", "quale (Y) ha drenato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) drenare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/outflow> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "569",
    "lexicalEntryUri" : "http://localhost:8080#to_drain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  drenare da (X)", "Mostrami l'  ha drenato da (X)", "quale (Y) ha drenato da (X)?", "quale (Y) ha ha drenato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "570",
    "lexicalEntryUri" : "http://localhost:8080#to_drain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) drenare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono drena da (X)?", "quante (Y) sono ha drenato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/outflow> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "571",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "572",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "573",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "574",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha pubblicato (X)", "Dammi tutti  qual hanno pubblicare (X)", "chi  (X)?", "cosa pubblicare (X)?", "qual ha pubblicato  (X)?", "qual ha pubblicato (X)?", "qual pubblicare  (X)?", "qual pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "575",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "576",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "577",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Publisher" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "578",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "579",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "580",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha pubblicato (X)", "Dammi tutti  qual hanno pubblicare (X)", "chi  (X)?", "cosa pubblicare (X)?", "qual ha pubblicato  (X)?", "qual ha pubblicato (X)?", "qual pubblicare  (X)?", "qual pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "581",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "582",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "583",
    "lexicalEntryUri" : "http://localhost:8080#to_join",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno si è unito (X)", "Dammi tutti  qual hanno unirsi (X)", "chi  (X)?", "cosa unirsi (X)?", "qual si è unito  (X)?", "qual si è unito (X)?", "qual unirsi  (X)?", "qual unirsi (X)?", "quale (Y) si è unito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) unirsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/riverMouth> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "584",
    "lexicalEntryUri" : "http://localhost:8080#to_join",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  unirsi da (X)", "Mostrami l'  si è unito da (X)", "quale (Y) ha si è unito (X)?", "quale (Y) si è unito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "585",
    "lexicalEntryUri" : "http://localhost:8080#to_join",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono si unisce da (X)?", "quante (Y) sono si è unito da (X)?", "quante (Y) unirsi da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/riverMouth> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "586",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha vinto (X)", "Dammi tutti  qual hanno vincere (X)", "chi è stato vinto (X)?", "cosa vincere (X)?", "qual ha vinto  (X)?", "qual ha vinto (X)?", "qual vincere  (X)?", "qual vincere (X)?", "quale (Y) ha vinto (X)?", "quale (Y) sono state è stato vinto da (X)?", "quali (Y) vincere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "587",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  vincere da (X)", "Mostrami l'  ha vinto da (X)", "quale (Y) ha ha vinto (X)?", "quale (Y) ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "588",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha vinto da (X)?", "quante (Y) sono vince da (X)?", "quante (Y) sono è stato vinto da (X)?", "quante (Y) vincere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "589",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha vinto (X)", "Dammi tutti  qual hanno vincere (X)", "chi è stato vinto (X)?", "cosa vincere (X)?", "qual ha vinto  (X)?", "qual ha vinto (X)?", "qual vincere  (X)?", "qual vincere (X)?", "quale (Y) ha vinto (X)?", "quale (Y) sono state è stato vinto da (X)?", "quali (Y) vincere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "590",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  vincere da (X)", "Mostrami l'  ha vinto da (X)", "quale (Y) ha ha vinto (X)?", "quale (Y) ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "591",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha vinto da (X)?", "quante (Y) sono vince da (X)?", "quante (Y) sono è stato vinto da (X)?", "quante (Y) vincere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "592",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Scientist" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha vinto (X)", "Dammi tutti  qual hanno vincere (X)", "chi è stato vinto (X)?", "cosa vincere (X)?", "qual ha vinto  (X)?", "qual ha vinto (X)?", "qual vincere  (X)?", "qual vincere (X)?", "quale (Y) ha vinto (X)?", "quale (Y) sono state è stato vinto da (X)?", "quali (Y) vincere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "593",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  vincere da (X)", "Mostrami l'  ha vinto da (X)", "quale (Y) ha ha vinto (X)?", "quale (Y) ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "594",
    "lexicalEntryUri" : "http://localhost:8080#to_win",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Scientist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha vinto da (X)?", "quante (Y) sono vince da (X)?", "quante (Y) sono è stato vinto da (X)?", "quante (Y) vincere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "595",
    "lexicalEntryUri" : "http://localhost:8080#to_edit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno curare (X)", "Dammi tutti  chi hanno curava (X)", "chi  (X)?", "chi curare (X)?", "chi curare academic journal (X)?", "chi curava (X)?", "chi curava academic journals (X)?", "cosa curare (X)?", "quale (Y) curava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) curare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "596",
    "lexicalEntryUri" : "http://localhost:8080#to_edit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti academic journal curare da (X)", "Dammi tutti academic journals curare da (X)", "Mostrami l' academic journal curava da (X)", "Mostrami l' academic journals curava da (X)", "quale (Y) curava da (X)?", "quale (Y) ha curava (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "597",
    "lexicalEntryUri" : "http://localhost:8080#to_edit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) curare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono cura da (X)?", "quante (Y) sono curava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/editor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "598",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dipingere (X)", "Dammi tutti  chi hanno ha dipinto (X)", "chi  (X)?", "chi dipingere (X)?", "chi ha dipinto (X)?", "cosa dipingere (X)?", "quale (Y) ha dipinto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dipingere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "599",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "quale (Y) ha dipinto da (X)?", "quale (Y) ha ha dipinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "600",
    "lexicalEntryUri" : "http://localhost:8080#to_paint_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dipingere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dipinge da (X)?", "quante (Y) sono ha dipinto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "601",
    "lexicalEntryUri" : "http://localhost:8080#to_lead",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno guidare (X)", "Dammi tutti  chi hanno guiidava (X)", "chi  (X)?", "chi guidare  (X)?", "chi guidare (X)?", "chi guiidava  (X)?", "chi guiidava (X)?", "cosa guidare (X)?", "quale (Y) guiidava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) guidare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/leaderName> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "602",
    "lexicalEntryUri" : "http://localhost:8080#to_lead",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  guidare da (X)", "Mostrami l'  guiidava da (X)", "quale (Y) guiidava da (X)?", "quale (Y) ha guiidava (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "603",
    "lexicalEntryUri" : "http://localhost:8080#to_lead",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) guidare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono guida da (X)?", "quante (Y) sono guiidava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/leaderName> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "604",
    "lexicalEntryUri" : "http://localhost:8080#to_producono",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Ship" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno producono (X)", "chi producono (X)?", "cosa producono (X)?", "qual producono  (X)?", "qual producono (X)?", "quale (Y) producono (X)?", "quale (Y) sono state producono da (X)?", "quali (Y) producono (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "605",
    "lexicalEntryUri" : "http://localhost:8080#to_producono",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  producono da (X)", "Mostrami l'  producono da (X)", "quale (Y) ha producono (X)?", "quale (Y) producono da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "606",
    "lexicalEntryUri" : "http://localhost:8080#to_producono",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) producono da (X)?", "quante (Y) sono producono da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "607",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "EthnicGroup" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno vivono (X)", "chi vivono (X)?", "cosa vivono (X)?", "qual vivono (X)?", "qual vivono ethnic group (X)?", "qual vivono ethnic groups (X)?", "quale (Y) sono state vivono in (X)?", "quale (Y) vivono (X)?", "quali (Y) vivono (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ethnicGroup> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "608",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ethnic group vivono in (X)", "Dammi tutti ethnic groups vivono in (X)", "Mostrami l' ethnic group vivono in (X)", "Mostrami l' ethnic groups vivono in (X)", "quale (Y) ha vivono (X)?", "quale (Y) vivono in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "609",
    "lexicalEntryUri" : "http://localhost:8080#to_live_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "EthnicGroup" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono vivono in (X)?", "quante (Y) vivono in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/ethnicGroup> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "610",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha vinto (X)", "Dammi tutti  qual hanno vincere (X)", "chi è stato vinto (X)?", "cosa vincere (X)?", "qual ha vinto  (X)?", "qual ha vinto (X)?", "qual vincere  (X)?", "qual vincere (X)?", "quale (Y) ha vinto (X)?", "quale (Y) sono state è stato vinto da (X)?", "quali (Y) vincere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "611",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  vincere da (X)", "Mostrami l'  ha vinto da (X)", "quale (Y) ha ha vinto (X)?", "quale (Y) ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "612",
    "lexicalEntryUri" : "http://localhost:8080#to_win_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha vinto da (X)?", "quante (Y) sono vince da (X)?", "quante (Y) sono è stato vinto da (X)?", "quante (Y) vincere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "613",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha suonato (X)", "Dammi tutti  chi hanno suonare (X)", "chi  (X)?", "chi ha suonato (X)?", "chi ha suonato musics (X)?", "chi suonare (X)?", "chi suonare music (X)?", "cosa suonare (X)?", "quale (Y) ha suonato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) suonare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "614",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti music suonare da (X)", "Dammi tutti musics suonare da (X)", "Mostrami l' music ha suonato da (X)", "Mostrami l' musics ha suonato da (X)", "quale (Y) ha ha suonato (X)?", "quale (Y) ha suonato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "615",
    "lexicalEntryUri" : "http://localhost:8080#to_perform_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha suonato da (X)?", "quante (Y) sono suona da (X)?", "quante (Y) suonare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "616",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dipingere (X)", "Dammi tutti  chi hanno ha dipinto (X)", "chi  (X)?", "chi dipingere  (X)?", "chi dipingere (X)?", "chi ha dipinto  (X)?", "chi ha dipinto (X)?", "cosa dipingere (X)?", "quale (Y) ha dipinto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dipingere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "617",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dipingere da (X)", "Mostrami l'  ha dipinto da (X)", "quale (Y) ha dipinto da (X)?", "quale (Y) ha ha dipinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "618",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dipingere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dipinge da (X)?", "quante (Y) sono ha dipinto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "619",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dipingere (X)", "Dammi tutti  chi hanno ha dipinto (X)", "chi  (X)?", "chi dipingere  (X)?", "chi dipingere (X)?", "chi ha dipinto  (X)?", "chi ha dipinto (X)?", "cosa dipingere (X)?", "quale (Y) ha dipinto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dipingere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "620",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dipingere da (X)", "Mostrami l'  ha dipinto da (X)", "quale (Y) ha dipinto da (X)?", "quale (Y) ha ha dipinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "621",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dipingere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dipinge da (X)?", "quante (Y) sono ha dipinto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "622",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dipingere (X)", "Dammi tutti  chi hanno ha dipinto (X)", "chi  (X)?", "chi dipingere (X)?", "chi ha dipinto (X)?", "cosa dipingere (X)?", "quale (Y) ha dipinto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dipingere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "623",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "quale (Y) ha dipinto da (X)?", "quale (Y) ha ha dipinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "624",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dipingere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dipinge da (X)?", "quante (Y) sono ha dipinto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "625",
    "lexicalEntryUri" : "http://localhost:8080#to_air",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti broadcaster qual hanno trasmettere (X)", "Dammi tutti broadcasters qual hanno ha trasmesso (X)", "chi  (X)?", "cosa trasmettere (X)?", "qual ha trasmesso  (X)?", "qual ha trasmesso (X)?", "qual trasmettere  (X)?", "qual trasmettere (X)?", "quale (Y) ha trasmesso (X)?", "quale (Y) sono state  da (X)?", "quali (Y) trasmettere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "626",
    "lexicalEntryUri" : "http://localhost:8080#to_air",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  trasmettere da (X)", "Mostrami l'  ha trasmesso da (X)", "quale (Y) ha ha trasmesso (X)?", "quale (Y) ha trasmesso da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "627",
    "lexicalEntryUri" : "http://localhost:8080#to_air",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha trasmesso da (X)?", "quante (Y) sono trasmette da (X)?", "quante (Y) trasmettere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "628",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno esporre (X)", "Dammi tutti  qual hanno ha esposto (X)", "chi è esposto (X)?", "cosa esporre (X)?", "qual esporre  (X)?", "qual esporre (X)?", "qual ha esposto  (X)?", "qual ha esposto (X)?", "quale (Y) ha esposto (X)?", "quale (Y) sono state è esposto da (X)?", "quali (Y) esporre (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "629",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  esporre da (X)", "Mostrami l'  ha esposto da (X)", "quale (Y) ha esposto da (X)?", "quale (Y) ha ha esposto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "630",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) esporre da (X)?", "quante (Y) sono espone da (X)?", "quante (Y) sono ha esposto da (X)?", "quante (Y) sono è esposto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "631",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Artwork" ],
    "returnType" : [ "Museum" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno esporre (X)", "Dammi tutti  qual hanno ha esposto (X)", "chi è esposto (X)?", "cosa esporre (X)?", "qual esporre  (X)?", "qual esporre (X)?", "qual ha esposto  (X)?", "qual ha esposto (X)?", "quale (Y) ha esposto (X)?", "quale (Y) sono state è esposto da (X)?", "quali (Y) esporre (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/museum> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "632",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  esporre da (X)", "Mostrami l'  ha esposto da (X)", "quale (Y) ha esposto da (X)?", "quale (Y) ha ha esposto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "633",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Museum" ],
    "returnType" : [ "Artwork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) esporre da (X)?", "quante (Y) sono espone da (X)?", "quante (Y) sono ha esposto da (X)?", "quante (Y) sono è esposto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/museum> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "634",
    "lexicalEntryUri" : "http://localhost:8080#to_direct",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dirigere (X)", "Dammi tutti  chi hanno ha diretto (X)", "chi  (X)?", "chi dirigere  (X)?", "chi dirigere (X)?", "chi ha diretto  (X)?", "chi ha diretto (X)?", "cosa dirigere (X)?", "quale (Y) ha diretto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dirigere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "635",
    "lexicalEntryUri" : "http://localhost:8080#to_direct",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dirigere da (X)", "Mostrami l'  ha diretto da (X)", "quale (Y) ha diretto da (X)?", "quale (Y) ha ha diretto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "636",
    "lexicalEntryUri" : "http://localhost:8080#to_direct",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dirigere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dirige da (X)?", "quante (Y) sono ha diretto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "637",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "638",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "639",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "640",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato  (X)?", "chi ha sviluppato (X)?", "chi sviluppare  (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "641",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  sviluppare da (X)", "Mostrami l'  ha sviluppato da (X)", "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "642",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "643",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato  (X)?", "chi ha sviluppato (X)?", "chi sviluppare  (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/product> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "644",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  sviluppare da (X)", "Mostrami l'  ha sviluppato da (X)", "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "645",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Software" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/product> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "646",
    "lexicalEntryUri" : "http://localhost:8080#to_mean",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la qual hanno significava (X)", "Dammi tutti persone qual hanno significare (X)", "chi  (X)?", "cosa significare (X)?", "qual significare (X)?", "qual significare persone (X)?", "qual significava (X)?", "qual significava feminine_la (X)?", "quale (Y) significava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) significare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "647",
    "lexicalEntryUri" : "http://localhost:8080#to_mean",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la significare da (X)", "Dammi tutti persone significare da (X)", "Mostrami l' feminine_la significava da (X)", "Mostrami l' persone significava da (X)", "quale (Y) ha significava (X)?", "quale (Y) significava da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "648",
    "lexicalEntryUri" : "http://localhost:8080#to_mean",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) significare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono significa da (X)?", "quante (Y) sono significava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "649",
    "lexicalEntryUri" : "http://localhost:8080#to_Speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha parlato (X)", "Dammi tutti  qual hanno parlare (X)", "chi  (X)?", "cosa parlare (X)?", "qual ha parlato  (X)?", "qual ha parlato (X)?", "qual parlare  (X)?", "qual parlare (X)?", "quale (Y) ha parlato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) parlare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "650",
    "lexicalEntryUri" : "http://localhost:8080#to_Speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  parlare da (X)", "Mostrami l'  ha parlato da (X)", "quale (Y) ha ha parlato (X)?", "quale (Y) ha parlato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "651",
    "lexicalEntryUri" : "http://localhost:8080#to_Speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) parlare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha parlato da (X)?", "quante (Y) sono parla da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "652",
    "lexicalEntryUri" : "http://localhost:8080#to_perform",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha suonato (X)", "Dammi tutti  chi hanno suonare (X)", "chi  (X)?", "chi ha suonato (X)?", "chi ha suonato musics (X)?", "chi suonare (X)?", "chi suonare music (X)?", "cosa suonare (X)?", "quale (Y) ha suonato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) suonare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/artist> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "653",
    "lexicalEntryUri" : "http://localhost:8080#to_perform",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti music suonare da (X)", "Dammi tutti musics suonare da (X)", "Mostrami l' music ha suonato da (X)", "Mostrami l' musics ha suonato da (X)", "quale (Y) ha ha suonato (X)?", "quale (Y) ha suonato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "654",
    "lexicalEntryUri" : "http://localhost:8080#to_perform",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha suonato da (X)?", "quante (Y) sono suona da (X)?", "quante (Y) suonare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/artist> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "655",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "chi è interpretata (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quale (Y) sono state è interpretata da (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "656",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "quale (Y) ha ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "657",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "658",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "chi è interpretata (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quale (Y) sono state è interpretata da (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "659",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "quale (Y) ha ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "660",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "661",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "662",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "da chi fu ha interpretato (X)", "quale (Y) ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "663",
    "lexicalEntryUri" : "http://localhost:8080#to_play_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "664",
    "lexicalEntryUri" : "http://localhost:8080#to_Write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "665",
    "lexicalEntryUri" : "http://localhost:8080#to_Write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "666",
    "lexicalEntryUri" : "http://localhost:8080#to_Write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "667",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha prodotto (X)", "Dammi tutti  chi hanno produrre (X)", "chi  (X)?", "chi ha prodotto  (X)?", "chi ha prodotto (X)?", "chi produrre  (X)?", "chi produrre (X)?", "cosa produrre (X)?", "quale (Y) ha prodotto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) produrre (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "668",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  produrre da (X)", "Mostrami l'  ha prodotto da (X)", "quale (Y) ha ha prodotto (X)?", "quale (Y) ha prodotto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "669",
    "lexicalEntryUri" : "http://localhost:8080#to_produce_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) produrre da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha prodotto da (X)?", "quante (Y) sono produce da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "670",
    "lexicalEntryUri" : "http://localhost:8080#to_leave",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha lasciato (X)", "Dammi tutti  chi hanno lasciare (X)", "chi  (X)?", "chi ha lasciato  (X)?", "chi ha lasciato (X)?", "chi lasciare  (X)?", "chi lasciare (X)?", "cosa lasciare (X)?", "quale (Y) ha lasciato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) lasciare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/formerBandMember> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "671",
    "lexicalEntryUri" : "http://localhost:8080#to_leave",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  lasciare da (X)", "Mostrami l'  ha lasciato da (X)", "quale (Y) ha ha lasciato (X)?", "quale (Y) ha lasciato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "672",
    "lexicalEntryUri" : "http://localhost:8080#to_leave",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Band" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) lasciare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha lasciato da (X)?", "quante (Y) sono lascia da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/formerBandMember> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "673",
    "lexicalEntryUri" : "http://localhost:8080#to_influence",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha influenzato (X)", "Dammi tutti  chi hanno influenzare (X)", "chi ha influenzato  (X)?", "chi ha influenzato (X)?", "chi influenzare  (X)?", "chi influenzare (X)?", "cosa influenzare (X)?", "quale (Y) ha influenzato (X)?", "quali (Y) influenzare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "674",
    "lexicalEntryUri" : "http://localhost:8080#to_influence",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  influenzare da (X)", "Mostrami l'  ha influenzato da (X)", "da chi fu ha influenzato (X)", "quale (Y) ha influenzato (X)?", "quale (Y) ha influenzato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "675",
    "lexicalEntryUri" : "http://localhost:8080#to_influence",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) influenzare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha influenzato da (X)?", "quante (Y) sono influenza da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "676",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha vinto (X)", "Dammi tutti  chi hanno vincere (X)", "chi ha vinto  (X)?", "chi ha vinto (X)?", "chi vincere  (X)?", "chi vincere (X)?", "chi è stato vinto (X)?", "cosa vincere (X)?", "quale (Y) ha vinto (X)?", "quale (Y) sono state è stato vinto da (X)?", "quali (Y) vincere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "677",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  vincere da (X)", "Mostrami l'  ha vinto da (X)", "quale (Y) ha ha vinto (X)?", "quale (Y) ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "678",
    "lexicalEntryUri" : "http://localhost:8080#to_win_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha vinto da (X)?", "quante (Y) sono vince da (X)?", "quante (Y) sono è stato vinto da (X)?", "quante (Y) vincere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "679",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha sposato (X)", "Dammi tutti  chi hanno sposarsi (X)", "chi ha sposato  (X)?", "chi ha sposato (X)?", "chi sposarsi  (X)?", "chi sposarsi (X)?", "cosa sposarsi (X)?", "quale (Y) ha sposato (X)?", "quali (Y) sposarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "680",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  sposarsi da (X)", "Mostrami l'  ha sposato da (X)", "da chi fu ha sposato (X)", "quale (Y) ha sposato (X)?", "quale (Y) ha sposato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "681",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha sposato da (X)?", "quante (Y) sono si sposa da (X)?", "quante (Y) sono è stato sposato da (X)?", "quante (Y) sposarsi da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "682",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha sposato (X)", "Dammi tutti  chi hanno sposarsi (X)", "chi ha sposato  (X)?", "chi ha sposato (X)?", "chi sposarsi  (X)?", "chi sposarsi (X)?", "cosa sposarsi (X)?", "quale (Y) ha sposato (X)?", "quali (Y) sposarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "683",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  sposarsi da (X)", "Mostrami l'  ha sposato da (X)", "da chi fu ha sposato (X)", "quale (Y) ha sposato (X)?", "quale (Y) ha sposato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "684",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha sposato da (X)?", "quante (Y) sono si sposa da (X)?", "quante (Y) sono è stato sposato da (X)?", "quante (Y) sposarsi da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "685",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha sposato (X)", "Dammi tutti  chi hanno sposarsi (X)", "chi ha sposato  (X)?", "chi ha sposato (X)?", "chi sposarsi  (X)?", "chi sposarsi (X)?", "cosa sposarsi (X)?", "quale (Y) ha sposato (X)?", "quali (Y) sposarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "686",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  sposarsi da (X)", "Mostrami l'  ha sposato da (X)", "da chi fu ha sposato (X)", "quale (Y) ha sposato (X)?", "quale (Y) ha sposato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "687",
    "lexicalEntryUri" : "http://localhost:8080#to_marry",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono ha sposato da (X)?", "quante (Y) sono si sposa da (X)?", "quante (Y) sono è stato sposato da (X)?", "quante (Y) sposarsi da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/spouse> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "688",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "689",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "690",
    "lexicalEntryUri" : "http://localhost:8080#to_develop_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "691",
    "lexicalEntryUri" : "http://localhost:8080#to_found",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno fondare (X)", "Dammi tutti  chi hanno è stata fondata (X)", "chi fondare  (X)?", "chi fondare (X)?", "chi è stata fondata  (X)?", "chi è stata fondata (X)?", "cosa fondare (X)?", "quale (Y) è stata fondata (X)?", "quali (Y) fondare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "692",
    "lexicalEntryUri" : "http://localhost:8080#to_found",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  fondare da (X)", "Mostrami l'  è stata fondata da (X)", "da chi fu è stata fondata (X)", "quale (Y) è stata fondata (X)?", "quale (Y) è stata fondata da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "693",
    "lexicalEntryUri" : "http://localhost:8080#to_found",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) fondare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono fonda da (X)?", "quante (Y) sono è stata fondata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "694",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno comporre la colonna sonora (X)", "Dammi tutti  chi hanno ha composto la colonna sonora (X)", "chi comporre la colonna sonora  (X)?", "chi comporre la colonna sonora (X)?", "chi ha composto la colonna sonora  (X)?", "chi ha composto la colonna sonora (X)?", "cosa comporre la colonna sonora (X)?", "quale (Y) ha composto la colonna sonora (X)?", "quale (Y) sono state ha composto la colonna sonora da (X)?", "quali (Y) comporre la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "695",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  comporre la colonna sonora da (X)", "Mostrami l'  ha composto la colonna sonora da (X)", "quale (Y) ha composto la colonna sonora da (X)?", "quale (Y) ha ha composto la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "696",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) comporre la colonna sonora da (X)?", "quante (Y) sono comporre la colonna sonora da (X)?", "quante (Y) sono ha composto la colonna sonora da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "697",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno comporre la colonna sonora (X)", "Dammi tutti  chi hanno ha composto la colonna sonora (X)", "chi comporre la colonna sonora  (X)?", "chi comporre la colonna sonora (X)?", "chi ha composto la colonna sonora  (X)?", "chi ha composto la colonna sonora (X)?", "cosa comporre la colonna sonora (X)?", "quale (Y) ha composto la colonna sonora (X)?", "quale (Y) sono state ha composto la colonna sonora da (X)?", "quali (Y) comporre la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "698",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  comporre la colonna sonora da (X)", "Mostrami l'  ha composto la colonna sonora da (X)", "quale (Y) ha composto la colonna sonora da (X)?", "quale (Y) ha ha composto la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "699",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) comporre la colonna sonora da (X)?", "quante (Y) sono comporre la colonna sonora da (X)?", "quante (Y) sono ha composto la colonna sonora da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "700",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno comporre la colonna sonora (X)", "Dammi tutti  chi hanno ha composto la colonna sonora (X)", "chi comporre la colonna sonora  (X)?", "chi comporre la colonna sonora (X)?", "chi ha composto la colonna sonora  (X)?", "chi ha composto la colonna sonora (X)?", "cosa comporre la colonna sonora (X)?", "quale (Y) ha composto la colonna sonora (X)?", "quale (Y) sono state ha composto la colonna sonora da (X)?", "quali (Y) comporre la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "701",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  comporre la colonna sonora da (X)", "Mostrami l'  ha composto la colonna sonora da (X)", "quale (Y) ha composto la colonna sonora da (X)?", "quale (Y) ha ha composto la colonna sonora (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "702",
    "lexicalEntryUri" : "http://localhost:8080#to_compose",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) comporre la colonna sonora da (X)?", "quante (Y) sono comporre la colonna sonora da (X)?", "quante (Y) sono ha composto la colonna sonora da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/musicComposer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "703",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha parlato (X)", "Dammi tutti  qual hanno parlare (X)", "chi è parlato (X)?", "cosa parlare (X)?", "qual ha parlato  (X)?", "qual ha parlato (X)?", "qual parlare  (X)?", "qual parlare (X)?", "quale (Y) ha parlato (X)?", "quale (Y) sono state è parlato da (X)?", "quali (Y) parlare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "704",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  parlare da (X)", "Mostrami l'  ha parlato da (X)", "quale (Y) ha ha parlato (X)?", "quale (Y) ha parlato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "705",
    "lexicalEntryUri" : "http://localhost:8080#to_speak_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) parlare da (X)?", "quante (Y) sono ha parlato da (X)?", "quante (Y) sono parla da (X)?", "quante (Y) sono è parlato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "706",
    "lexicalEntryUri" : "http://localhost:8080#to_Direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dirigere (X)", "Dammi tutti  chi hanno ha diretto (X)", "chi  (X)?", "chi dirigere  (X)?", "chi dirigere (X)?", "chi ha diretto  (X)?", "chi ha diretto (X)?", "cosa dirigere (X)?", "quale (Y) ha diretto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dirigere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/director> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "707",
    "lexicalEntryUri" : "http://localhost:8080#to_Direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dirigere da (X)", "Mostrami l'  ha diretto da (X)", "quale (Y) ha diretto da (X)?", "quale (Y) ha ha diretto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "708",
    "lexicalEntryUri" : "http://localhost:8080#to_Direct_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dirigere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono dirige da (X)?", "quante (Y) sono ha diretto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/director> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "709",
    "lexicalEntryUri" : "http://localhost:8080#to_called_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno venire chiamato (X)", "Dammi tutti  chi hanno venne chiamato (X)", "chi  (X)?", "chi venire chiamato (X)?", "chi venire chiamato persone (X)?", "chi venne chiamato (X)?", "chi venne chiamato feminine_la (X)?", "cosa venire chiamato (X)?", "quale (Y) sono state  da (X)?", "quale (Y) venne chiamato (X)?", "quali (Y) venire chiamato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "710",
    "lexicalEntryUri" : "http://localhost:8080#to_called_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la venire chiamato da (X)", "Dammi tutti persone venire chiamato da (X)", "Mostrami l' feminine_la venne chiamato da (X)", "Mostrami l' persone venne chiamato da (X)", "quale (Y) ha venne chiamato (X)?", "quale (Y) venne chiamato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "711",
    "lexicalEntryUri" : "http://localhost:8080#to_called_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono venne chiamato da (X)?", "quante (Y) sono viene chiamato da (X)?", "quante (Y) venire chiamato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "712",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha seguito (X)", "Dammi tutti  chi hanno seguire (X)", "chi ha seguito  (X)?", "chi ha seguito (X)?", "chi seguire  (X)?", "chi seguire (X)?", "cosa seguire (X)?", "quale (Y) ha seguito (X)?", "quali (Y) seguire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "713",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  seguire da (X)", "Mostrami l'  ha seguito da (X)", "da chi fu ha seguito (X)", "quale (Y) ha seguito (X)?", "quale (Y) ha seguito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "714",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) seguire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha seguito da (X)?", "quante (Y) sono segue da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "715",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti broadcaster qual hanno trasmettere (X)", "Dammi tutti broadcasters qual hanno ha trasmesso (X)", "chi  (X)?", "cosa trasmettere (X)?", "qual ha trasmesso  (X)?", "qual ha trasmesso (X)?", "qual trasmettere  (X)?", "qual trasmettere (X)?", "quale (Y) ha trasmesso (X)?", "quale (Y) sono state  da (X)?", "quali (Y) trasmettere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/network> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "716",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  trasmettere da (X)", "Mostrami l'  ha trasmesso da (X)", "quale (Y) ha ha trasmesso (X)?", "quale (Y) ha trasmesso da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "717",
    "lexicalEntryUri" : "http://localhost:8080#to_air_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha trasmesso da (X)?", "quante (Y) sono trasmette da (X)?", "quante (Y) trasmettere da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/network> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "718",
    "lexicalEntryUri" : "http://localhost:8080#to_play",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "719",
    "lexicalEntryUri" : "http://localhost:8080#to_play",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "da chi fu ha interpretato (X)", "quale (Y) ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "720",
    "lexicalEntryUri" : "http://localhost:8080#to_play",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "721",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha presentato (X)", "Dammi tutti  chi hanno presentare (X)", "chi ha presentato  (X)?", "chi ha presentato (X)?", "chi presentare  (X)?", "chi presentare (X)?", "chi è presentato da (X)?", "cosa presentare (X)?", "quale (Y) ha presentato (X)?", "quale (Y) sono state è presentato da da (X)?", "quali (Y) presentare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "722",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  presentare da (X)", "Mostrami l'  ha presentato da (X)", "quale (Y) ha ha presentato (X)?", "quale (Y) ha presentato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "723",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) presentare da (X)?", "quante (Y) sono ha presentato da (X)?", "quante (Y) sono presenta da (X)?", "quante (Y) sono è presentato da da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "724",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha presentato (X)", "Dammi tutti  chi hanno presentare (X)", "chi ha presentato  (X)?", "chi ha presentato (X)?", "chi presentare  (X)?", "chi presentare (X)?", "chi è presentato da (X)?", "cosa presentare (X)?", "quale (Y) ha presentato (X)?", "quale (Y) sono state è presentato da da (X)?", "quali (Y) presentare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "725",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  presentare da (X)", "Mostrami l'  ha presentato da (X)", "quale (Y) ha ha presentato (X)?", "quale (Y) ha presentato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "726",
    "lexicalEntryUri" : "http://localhost:8080#to_present",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) presentare da (X)?", "quante (Y) sono ha presentato da (X)?", "quante (Y) sono presenta da (X)?", "quante (Y) sono è presentato da da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "727",
    "lexicalEntryUri" : "http://localhost:8080#to_called_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno venire chiamata (X)", "Dammi tutti  chi hanno venne chiamata (X)", "chi  (X)?", "chi venire chiamata (X)?", "chi venire chiamata persone (X)?", "chi venne chiamata (X)?", "chi venne chiamata feminine_la (X)?", "cosa venire chiamata (X)?", "quale (Y) sono state  da (X)?", "quale (Y) venne chiamata (X)?", "quali (Y) venire chiamata (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "728",
    "lexicalEntryUri" : "http://localhost:8080#to_called_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la venire chiamata da (X)", "Dammi tutti persone venire chiamata da (X)", "Mostrami l' feminine_la venne chiamata da (X)", "Mostrami l' persone venne chiamata da (X)", "quale (Y) ha venne chiamata (X)?", "quale (Y) venne chiamata da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "729",
    "lexicalEntryUri" : "http://localhost:8080#to_called_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono venne chiamata da (X)?", "quante (Y) sono viene chiamata da (X)?", "quante (Y) venire chiamata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nickname> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "730",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha progettato (X)", "Dammi tutti  chi hanno progettare (X)", "chi ha progettato (X)?", "chi ha progettato dbo:Buildings (X)?", "chi progettare (X)?", "chi progettare Building (X)?", "chi è stato progettato (X)?", "cosa progettare (X)?", "quale (Y) ha progettato (X)?", "quale (Y) sono state è stato progettato da (X)?", "quali (Y) progettare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/designer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "731",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti Building progettare da (X)", "Dammi tutti dbo:Buildings progettare da (X)", "Mostrami l' Building ha progettato da (X)", "Mostrami l' dbo:Buildings ha progettato da (X)", "quale (Y) ha ha progettato (X)?", "quale (Y) ha progettato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "732",
    "lexicalEntryUri" : "http://localhost:8080#to_design_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Building" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) progettare da (X)?", "quante (Y) sono ha progettato da (X)?", "quante (Y) sono progetta da (X)?", "quante (Y) sono è stato progettato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/designer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "733",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno fondare (X)", "Dammi tutti  chi hanno è stata fondata (X)", "chi fondare  (X)?", "chi fondare (X)?", "chi è stata fondata  (X)?", "chi è stata fondata (X)?", "cosa fondare (X)?", "quale (Y) è stata fondata (X)?", "quali (Y) fondare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "734",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  fondare da (X)", "Mostrami l'  è stata fondata da (X)", "da chi fu è stata fondata (X)", "quale (Y) è stata fondata (X)?", "quale (Y) è stata fondata da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "735",
    "lexicalEntryUri" : "http://localhost:8080#to_found_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) fondare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono fonda da (X)?", "quante (Y) sono è stata fondata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "736",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato  (X)?", "chi ha sviluppato (X)?", "chi sviluppare  (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "737",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  sviluppare da (X)", "Mostrami l'  ha sviluppato da (X)", "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "738",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "739",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato  (X)?", "chi ha sviluppato (X)?", "chi sviluppare  (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "740",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  sviluppare da (X)", "Mostrami l'  ha sviluppato da (X)", "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "741",
    "lexicalEntryUri" : "http://localhost:8080#to_Develop_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "742",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "743",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "744",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "745",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "746",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "747",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "748",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "749",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "750",
    "lexicalEntryUri" : "http://localhost:8080#to_create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "751",
    "lexicalEntryUri" : "http://localhost:8080#to_Design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti architect chi hanno progettare (X)", "Dammi tutti architects chi hanno ha progettato (X)", "chi ha progettato  (X)?", "chi ha progettato (X)?", "chi progettare  (X)?", "chi progettare (X)?", "chi è stato progettato (X)?", "cosa progettare (X)?", "quale (Y) ha progettato (X)?", "quale (Y) sono state è stato progettato da (X)?", "quali (Y) progettare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "752",
    "lexicalEntryUri" : "http://localhost:8080#to_Design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  progettare da (X)", "Mostrami l'  ha progettato da (X)", "quale (Y) ha ha progettato (X)?", "quale (Y) ha progettato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "753",
    "lexicalEntryUri" : "http://localhost:8080#to_Design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) progettare da (X)?", "quante (Y) sono ha progettato da (X)?", "quante (Y) sono progetta da (X)?", "quante (Y) sono è stato progettato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "754",
    "lexicalEntryUri" : "http://localhost:8080#to_record",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalArtist" ],
    "returnType" : [ "Company" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha inciso (X)", "Dammi tutti  chi hanno incidere (X)", "chi ha inciso (X)?", "chi ha inciso musical artists (X)?", "chi incidere (X)?", "chi incidere musical artist (X)?", "cosa incidere (X)?", "quale (Y) ha inciso (X)?", "quali (Y) incidere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/recordLabel> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "755",
    "lexicalEntryUri" : "http://localhost:8080#to_record",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti musical artist incidere da (X)", "Dammi tutti musical artists incidere da (X)", "Mostrami l' musical artist ha inciso da (X)", "Mostrami l' musical artists ha inciso da (X)", "da chi fu ha inciso (X)", "quale (Y) ha inciso (X)?", "quale (Y) ha inciso da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/recordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "756",
    "lexicalEntryUri" : "http://localhost:8080#to_record",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "MusicalArtist" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) incidere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha inciso da (X)?", "quante (Y) sono incide da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/recordLabel> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "757",
    "lexicalEntryUri" : "http://localhost:8080#to_follow",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti album qual hanno seguire (X)", "Dammi tutti albums qual hanno ha seguito (X)", "chi  (X)?", "cosa seguire (X)?", "qual ha seguito (X)?", "qual ha seguito albums (X)?", "qual seguire (X)?", "qual seguire album (X)?", "quale (Y) ha seguito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) seguire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nextTitle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "758",
    "lexicalEntryUri" : "http://localhost:8080#to_follow",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti album seguire da (X)", "Dammi tutti albums seguire da (X)", "Mostrami l' album ha seguito da (X)", "Mostrami l' albums ha seguito da (X)", "quale (Y) ha ha seguito (X)?", "quale (Y) ha seguito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "759",
    "lexicalEntryUri" : "http://localhost:8080#to_follow",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Album" ],
    "returnType" : [ "Album" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) seguire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha seguito da (X)?", "quante (Y) sono segue da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/nextTitle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "760",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Award" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno avere vinto (X)", "Dammi tutti  qual hanno ebbe vinto (X)", "chi  (X)?", "cosa avere vinto (X)?", "qual avere vinto  (X)?", "qual avere vinto (X)?", "qual ebbe vinto  (X)?", "qual ebbe vinto (X)?", "quale (Y) ebbe vinto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) avere vinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/award> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "761",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  avere vinto da (X)", "Mostrami l'  ebbe vinto da (X)", "quale (Y) ebbe vinto da (X)?", "quale (Y) ha ebbe vinto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "762",
    "lexicalEntryUri" : "http://localhost:8080#to_win_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Award" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) avere vinto da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ebbe vinto da (X)?", "quante (Y) sono ha vinto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/award> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "763",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno dbo:BroadcastNetwork (X)", "Dammi tutti  chi hanno ha fondato (X)", "chi dbo:BroadcastNetwork  (X)?", "chi dbo:BroadcastNetwork (X)?", "chi ha fondato  (X)?", "chi ha fondato (X)?", "cosa dbo:BroadcastNetwork (X)?", "quale (Y) ha fondato (X)?", "quali (Y) dbo:BroadcastNetwork (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "764",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  dbo:BroadcastNetwork da (X)", "Mostrami l'  ha fondato da (X)", "da chi fu ha fondato (X)", "quale (Y) ha fondato (X)?", "quale (Y) ha fondato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "765",
    "lexicalEntryUri" : "http://localhost:8080#to_found_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dbo:BroadcastNetwork da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono fonda da (X)?", "quante (Y) sono ha fondato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "766",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "767",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "da chi fu ha interpretato (X)", "quale (Y) ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "768",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "769",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "770",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "da chi fu ha interpretato (X)", "quale (Y) ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "771",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "772",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha interpretato (X)", "Dammi tutti  chi hanno interpretare (X)", "chi ha interpretato  (X)?", "chi ha interpretato (X)?", "chi interpretare  (X)?", "chi interpretare (X)?", "cosa interpretare (X)?", "quale (Y) ha interpretato (X)?", "quali (Y) interpretare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "773",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  interpretare da (X)", "Mostrami l'  ha interpretato da (X)", "da chi fu ha interpretato (X)", "quale (Y) ha interpretato (X)?", "quale (Y) ha interpretato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "774",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "FictionalCharacter" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) interpretare da (X)?", "quante (Y) sono ha interpretato da (X)?", "quante (Y) sono interpreta da (X)?", "quante (Y) sono è interpretata da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/portrayer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "775",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "776",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "777",
    "lexicalEntryUri" : "http://localhost:8080#to_write_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "778",
    "lexicalEntryUri" : "http://localhost:8080#to_develop",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha sviluppato (X)", "Dammi tutti  chi hanno sviluppare (X)", "chi  (X)?", "chi ha sviluppato  (X)?", "chi ha sviluppato (X)?", "chi sviluppare  (X)?", "chi sviluppare (X)?", "cosa sviluppare (X)?", "quale (Y) ha sviluppato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) sviluppare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "779",
    "lexicalEntryUri" : "http://localhost:8080#to_develop",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  sviluppare da (X)", "Mostrami l'  ha sviluppato da (X)", "quale (Y) ha ha sviluppato (X)?", "quale (Y) ha sviluppato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "780",
    "lexicalEntryUri" : "http://localhost:8080#to_develop",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) sono  da (X)?", "quante (Y) sono ha sviluppato da (X)?", "quante (Y) sono sviluppa da (X)?", "quante (Y) sviluppare da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/developer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "781",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "782",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "783",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "784",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "785",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "786",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "787",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "788",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "789",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "790",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha pubblicato (X)", "Dammi tutti  qual hanno pubblicare (X)", "chi  (X)?", "cosa pubblicare (X)?", "qual ha pubblicato  (X)?", "qual ha pubblicato (X)?", "qual pubblicare  (X)?", "qual pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "791",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "792",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "793",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha recitato in (X)", "Dammi tutti  chi hanno recitare in (X)", "chi ha recitato in  (X)?", "chi ha recitato in (X)?", "chi recitare in  (X)?", "chi recitare in (X)?", "chi è recitato (X)?", "cosa recitare in (X)?", "quale (Y) ha recitato in (X)?", "quale (Y) sono state è recitato da (X)?", "quali (Y) recitare in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "794",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  recitare in da (X)", "Mostrami l'  ha recitato in da (X)", "quale (Y) ha ha recitato in (X)?", "quale (Y) ha recitato in da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "795",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) recitare in da (X)?", "quante (Y) sono ha recitato in da (X)?", "quante (Y) sono recita in da (X)?", "quante (Y) sono è recitato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "796",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Actor" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha recitato in (X)", "Dammi tutti  chi hanno recitare in (X)", "chi ha recitato in  (X)?", "chi ha recitato in (X)?", "chi recitare in  (X)?", "chi recitare in (X)?", "chi è recitato (X)?", "cosa recitare in (X)?", "quale (Y) ha recitato in (X)?", "quale (Y) sono state è recitato da (X)?", "quali (Y) recitare in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/starring> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "797",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  recitare in da (X)", "Mostrami l'  ha recitato in da (X)", "quale (Y) ha ha recitato in (X)?", "quale (Y) ha recitato in da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "798",
    "lexicalEntryUri" : "http://localhost:8080#to_starr",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) recitare in da (X)?", "quante (Y) sono ha recitato in da (X)?", "quante (Y) sono recita in da (X)?", "quante (Y) sono è recitato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/starring> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "799",
    "lexicalEntryUri" : "http://localhost:8080#to_control",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno controllare (X)", "Dammi tutti  chi hanno ha controllato (X)", "chi  (X)?", "chi controllare (X)?", "chi controllare airport (X)?", "chi ha controllato (X)?", "chi ha controllato airports (X)?", "cosa controllare (X)?", "quale (Y) ha controllato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) controllare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/controlledby> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "800",
    "lexicalEntryUri" : "http://localhost:8080#to_control",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport controllare da (X)", "Dammi tutti airports controllare da (X)", "Mostrami l' airport ha controllato da (X)", "Mostrami l' airports ha controllato da (X)", "quale (Y) ha controllato da (X)?", "quale (Y) ha ha controllato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "801",
    "lexicalEntryUri" : "http://localhost:8080#to_control",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) controllare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono controlla da (X)?", "quante (Y) sono ha controllato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/controlledby> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "802",
    "lexicalEntryUri" : "http://localhost:8080#to_publish",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "803",
    "lexicalEntryUri" : "http://localhost:8080#to_publish",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "804",
    "lexicalEntryUri" : "http://localhost:8080#to_publish",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "805",
    "lexicalEntryUri" : "http://localhost:8080#to_own",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha posseduto (X)", "Dammi tutti  chi hanno possedere (X)", "chi  (X)?", "chi ha posseduto (X)?", "chi ha posseduto airports (X)?", "chi possedere (X)?", "chi possedere airport (X)?", "cosa possedere (X)?", "quale (Y) ha posseduto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) possedere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/owner> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "806",
    "lexicalEntryUri" : "http://localhost:8080#to_own",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport possedere da (X)", "Dammi tutti airports possedere da (X)", "Mostrami l' airport ha posseduto da (X)", "Mostrami l' airports ha posseduto da (X)", "quale (Y) ha ha posseduto (X)?", "quale (Y) ha posseduto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "807",
    "lexicalEntryUri" : "http://localhost:8080#to_own",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) possedere da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha posseduto da (X)?", "quante (Y) sono possiede da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/owner> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "808",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "809",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "810",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "811",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "812",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "813",
    "lexicalEntryUri" : "http://localhost:8080#to_write_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "814",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha illustrato (X)", "Dammi tutti  chi hanno illustrare (X)", "chi  (X)?", "chi ha illustrato  (X)?", "chi ha illustrato (X)?", "chi illustrare  (X)?", "chi illustrare (X)?", "cosa illustrare (X)?", "quale (Y) ha illustrato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) illustrare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/illustrator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "815",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  illustrare da (X)", "Mostrami l'  ha illustrato da (X)", "quale (Y) ha ha illustrato (X)?", "quale (Y) ha illustrato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "816",
    "lexicalEntryUri" : "http://localhost:8080#to_illustrate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "WrittenWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) illustrare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha illustrato da (X)?", "quante (Y) sono illustra da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/illustrator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "817",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "818",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "819",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "820",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha operato (X)", "Dammi tutti  chi hanno operare (X)", "chi  (X)?", "chi ha operato  (X)?", "chi ha operato (X)?", "chi operare  (X)?", "chi operare (X)?", "cosa operare (X)?", "quale (Y) ha operato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) operare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "821",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  operare da (X)", "Mostrami l'  ha operato da (X)", "quale (Y) ha ha operato (X)?", "quale (Y) ha operato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "822",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) operare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha operato da (X)?", "quante (Y) sono opera da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "823",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha operato (X)", "Dammi tutti  chi hanno operare (X)", "chi  (X)?", "chi ha operato  (X)?", "chi ha operato (X)?", "chi operare  (X)?", "chi operare (X)?", "cosa operare (X)?", "quale (Y) ha operato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) operare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "824",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  operare da (X)", "Mostrami l'  ha operato da (X)", "quale (Y) ha ha operato (X)?", "quale (Y) ha operato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "825",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) operare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha operato da (X)?", "quante (Y) sono opera da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "826",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "LaunchPad" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha operato (X)", "Dammi tutti  chi hanno operare (X)", "chi  (X)?", "chi ha operato  (X)?", "chi ha operato (X)?", "chi operare  (X)?", "chi operare (X)?", "cosa operare (X)?", "quale (Y) ha operato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) operare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "827",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  operare da (X)", "Mostrami l'  ha operato da (X)", "quale (Y) ha ha operato (X)?", "quale (Y) ha operato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "828",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "LaunchPad" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) operare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha operato da (X)?", "quante (Y) sono opera da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "829",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti architect chi hanno progettare (X)", "Dammi tutti architects chi hanno ha progettato (X)", "chi ha progettato (X)?", "chi ha progettato ArchitecturalStructures (X)?", "chi progettare (X)?", "chi progettare ArchitecturalStructure (X)?", "chi è stato progettato (X)?", "cosa progettare (X)?", "quale (Y) ha progettato (X)?", "quale (Y) sono state è stato progettato da (X)?", "quali (Y) progettare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "830",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ArchitecturalStructure progettare da (X)", "Dammi tutti ArchitecturalStructures progettare da (X)", "Mostrami l' ArchitecturalStructure ha progettato da (X)", "Mostrami l' ArchitecturalStructures ha progettato da (X)", "quale (Y) ha ha progettato (X)?", "quale (Y) ha progettato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "831",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) progettare da (X)?", "quante (Y) sono ha progettato da (X)?", "quante (Y) sono progetta da (X)?", "quante (Y) sono è stato progettato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "832",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti architect chi hanno progettare (X)", "Dammi tutti architects chi hanno ha progettato (X)", "chi ha progettato (X)?", "chi ha progettato ArchitecturalStructures (X)?", "chi progettare (X)?", "chi progettare ArchitecturalStructure (X)?", "chi è stato progettato (X)?", "cosa progettare (X)?", "quale (Y) ha progettato (X)?", "quale (Y) sono state è stato progettato da (X)?", "quali (Y) progettare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "833",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ArchitecturalStructure progettare da (X)", "Dammi tutti ArchitecturalStructures progettare da (X)", "Mostrami l' ArchitecturalStructure ha progettato da (X)", "Mostrami l' ArchitecturalStructures ha progettato da (X)", "quale (Y) ha ha progettato (X)?", "quale (Y) ha progettato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "834",
    "lexicalEntryUri" : "http://localhost:8080#to_design_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) progettare da (X)?", "quante (Y) sono ha progettato da (X)?", "quante (Y) sono progetta da (X)?", "quante (Y) sono è stato progettato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "835",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "836",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "837",
    "lexicalEntryUri" : "http://localhost:8080#to_write_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "838",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno distribuire (X)", "Dammi tutti  chi hanno ha distribuito (X)", "chi  (X)?", "chi distribuire  (X)?", "chi distribuire (X)?", "chi ha distribuito  (X)?", "chi ha distribuito (X)?", "cosa distribuire (X)?", "quale (Y) ha distribuito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) distribuire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "839",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  distribuire da (X)", "Mostrami l'  ha distribuito da (X)", "quale (Y) ha distribuito da (X)?", "quale (Y) ha ha distribuito (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "840",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) distribuire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono distribuisce da (X)?", "quante (Y) sono ha distribuito da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "841",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha presentato (X)", "Dammi tutti  chi hanno presentare (X)", "chi ha presentato  (X)?", "chi ha presentato (X)?", "chi presentare  (X)?", "chi presentare (X)?", "chi è presentato da (X)?", "cosa presentare (X)?", "quale (Y) ha presentato (X)?", "quale (Y) sono state è presentato da da (X)?", "quali (Y) presentare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/presenter> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "842",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  presentare da (X)", "Mostrami l'  ha presentato da (X)", "quale (Y) ha ha presentato (X)?", "quale (Y) ha presentato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "843",
    "lexicalEntryUri" : "http://localhost:8080#to_present_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) presentare da (X)?", "quante (Y) sono ha presentato da (X)?", "quante (Y) sono presenta da (X)?", "quante (Y) sono è presentato da da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/presenter> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "844",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno attraversare (X)", "Dammi tutti  qual hanno ha attraversato (X)", "chi è attraversato (X)?", "cosa attraversare (X)?", "qual attraversare  (X)?", "qual attraversare (X)?", "qual ha attraversato  (X)?", "qual ha attraversato (X)?", "quale (Y) ha attraversato (X)?", "quale (Y) sono state è attraversato da (X)?", "quali (Y) attraversare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "845",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  attraversare da (X)", "Mostrami l'  ha attraversato da (X)", "quale (Y) ha attraversato da (X)?", "quale (Y) ha ha attraversato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "846",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) attraversare da (X)?", "quante (Y) sono attraversa da (X)?", "quante (Y) sono ha attraversato da (X)?", "quante (Y) sono è attraversato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "847",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno attraversare (X)", "Dammi tutti  qual hanno ha attraversato (X)", "chi è attraversato (X)?", "cosa attraversare (X)?", "qual attraversare  (X)?", "qual attraversare (X)?", "qual ha attraversato  (X)?", "qual ha attraversato (X)?", "quale (Y) ha attraversato (X)?", "quale (Y) sono state è attraversato da (X)?", "quali (Y) attraversare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "848",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  attraversare da (X)", "Mostrami l'  ha attraversato da (X)", "quale (Y) ha attraversato da (X)?", "quale (Y) ha ha attraversato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "849",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) attraversare da (X)?", "quante (Y) sono attraversa da (X)?", "quante (Y) sono ha attraversato da (X)?", "quante (Y) sono è attraversato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "850",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno attraversare (X)", "Dammi tutti  qual hanno ha attraversato (X)", "chi è attraversato (X)?", "cosa attraversare (X)?", "qual attraversare  (X)?", "qual attraversare (X)?", "qual ha attraversato  (X)?", "qual ha attraversato (X)?", "quale (Y) ha attraversato (X)?", "quale (Y) sono state è attraversato da (X)?", "quali (Y) attraversare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "851",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  attraversare da (X)", "Mostrami l'  ha attraversato da (X)", "quale (Y) ha attraversato da (X)?", "quale (Y) ha ha attraversato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "852",
    "lexicalEntryUri" : "http://localhost:8080#to_cross",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) attraversare da (X)?", "quante (Y) sono attraversa da (X)?", "quante (Y) sono ha attraversato da (X)?", "quante (Y) sono è attraversato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "853",
    "lexicalEntryUri" : "http://localhost:8080#to_cover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Magazine" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti academic journal qual hanno occuparsi (X)", "Dammi tutti academic journals qual hanno si occupava (X)", "chi  (X)?", "cosa occuparsi (X)?", "qual occuparsi (X)?", "qual occuparsi films (X)?", "qual si occupava (X)?", "qual si occupava feminine_la (X)?", "quale (Y) si occupava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) occuparsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/academicDiscipline> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "854",
    "lexicalEntryUri" : "http://localhost:8080#to_cover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la occuparsi da (X)", "Dammi tutti films occuparsi da (X)", "Mostrami l' feminine_la si occupava da (X)", "Mostrami l' films si occupava da (X)", "quale (Y) ha si occupava (X)?", "quale (Y) si occupava da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "855",
    "lexicalEntryUri" : "http://localhost:8080#to_cover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Magazine" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) occuparsi da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono si occupa da (X)?", "quante (Y) sono si occupava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/academicDiscipline> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "856",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno dsitribuire (X)", "Dammi tutti  chi hanno ha distribuito (X)", "chi  (X)?", "chi dsitribuire  (X)?", "chi dsitribuire (X)?", "chi ha distribuito  (X)?", "chi ha distribuito (X)?", "cosa dsitribuire (X)?", "quale (Y) ha distribuito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) dsitribuire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/distributor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "857",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  dsitribuire da (X)", "Mostrami l'  ha distribuito da (X)", "quale (Y) ha distribuito da (X)?", "quale (Y) ha ha distribuito (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "858",
    "lexicalEntryUri" : "http://localhost:8080#to_distribute",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) dsitribuire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono distribuisce da (X)?", "quante (Y) sono ha distribuito da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/distributor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "859",
    "lexicalEntryUri" : "http://localhost:8080#to_rent",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno affittare (X)", "Dammi tutti  chi hanno affittava (X)", "chi  (X)?", "chi affittare (X)?", "chi affittare ArchitecturalStructure (X)?", "chi affittava (X)?", "chi affittava ArchitecturalStructures (X)?", "cosa affittare (X)?", "quale (Y) affittava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) affittare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/tenant> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "860",
    "lexicalEntryUri" : "http://localhost:8080#to_rent",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ArchitecturalStructure affittare da (X)", "Dammi tutti ArchitecturalStructures affittare da (X)", "Mostrami l' ArchitecturalStructure affittava da (X)", "Mostrami l' ArchitecturalStructures affittava da (X)", "quale (Y) affittava da (X)?", "quale (Y) ha affittava (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "861",
    "lexicalEntryUri" : "http://localhost:8080#to_rent",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) affittare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono affitta da (X)?", "quante (Y) sono affittava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/tenant> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "862",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "863",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "864",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "865",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi creare  (X)?", "chi creare (X)?", "chi creato (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "866",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "867",
    "lexicalEntryUri" : "http://localhost:8080#to_create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "868",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno curare (X)", "Dammi tutti  chi hanno curava (X)", "chi  (X)?", "chi curare (X)?", "chi curare ArchitecturalStructure (X)?", "chi curava (X)?", "chi curava ArchitecturalStructures (X)?", "cosa curare (X)?", "quale (Y) curava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) curare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/maintainedBy> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "869",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti ArchitecturalStructure curare da (X)", "Dammi tutti ArchitecturalStructures curare da (X)", "Mostrami l' ArchitecturalStructure curava da (X)", "Mostrami l' ArchitecturalStructures curava da (X)", "quale (Y) curava da (X)?", "quale (Y) ha curava (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "870",
    "lexicalEntryUri" : "http://localhost:8080#to_maintain",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) curare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono cura da (X)?", "quante (Y) sono curava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/maintainedBy> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "871",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno creare (X)", "Dammi tutti  qual hanno ha creato (X)", "chi creato (X)?", "cosa creare (X)?", "qual creare  (X)?", "qual creare (X)?", "qual ha creato  (X)?", "qual ha creato (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state creato da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "872",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "873",
    "lexicalEntryUri" : "http://localhost:8080#to_create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono creato da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "874",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha inspirato (X)", "Dammi tutti  chi hanno inspirato (X)", "chi ha inspirato  (X)?", "chi ha inspirato (X)?", "chi inspirato  (X)?", "chi inspirato (X)?", "cosa inspirato (X)?", "quale (Y) ha inspirato (X)?", "quali (Y) inspirato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/influenced> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "875",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  inspirato da (X)", "Mostrami l'  ha inspirato da (X)", "da chi fu ha inspirato (X)", "quale (Y) ha inspirato (X)?", "quale (Y) ha inspirato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "876",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) inspirato da (X)?", "quante (Y) sono ha inspirato da (X)?", "quante (Y) sono inspirato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/influenced> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "877",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno ha parlato (X)", "Dammi tutti  qual hanno parlare (X)", "chi parlato (X)?", "cosa parlare (X)?", "qual ha parlato  (X)?", "qual ha parlato (X)?", "qual parlare  (X)?", "qual parlare (X)?", "quale (Y) ha parlato (X)?", "quale (Y) sono state parlato in (X)?", "quali (Y) parlare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "878",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  parlare in (X)", "Mostrami l'  ha parlato in (X)", "quale (Y) ha ha parlato (X)?", "quale (Y) ha parlato in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "879",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) parlare in (X)?", "quante (Y) sono ha parlato in (X)?", "quante (Y) sono parla in (X)?", "quante (Y) sono parlato in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "880",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti populated place qual hanno parlare (X)", "Dammi tutti populated places qual hanno ha parlato (X)", "chi parlato (X)?", "cosa parlare (X)?", "qual ha parlato  (X)?", "qual ha parlato (X)?", "qual parlare  (X)?", "qual parlare (X)?", "quale (Y) ha parlato (X)?", "quale (Y) sono state parlato in (X)?", "quali (Y) parlare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "881",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  parlare in (X)", "Mostrami l'  ha parlato in (X)", "quale (Y) ha ha parlato (X)?", "quale (Y) ha parlato in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "882",
    "lexicalEntryUri" : "http://localhost:8080#to_speak",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "Language" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) parlare in (X)?", "quante (Y) sono ha parlato in (X)?", "quante (Y) sono parla in (X)?", "quante (Y) sono parlato in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/officialLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "883",
    "lexicalEntryUri" : "http://localhost:8080#to_train",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno allenare (X)", "Dammi tutti  chi hanno ha allenato (X)", "chi allenare (X)?", "chi allenare athlete (X)?", "chi ha allenato (X)?", "chi ha allenato athlete (X)?", "cosa allenare (X)?", "quale (Y) ha allenato (X)?", "quali (Y) allenare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/trainer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "884",
    "lexicalEntryUri" : "http://localhost:8080#to_train",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti athlete allenare da (X)", "Mostrami l' athlete ha allenato da (X)", "da chi fu ha allenato (X)", "quale (Y) ha allenato (X)?", "quale (Y) ha allenato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "885",
    "lexicalEntryUri" : "http://localhost:8080#to_train",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) allenare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono allena da (X)?", "quante (Y) sono ha allenato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/trainer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "886",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  chi hanno ha seguito (X)", "Dammi tutti  chi hanno seguire (X)", "chi ha seguito  (X)?", "chi ha seguito (X)?", "chi seguire  (X)?", "chi seguire (X)?", "cosa seguire (X)?", "quale (Y) ha seguito (X)?", "quali (Y) seguire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "887",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dammi tutti  seguire da (X)", "Mostrami l'  ha seguito da (X)", "da chi fu ha seguito (X)", "quale (Y) ha seguito (X)?", "quale (Y) ha seguito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "888",
    "lexicalEntryUri" : "http://localhost:8080#to_succeed_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) seguire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha seguito da (X)?", "quante (Y) sono segue da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/successor> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "889",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la qual hanno esprime (X)", "Dammi tutti films qual hanno esprime (X)", "chi esprime (X)?", "cosa esprime (X)?", "qual esprime  (X)?", "qual esprime (X)?", "quale (Y) esprime (X)?", "quale (Y) sono state esprime da (X)?", "quali (Y) esprime (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "890",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  esprime da (X)", "Mostrami l'  esprime da (X)", "quale (Y) esprime da (X)?", "quale (Y) ha esprime (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "891",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) esprime da (X)?", "quante (Y) sono esprime da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "892",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Colour" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti feminine_la qual hanno esprime (X)", "Dammi tutti films qual hanno esprime (X)", "chi esprime (X)?", "cosa esprime (X)?", "qual esprime  (X)?", "qual esprime (X)?", "quale (Y) esprime (X)?", "quale (Y) sono state esprime da (X)?", "quali (Y) esprime (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/connotation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "893",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  esprime da (X)", "Mostrami l'  esprime da (X)", "quale (Y) esprime da (X)?", "quale (Y) ha esprime (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "894",
    "lexicalEntryUri" : "http://localhost:8080#to_express",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Colour" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) esprime da (X)?", "quante (Y) sono esprime da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/connotation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "895",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Work" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "896",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "897",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Work" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "898",
    "lexicalEntryUri" : "http://localhost:8080#to_breed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno allevare (X)", "Dammi tutti  chi hanno allevava (X)", "chi  (X)?", "chi allevare (X)?", "chi allevare animal (X)?", "chi allevava (X)?", "chi allevava animals (X)?", "cosa allevare (X)?", "quale (Y) allevava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) allevare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/breeder> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "899",
    "lexicalEntryUri" : "http://localhost:8080#to_breed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti animal allevare da (X)", "Dammi tutti animals allevare da (X)", "Mostrami l' animal allevava da (X)", "Mostrami l' animals allevava da (X)", "quale (Y) allevava da (X)?", "quale (Y) ha allevava (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "900",
    "lexicalEntryUri" : "http://localhost:8080#to_breed",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) allevare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono alleva da (X)?", "quante (Y) sono allevava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/breeder> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "901",
    "lexicalEntryUri" : "http://localhost:8080#to_manage",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsTeam" ],
    "returnType" : [ "Athlete" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti athlete chi hanno occuparsi (X)", "Dammi tutti athlete chi hanno si occupava (X)", "chi  (X)?", "chi occuparsi (X)?", "chi occuparsi sports team (X)?", "chi si occupava (X)?", "chi si occupava sports teams (X)?", "cosa occuparsi (X)?", "quale (Y) si occupava (X)?", "quale (Y) sono state  da (X)?", "quali (Y) occuparsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/managerClub> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "902",
    "lexicalEntryUri" : "http://localhost:8080#to_manage",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti sports team occuparsi da (X)", "Dammi tutti sports teams occuparsi da (X)", "Mostrami l' sports team si occupava da (X)", "Mostrami l' sports teams si occupava da (X)", "quale (Y) ha si occupava (X)?", "quale (Y) si occupava da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "903",
    "lexicalEntryUri" : "http://localhost:8080#to_manage",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Athlete" ],
    "returnType" : [ "SportsTeam" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) occuparsi da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono si occupa da (X)?", "quante (Y) sono si occupava da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/managerClub> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "904",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "905",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "906",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "907",
    "lexicalEntryUri" : "http://localhost:8080#to_operate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha operato (X)", "Dammi tutti  chi hanno operare (X)", "chi  (X)?", "chi ha operato (X)?", "chi ha operato airports (X)?", "chi operare (X)?", "chi operare airport (X)?", "cosa operare (X)?", "quale (Y) ha operato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) operare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/operator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "908",
    "lexicalEntryUri" : "http://localhost:8080#to_operate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport operare da (X)", "Dammi tutti airports operare da (X)", "Mostrami l' airport ha operato da (X)", "Mostrami l' airports ha operato da (X)", "quale (Y) ha ha operato (X)?", "quale (Y) ha operato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "909",
    "lexicalEntryUri" : "http://localhost:8080#to_operate",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) operare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha operato da (X)?", "quante (Y) sono opera da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/operator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "910",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "VideoGame" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha pubblicato (X)", "Dammi tutti  chi hanno pubblicare (X)", "chi  (X)?", "chi ha pubblicato  (X)?", "chi ha pubblicato (X)?", "chi pubblicare  (X)?", "chi pubblicare (X)?", "cosa pubblicare (X)?", "quale (Y) ha pubblicato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) pubblicare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/publisher> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "911",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  pubblicare da (X)", "Mostrami l'  ha pubblicato da (X)", "quale (Y) ha ha pubblicato (X)?", "quale (Y) ha pubblicato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "912",
    "lexicalEntryUri" : "http://localhost:8080#to_publish_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) pubblicare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha pubblicato da (X)?", "quante (Y) sono pubblica da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "913",
    "lexicalEntryUri" : "http://localhost:8080#to_Cross_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "River" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  qual hanno attraversare (X)", "Dammi tutti  qual hanno ha attraversato (X)", "chi è attraversato (X)?", "cosa attraversare (X)?", "qual attraversare  (X)?", "qual attraversare (X)?", "qual ha attraversato  (X)?", "qual ha attraversato (X)?", "quale (Y) ha attraversato (X)?", "quale (Y) sono state è attraversato da (X)?", "quali (Y) attraversare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/crosses> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "914",
    "lexicalEntryUri" : "http://localhost:8080#to_Cross_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  attraversare da (X)", "Mostrami l'  ha attraversato da (X)", "quale (Y) ha attraversato da (X)?", "quale (Y) ha ha attraversato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "915",
    "lexicalEntryUri" : "http://localhost:8080#to_Cross_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) attraversare da (X)?", "quante (Y) sono attraversa da (X)?", "quante (Y) sono ha attraversato da (X)?", "quante (Y) sono è attraversato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/crosses> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "916",
    "lexicalEntryUri" : "http://localhost:8080#to_serve",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airline" ],
    "returnType" : [ "Airport" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airport qual hanno serve (X)", "Dammi tutti airports qual hanno ha servito (X)", "chi  (X)?", "cosa serve (X)?", "qual ha servito (X)?", "qual ha servito airlines (X)?", "qual serve (X)?", "qual serve airline (X)?", "quale (Y) ha servito (X)?", "quale (Y) sono state  da (X)?", "quali (Y) serve (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "917",
    "lexicalEntryUri" : "http://localhost:8080#to_serve",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti airline serve da (X)", "Dammi tutti airlines serve da (X)", "Mostrami l' airline ha servito da (X)", "Mostrami l' airlines ha servito da (X)", "quale (Y) ha ha servito (X)?", "quale (Y) ha servito da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "918",
    "lexicalEntryUri" : "http://localhost:8080#to_serve",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Airport" ],
    "returnType" : [ "Airline" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) serve da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha servito da (X)?", "quante (Y) sono sono serviti da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/targetAirport> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "919",
    "lexicalEntryUri" : "http://localhost:8080#to_design",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Architect" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti architect chi hanno progettare (X)", "Dammi tutti architects chi hanno ha progettato (X)", "chi ha progettato  (X)?", "chi ha progettato (X)?", "chi progettare  (X)?", "chi progettare (X)?", "chi è stato progettato (X)?", "cosa progettare (X)?", "quale (Y) ha progettato (X)?", "quale (Y) sono state è stato progettato da (X)?", "quali (Y) progettare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/architect> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "920",
    "lexicalEntryUri" : "http://localhost:8080#to_design",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  progettare da (X)", "Mostrami l'  ha progettato da (X)", "quale (Y) ha ha progettato (X)?", "quale (Y) ha progettato da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "921",
    "lexicalEntryUri" : "http://localhost:8080#to_design",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Architect" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) progettare da (X)?", "quante (Y) sono ha progettato da (X)?", "quante (Y) sono progetta da (X)?", "quante (Y) sono è stato progettato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/architect> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "922",
    "lexicalEntryUri" : "http://localhost:8080#to_produce",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha prodotto (X)", "Dammi tutti  chi hanno produrre (X)", "chi  (X)?", "chi ha prodotto  (X)?", "chi ha prodotto (X)?", "chi produrre  (X)?", "chi produrre (X)?", "cosa produrre (X)?", "quale (Y) ha prodotto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) produrre (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/producer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "923",
    "lexicalEntryUri" : "http://localhost:8080#to_produce",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  produrre da (X)", "Mostrami l'  ha prodotto da (X)", "quale (Y) ha ha prodotto (X)?", "quale (Y) ha prodotto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "924",
    "lexicalEntryUri" : "http://localhost:8080#to_produce",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Film" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) produrre da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha prodotto da (X)?", "quante (Y) sono produce da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/producer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "925",
    "lexicalEntryUri" : "http://localhost:8080#to_create",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "926",
    "lexicalEntryUri" : "http://localhost:8080#to_create",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "927",
    "lexicalEntryUri" : "http://localhost:8080#to_create",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "928",
    "lexicalEntryUri" : "http://localhost:8080#to_Discover_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scoperto (X)", "Dammi tutti  chi hanno scoprire (X)", "chi  (X)?", "chi ha scoperto  (X)?", "chi ha scoperto (X)?", "chi scoprire  (X)?", "chi scoprire (X)?", "cosa scoprire (X)?", "quale (Y) ha scoperto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) scoprire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "929",
    "lexicalEntryUri" : "http://localhost:8080#to_Discover_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scoprire da (X)", "Mostrami l'  ha scoperto da (X)", "quale (Y) ha ha scoperto (X)?", "quale (Y) ha scoperto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "930",
    "lexicalEntryUri" : "http://localhost:8080#to_Discover_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scoprire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha scoperto da (X)?", "quante (Y) sono scopre da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "931",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MusicalWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto (X)?", "chi ha scritto musics (X)?", "chi scrivere (X)?", "chi scrivere music (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "932",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti music scrivere da (X)", "Dammi tutti musics scrivere da (X)", "Mostrami l' music ha scritto da (X)", "Mostrami l' musics ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "933",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MusicalWork" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "934",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "TelevisionShow" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/composer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "935",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "936",
    "lexicalEntryUri" : "http://localhost:8080#to_write_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "TelevisionShow" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/composer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "937",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scoperto (X)", "Dammi tutti  chi hanno scoprire (X)", "chi  (X)?", "chi ha scoperto  (X)?", "chi ha scoperto (X)?", "chi scoprire  (X)?", "chi scoprire (X)?", "cosa scoprire (X)?", "quale (Y) ha scoperto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) scoprire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "938",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scoprire da (X)", "Mostrami l'  ha scoperto da (X)", "quale (Y) ha ha scoperto (X)?", "quale (Y) ha scoperto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "939",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scoprire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha scoperto da (X)?", "quante (Y) sono scopre da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "940",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scoperto (X)", "Dammi tutti  chi hanno scoprire (X)", "chi  (X)?", "chi ha scoperto (X)?", "chi ha scoperto planets (X)?", "chi scoprire (X)?", "chi scoprire plant (X)?", "cosa scoprire (X)?", "quale (Y) ha scoperto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) scoprire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "941",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti planets scoprire da (X)", "Dammi tutti plant scoprire da (X)", "Mostrami l' planets ha scoperto da (X)", "Mostrami l' plant ha scoperto da (X)", "quale (Y) ha ha scoperto (X)?", "quale (Y) ha scoperto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "942",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scoprire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha scoperto da (X)?", "quante (Y) sono scopre da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "943",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Planet" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scoperto (X)", "Dammi tutti  chi hanno scoprire (X)", "chi  (X)?", "chi ha scoperto (X)?", "chi ha scoperto planets (X)?", "chi scoprire (X)?", "chi scoprire plant (X)?", "cosa scoprire (X)?", "quale (Y) ha scoperto (X)?", "quale (Y) sono state  da (X)?", "quali (Y) scoprire (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "944",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti planets scoprire da (X)", "Dammi tutti plant scoprire da (X)", "Mostrami l' planets ha scoperto da (X)", "Mostrami l' plant ha scoperto da (X)", "quale (Y) ha ha scoperto (X)?", "quale (Y) ha scoperto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "945",
    "lexicalEntryUri" : "http://localhost:8080#to_discover",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Planet" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scoprire da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono ha scoperto da (X)?", "quante (Y) sono scopre da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/discoverer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "946",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Song" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/writer> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "947",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "948",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Song" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/writer> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "949",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Book" ],
    "returnType" : [ "Person" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno ha scritto (X)", "Dammi tutti  chi hanno scrivere (X)", "chi ha scritto  (X)?", "chi ha scritto (X)?", "chi scrivere  (X)?", "chi scrivere (X)?", "chi è stato scritto (X)?", "cosa scrivere (X)?", "quale (Y) ha scritto (X)?", "quale (Y) sono state è stato scritto da (X)?", "quali (Y) scrivere (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/author> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "950",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  scrivere da (X)", "Mostrami l'  ha scritto da (X)", "quale (Y) ha ha scritto (X)?", "quale (Y) ha scritto da (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "951",
    "lexicalEntryUri" : "http://localhost:8080#to_write",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Book" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) scrivere da (X)?", "quante (Y) sono ha scritto da (X)?", "quante (Y) sono scrive da (X)?", "quante (Y) sono è stato scritto da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/author> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "952",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Website" ],
    "returnType" : [ "Agent" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  chi hanno creare (X)", "Dammi tutti  chi hanno ha creato (X)", "chi  (X)?", "chi creare  (X)?", "chi creare (X)?", "chi ha creato  (X)?", "chi ha creato (X)?", "cosa creare (X)?", "quale (Y) ha creato (X)?", "quale (Y) sono state  da (X)?", "quali (Y) creare (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "953",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dammi tutti  creare da (X)", "Mostrami l'  ha creato da (X)", "quale (Y) ha creato da (X)?", "quale (Y) ha ha creato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "954",
    "lexicalEntryUri" : "http://localhost:8080#to_Create_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Agent" ],
    "returnType" : [ "Website" ],
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ "quante (Y) creare da (X)?", "quante (Y) sono  da (X)?", "quante (Y) sono crea da (X)?", "quante (Y) sono ha creato da (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/creator> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "955",
    "lexicalEntryUri" : "http://localhost:8080#benin_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "956",
    "lexicalEntryUri" : "http://localhost:8080#benin_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "957",
    "lexicalEntryUri" : "http://localhost:8080#andorran_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "958",
    "lexicalEntryUri" : "http://localhost:8080#andorran_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "959",
    "lexicalEntryUri" : "http://localhost:8080#greek_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "960",
    "lexicalEntryUri" : "http://localhost:8080#greek_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "961",
    "lexicalEntryUri" : "http://localhost:8080#bengali_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "962",
    "lexicalEntryUri" : "http://localhost:8080#bengali_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "963",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "964",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "965",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "966",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "967",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "968",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "969",
    "lexicalEntryUri" : "http://localhost:8080#algerian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "970",
    "lexicalEntryUri" : "http://localhost:8080#algerian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "971",
    "lexicalEntryUri" : "http://localhost:8080#afghan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "972",
    "lexicalEntryUri" : "http://localhost:8080#afghan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "973",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "974",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "975",
    "lexicalEntryUri" : "http://localhost:8080#czech_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "976",
    "lexicalEntryUri" : "http://localhost:8080#czech_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "977",
    "lexicalEntryUri" : "http://localhost:8080#methodist",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "978",
    "lexicalEntryUri" : "http://localhost:8080#methodist",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "979",
    "lexicalEntryUri" : "http://localhost:8080#botswana_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "980",
    "lexicalEntryUri" : "http://localhost:8080#botswana_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "981",
    "lexicalEntryUri" : "http://localhost:8080#afghan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "982",
    "lexicalEntryUri" : "http://localhost:8080#afghan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "983",
    "lexicalEntryUri" : "http://localhost:8080#aruban_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "984",
    "lexicalEntryUri" : "http://localhost:8080#aruban_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "985",
    "lexicalEntryUri" : "http://localhost:8080#belizean_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "986",
    "lexicalEntryUri" : "http://localhost:8080#belizean_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "987",
    "lexicalEntryUri" : "http://localhost:8080#algerian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "988",
    "lexicalEntryUri" : "http://localhost:8080#algerian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "989",
    "lexicalEntryUri" : "http://localhost:8080#albanian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "990",
    "lexicalEntryUri" : "http://localhost:8080#albanian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "991",
    "lexicalEntryUri" : "http://localhost:8080#danish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "992",
    "lexicalEntryUri" : "http://localhost:8080#danish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "993",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "994",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "995",
    "lexicalEntryUri" : "http://localhost:8080#belizean_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "996",
    "lexicalEntryUri" : "http://localhost:8080#belizean_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "997",
    "lexicalEntryUri" : "http://localhost:8080#aruban_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "998",
    "lexicalEntryUri" : "http://localhost:8080#aruban_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "999",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1000",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1001",
    "lexicalEntryUri" : "http://localhost:8080#angolan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1002",
    "lexicalEntryUri" : "http://localhost:8080#angolan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1003",
    "lexicalEntryUri" : "http://localhost:8080#colombian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1004",
    "lexicalEntryUri" : "http://localhost:8080#colombian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1005",
    "lexicalEntryUri" : "http://localhost:8080#andorran_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1006",
    "lexicalEntryUri" : "http://localhost:8080#andorran_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1007",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1008",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1009",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1010",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1011",
    "lexicalEntryUri" : "http://localhost:8080#belizean_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1012",
    "lexicalEntryUri" : "http://localhost:8080#belizean_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1013",
    "lexicalEntryUri" : "http://localhost:8080#methodist_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1014",
    "lexicalEntryUri" : "http://localhost:8080#methodist_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1015",
    "lexicalEntryUri" : "http://localhost:8080#czech_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1016",
    "lexicalEntryUri" : "http://localhost:8080#czech_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1017",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1018",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1019",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1020",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1021",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1022",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1023",
    "lexicalEntryUri" : "http://localhost:8080#greek_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1024",
    "lexicalEntryUri" : "http://localhost:8080#greek_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1025",
    "lexicalEntryUri" : "http://localhost:8080#australian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1026",
    "lexicalEntryUri" : "http://localhost:8080#australian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1027",
    "lexicalEntryUri" : "http://localhost:8080#australian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1028",
    "lexicalEntryUri" : "http://localhost:8080#australian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1029",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1030",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1031",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1032",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1033",
    "lexicalEntryUri" : "http://localhost:8080#female_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1034",
    "lexicalEntryUri" : "http://localhost:8080#female_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1035",
    "lexicalEntryUri" : "http://localhost:8080#female",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1036",
    "lexicalEntryUri" : "http://localhost:8080#female",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1037",
    "lexicalEntryUri" : "http://localhost:8080#democratic",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#democratic_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1038",
    "lexicalEntryUri" : "http://localhost:8080#democratic",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_states)> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1039",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1040",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1041",
    "lexicalEntryUri" : "http://localhost:8080#andorran_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1042",
    "lexicalEntryUri" : "http://localhost:8080#andorran_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1043",
    "lexicalEntryUri" : "http://localhost:8080#colombian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1044",
    "lexicalEntryUri" : "http://localhost:8080#colombian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1045",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1046",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1047",
    "lexicalEntryUri" : "http://localhost:8080#barbadian",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1048",
    "lexicalEntryUri" : "http://localhost:8080#barbadian",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Barbados> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1049",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1050",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1051",
    "lexicalEntryUri" : "http://localhost:8080#czech_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1052",
    "lexicalEntryUri" : "http://localhost:8080#czech_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1053",
    "lexicalEntryUri" : "http://localhost:8080#belgian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1054",
    "lexicalEntryUri" : "http://localhost:8080#belgian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1055",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Swedish_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1056",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1057",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1058",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1059",
    "lexicalEntryUri" : "http://localhost:8080#angolan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1060",
    "lexicalEntryUri" : "http://localhost:8080#angolan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1061",
    "lexicalEntryUri" : "http://localhost:8080#algerian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1062",
    "lexicalEntryUri" : "http://localhost:8080#algerian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1063",
    "lexicalEntryUri" : "http://localhost:8080#danish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1064",
    "lexicalEntryUri" : "http://localhost:8080#danish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1065",
    "lexicalEntryUri" : "http://localhost:8080#angolan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1066",
    "lexicalEntryUri" : "http://localhost:8080#angolan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1067",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1068",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1069",
    "lexicalEntryUri" : "http://localhost:8080#greek_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1070",
    "lexicalEntryUri" : "http://localhost:8080#greek_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1071",
    "lexicalEntryUri" : "http://localhost:8080#botswana_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1072",
    "lexicalEntryUri" : "http://localhost:8080#botswana_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1073",
    "lexicalEntryUri" : "http://localhost:8080#benin_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1074",
    "lexicalEntryUri" : "http://localhost:8080#benin_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1075",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1076",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1077",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1078",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1079",
    "lexicalEntryUri" : "http://localhost:8080#aruban_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1080",
    "lexicalEntryUri" : "http://localhost:8080#aruban_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1081",
    "lexicalEntryUri" : "http://localhost:8080#colombian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1082",
    "lexicalEntryUri" : "http://localhost:8080#colombian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1083",
    "lexicalEntryUri" : "http://localhost:8080#afghan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1084",
    "lexicalEntryUri" : "http://localhost:8080#afghan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1085",
    "lexicalEntryUri" : "http://localhost:8080#belgian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1086",
    "lexicalEntryUri" : "http://localhost:8080#belgian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1087",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Swedish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1088",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1089",
    "lexicalEntryUri" : "http://localhost:8080#australian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1090",
    "lexicalEntryUri" : "http://localhost:8080#australian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1091",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1092",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1093",
    "lexicalEntryUri" : "http://localhost:8080#albanian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1094",
    "lexicalEntryUri" : "http://localhost:8080#albanian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1095",
    "lexicalEntryUri" : "http://localhost:8080#bengali_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1096",
    "lexicalEntryUri" : "http://localhost:8080#bengali_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1097",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1098",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1099",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1100",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1101",
    "lexicalEntryUri" : "http://localhost:8080#benin_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1102",
    "lexicalEntryUri" : "http://localhost:8080#benin_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1103",
    "lexicalEntryUri" : "http://localhost:8080#andorran_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1104",
    "lexicalEntryUri" : "http://localhost:8080#andorran_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1105",
    "lexicalEntryUri" : "http://localhost:8080#greek_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1106",
    "lexicalEntryUri" : "http://localhost:8080#greek_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1107",
    "lexicalEntryUri" : "http://localhost:8080#bengali_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1108",
    "lexicalEntryUri" : "http://localhost:8080#bengali_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1109",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1110",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1111",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1112",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1113",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1114",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1115",
    "lexicalEntryUri" : "http://localhost:8080#algerian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1116",
    "lexicalEntryUri" : "http://localhost:8080#algerian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1117",
    "lexicalEntryUri" : "http://localhost:8080#afghan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1118",
    "lexicalEntryUri" : "http://localhost:8080#afghan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1119",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1120",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1121",
    "lexicalEntryUri" : "http://localhost:8080#czech_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1122",
    "lexicalEntryUri" : "http://localhost:8080#czech_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1123",
    "lexicalEntryUri" : "http://localhost:8080#methodist",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1124",
    "lexicalEntryUri" : "http://localhost:8080#methodist",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1125",
    "lexicalEntryUri" : "http://localhost:8080#botswana_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1126",
    "lexicalEntryUri" : "http://localhost:8080#botswana_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1127",
    "lexicalEntryUri" : "http://localhost:8080#afghan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1128",
    "lexicalEntryUri" : "http://localhost:8080#afghan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1129",
    "lexicalEntryUri" : "http://localhost:8080#aruban_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1130",
    "lexicalEntryUri" : "http://localhost:8080#aruban_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1131",
    "lexicalEntryUri" : "http://localhost:8080#belizean_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1132",
    "lexicalEntryUri" : "http://localhost:8080#belizean_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1133",
    "lexicalEntryUri" : "http://localhost:8080#algerian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1134",
    "lexicalEntryUri" : "http://localhost:8080#algerian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1135",
    "lexicalEntryUri" : "http://localhost:8080#albanian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1136",
    "lexicalEntryUri" : "http://localhost:8080#albanian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1137",
    "lexicalEntryUri" : "http://localhost:8080#danish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1138",
    "lexicalEntryUri" : "http://localhost:8080#danish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1139",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1140",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1141",
    "lexicalEntryUri" : "http://localhost:8080#belizean_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1142",
    "lexicalEntryUri" : "http://localhost:8080#belizean_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1143",
    "lexicalEntryUri" : "http://localhost:8080#aruban_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1144",
    "lexicalEntryUri" : "http://localhost:8080#aruban_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1145",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1146",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1147",
    "lexicalEntryUri" : "http://localhost:8080#angolan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1148",
    "lexicalEntryUri" : "http://localhost:8080#angolan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1149",
    "lexicalEntryUri" : "http://localhost:8080#colombian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1150",
    "lexicalEntryUri" : "http://localhost:8080#colombian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1151",
    "lexicalEntryUri" : "http://localhost:8080#andorran_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1152",
    "lexicalEntryUri" : "http://localhost:8080#andorran_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1153",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1154",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1155",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1156",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1157",
    "lexicalEntryUri" : "http://localhost:8080#belizean_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belizean_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1158",
    "lexicalEntryUri" : "http://localhost:8080#belizean_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belize> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1159",
    "lexicalEntryUri" : "http://localhost:8080#methodist_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#methodist_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1160",
    "lexicalEntryUri" : "http://localhost:8080#methodist_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1161",
    "lexicalEntryUri" : "http://localhost:8080#czech_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1162",
    "lexicalEntryUri" : "http://localhost:8080#czech_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1163",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1164",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1165",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1166",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1167",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1168",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1169",
    "lexicalEntryUri" : "http://localhost:8080#greek_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1170",
    "lexicalEntryUri" : "http://localhost:8080#greek_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1171",
    "lexicalEntryUri" : "http://localhost:8080#australian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1172",
    "lexicalEntryUri" : "http://localhost:8080#australian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1173",
    "lexicalEntryUri" : "http://localhost:8080#australian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1174",
    "lexicalEntryUri" : "http://localhost:8080#australian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1175",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1176",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1177",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1178",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1179",
    "lexicalEntryUri" : "http://localhost:8080#female_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1180",
    "lexicalEntryUri" : "http://localhost:8080#female_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1181",
    "lexicalEntryUri" : "http://localhost:8080#female",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#female_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1182",
    "lexicalEntryUri" : "http://localhost:8080#female",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1183",
    "lexicalEntryUri" : "http://localhost:8080#democratic",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#democratic_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1184",
    "lexicalEntryUri" : "http://localhost:8080#democratic",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_states)> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1185",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1186",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1187",
    "lexicalEntryUri" : "http://localhost:8080#andorran_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#andorran_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1188",
    "lexicalEntryUri" : "http://localhost:8080#andorran_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Andorra> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1189",
    "lexicalEntryUri" : "http://localhost:8080#colombian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1190",
    "lexicalEntryUri" : "http://localhost:8080#colombian_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1191",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bahamian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1192",
    "lexicalEntryUri" : "http://localhost:8080#bahamian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/The_Bahamas> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1193",
    "lexicalEntryUri" : "http://localhost:8080#barbadian",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#barbadian_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1194",
    "lexicalEntryUri" : "http://localhost:8080#barbadian",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Barbados> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1195",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belarusian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1196",
    "lexicalEntryUri" : "http://localhost:8080#belarusian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belarus> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1197",
    "lexicalEntryUri" : "http://localhost:8080#czech_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#czech_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1198",
    "lexicalEntryUri" : "http://localhost:8080#czech_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Czech_Republic> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1199",
    "lexicalEntryUri" : "http://localhost:8080#belgian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1200",
    "lexicalEntryUri" : "http://localhost:8080#belgian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1201",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Swedish_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1202",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1203",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#brazilian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1204",
    "lexicalEntryUri" : "http://localhost:8080#brazilian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Brazil> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1205",
    "lexicalEntryUri" : "http://localhost:8080#angolan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1206",
    "lexicalEntryUri" : "http://localhost:8080#angolan_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1207",
    "lexicalEntryUri" : "http://localhost:8080#algerian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#algerian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1208",
    "lexicalEntryUri" : "http://localhost:8080#algerian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Algeria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1209",
    "lexicalEntryUri" : "http://localhost:8080#danish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#danish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1210",
    "lexicalEntryUri" : "http://localhost:8080#danish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Denmark> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1211",
    "lexicalEntryUri" : "http://localhost:8080#angolan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#angolan_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1212",
    "lexicalEntryUri" : "http://localhost:8080#angolan_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Angola> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1213",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Spanish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1214",
    "lexicalEntryUri" : "http://localhost:8080#Spanish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1215",
    "lexicalEntryUri" : "http://localhost:8080#greek_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#greek_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1216",
    "lexicalEntryUri" : "http://localhost:8080#greek_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Greece> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1217",
    "lexicalEntryUri" : "http://localhost:8080#botswana_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#botswana_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1218",
    "lexicalEntryUri" : "http://localhost:8080#botswana_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Botswana> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1219",
    "lexicalEntryUri" : "http://localhost:8080#benin_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#benin_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1220",
    "lexicalEntryUri" : "http://localhost:8080#benin_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Benin> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1221",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bermudian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1222",
    "lexicalEntryUri" : "http://localhost:8080#bermudian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bermuda> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1223",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bolivian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1224",
    "lexicalEntryUri" : "http://localhost:8080#bolivian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bolivia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1225",
    "lexicalEntryUri" : "http://localhost:8080#aruban_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#aruban_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1226",
    "lexicalEntryUri" : "http://localhost:8080#aruban_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Aruba> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1227",
    "lexicalEntryUri" : "http://localhost:8080#colombian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#colombian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1228",
    "lexicalEntryUri" : "http://localhost:8080#colombian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Colombia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1229",
    "lexicalEntryUri" : "http://localhost:8080#afghan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#afghan_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1230",
    "lexicalEntryUri" : "http://localhost:8080#afghan_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Afghanistan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1231",
    "lexicalEntryUri" : "http://localhost:8080#belgian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#belgian_m_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1232",
    "lexicalEntryUri" : "http://localhost:8080#belgian_m_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1233",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#Swedish_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1234",
    "lexicalEntryUri" : "http://localhost:8080#Swedish_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1235",
    "lexicalEntryUri" : "http://localhost:8080#australian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#australian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1236",
    "lexicalEntryUri" : "http://localhost:8080#australian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1237",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1238",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1239",
    "lexicalEntryUri" : "http://localhost:8080#albanian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#albanian_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1240",
    "lexicalEntryUri" : "http://localhost:8080#albanian_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Albania> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1241",
    "lexicalEntryUri" : "http://localhost:8080#bengali_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bengali_p_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1242",
    "lexicalEntryUri" : "http://localhost:8080#bengali_p",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bangladesh> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1243",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#bulgarian_f_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1244",
    "lexicalEntryUri" : "http://localhost:8080#bulgarian_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Bulgaria> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1245",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://localhost:8080#azerbaijani_m_sense_1_res> ?objOfProp))\n",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1246",
    "lexicalEntryUri" : "http://localhost:8080#azerbaijani_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AA",
    "sentenceTemplate" : "predicateAdjectiveBaseForm",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Azerbaijan> }",
    "bindingSparql" : null,
    "returnVariable" : "isA"
  }, {
    "id" : "1247",
    "lexicalEntryUri" : "http://localhost:8080#tall_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ "qual è persone la piiù alta in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1248",
    "lexicalEntryUri" : "http://localhost:8080#tall_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alta (X)?", "quanto è alta persone (X)?", "quanto è alta è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1249",
    "lexicalEntryUri" : "http://localhost:8080#tall_f",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1250",
    "lexicalEntryUri" : "http://localhost:8080#Large_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "qual è  il più grande in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1251",
    "lexicalEntryUri" : "http://localhost:8080#Large_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è grande  (X)?", "quanto è grande (X)?", "quanto è grande è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1252",
    "lexicalEntryUri" : "http://localhost:8080#Large_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1253",
    "lexicalEntryUri" : "http://localhost:8080#Long_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "River" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più lungo in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1254",
    "lexicalEntryUri" : "http://localhost:8080#Long_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è lungo  (X)?", "quanto è lungo (X)?", "quanto è lungo è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1255",
    "lexicalEntryUri" : "http://localhost:8080#Long_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1256",
    "lexicalEntryUri" : "http://localhost:8080#high",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più alto in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1257",
    "lexicalEntryUri" : "http://localhost:8080#high",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto  (X)?", "quanto è alto (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1258",
    "lexicalEntryUri" : "http://localhost:8080#high",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1259",
    "lexicalEntryUri" : "http://localhost:8080#Small_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più piccolo in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1260",
    "lexicalEntryUri" : "http://localhost:8080#Small_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è piccolo  (X)?", "quanto è piccolo (X)?", "quanto è piccolo è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1261",
    "lexicalEntryUri" : "http://localhost:8080#Small_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1262",
    "lexicalEntryUri" : "http://localhost:8080#young",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "DartsPlayer" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "chi è  il più giovane in films?", "chi è  il più giovane?", "qual è  il più giovane in films?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1263",
    "lexicalEntryUri" : "http://localhost:8080#young",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è giovane  (X)?", "quanto è giovane (X)?", "quanto è giovane è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1264",
    "lexicalEntryUri" : "http://localhost:8080#young",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "DartsPlayer" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthDate> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1265",
    "lexicalEntryUri" : "http://localhost:8080#Small_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più piccolo al (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?num WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1266",
    "lexicalEntryUri" : "http://localhost:8080#Small_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è piccolo  (X)?", "quanto è piccolo (X)?", "quanto è piccolo è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1267",
    "lexicalEntryUri" : "http://localhost:8080#Small_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1268",
    "lexicalEntryUri" : "http://localhost:8080#tall_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Number" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ "qual è persone il più alto in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?Answer . ?Answer <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1269",
    "lexicalEntryUri" : "http://localhost:8080#tall_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto (X)?", "quanto è alto persone (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1270",
    "lexicalEntryUri" : "http://localhost:8080#tall_m",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Person" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1271",
    "lexicalEntryUri" : "http://localhost:8080#High_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più alto in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1272",
    "lexicalEntryUri" : "http://localhost:8080#High_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto  (X)?", "quanto è alto (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1273",
    "lexicalEntryUri" : "http://localhost:8080#High_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1274",
    "lexicalEntryUri" : "http://localhost:8080#populous",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  la più popolosa al (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1275",
    "lexicalEntryUri" : "http://localhost:8080#populous",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è popolosa  (X)?", "quanto è popolosa (X)?", "quanto è popolosa è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1276",
    "lexicalEntryUri" : "http://localhost:8080#populous",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1277",
    "lexicalEntryUri" : "http://localhost:8080#Long_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Bridge" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più lungo in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/length> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1278",
    "lexicalEntryUri" : "http://localhost:8080#Long_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è lungo  (X)?", "quanto è lungo (X)?", "quanto è lungo è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/length> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1279",
    "lexicalEntryUri" : "http://localhost:8080#Long_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Bridge" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/length> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1280",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Building" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "qual è Building il più alto in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1281",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto (X)?", "quanto è alto Building (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/elevation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1282",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Building" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/elevation> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1283",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "Number" ],
    "frameType" : "AG",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://localhost:8080#tall_res> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1284",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto (X)?", "quanto è alto persone (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1285",
    "lexicalEntryUri" : "http://localhost:8080#tall",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <null> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1286",
    "lexicalEntryUri" : "http://localhost:8080#big",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "qual è  il più grande in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1287",
    "lexicalEntryUri" : "http://localhost:8080#big",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è grande  (X)?", "quanto è grande (X)?", "quanto è grande è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1288",
    "lexicalEntryUri" : "http://localhost:8080#big",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Stadium" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/seatingCapacity> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1289",
    "lexicalEntryUri" : "http://localhost:8080#High_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Lighthouse" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più alto in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1290",
    "lexicalEntryUri" : "http://localhost:8080#High_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alto  (X)?", "quanto è alto (X)?", "quanto è alto è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1291",
    "lexicalEntryUri" : "http://localhost:8080#High_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1292",
    "lexicalEntryUri" : "http://localhost:8080#Large_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "chi è  il più grande al films?", "chi è  il più grande?", "qual è  il più grande al films?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1293",
    "lexicalEntryUri" : "http://localhost:8080#Large_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è grande  (X)?", "quanto è grande (X)?", "quanto è grande è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1294",
    "lexicalEntryUri" : "http://localhost:8080#Large_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Thing" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1295",
    "lexicalEntryUri" : "http://localhost:8080#large",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è  il più grande in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1296",
    "lexicalEntryUri" : "http://localhost:8080#large",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è grande  (X)?", "quanto è grande (X)?", "quanto è grande è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1297",
    "lexicalEntryUri" : "http://localhost:8080#large",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/areaTotal> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1298",
    "lexicalEntryUri" : "http://localhost:8080#Tall_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Tower" ],
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "qual è tower il più alta in (X)?" ],
    "sparqlQuery" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Tower> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1299",
    "lexicalEntryUri" : "http://localhost:8080#Tall_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Tower" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "quanto è alta (X)?", "quanto è alta tower (X)?", "quanto è alta è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1300",
    "lexicalEntryUri" : "http://localhost:8080#Tall_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Tower" ],
    "returnType" : [ "Place" ],
    "frameType" : "AG",
    "sentenceTemplate" : "comperative",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT DISTINCT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > VARIABLE ) }",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1301",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa nascere (X)?", "dove è nato (X)?", "in quale (Y) nasce (X)?", "in quale (Y) nascere (X)?", "in quale (Y) è nato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1302",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1303",
    "lexicalEntryUri" : "http://localhost:8080#start_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/mouthLocation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1304",
    "lexicalEntryUri" : "http://localhost:8080#bury_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era è sepolto (X)?", "a quale (Y) è è sepolto (X)?", "a quali (Y) seppellire (X)?", "dove era è sepolto (X)?", "dove è è sepolto (X)?", "quali (Y) seppellire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1305",
    "lexicalEntryUri" : "http://localhost:8080#bury_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è è sepolto (X)?", "quali  seppellire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1306",
    "lexicalEntryUri" : "http://localhost:8080#bury_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/restingPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1307",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Single" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) ha vissuto (X)?", "a quale (Y) vive (X)?", "a quale (Y) vivere (X)?", "chi cosa vivere (X)?", "dove ha vissuto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1308",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1309",
    "lexicalEntryUri" : "http://localhost:8080#live_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Single" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1310",
    "lexicalEntryUri" : "http://localhost:8080#born_in_actor",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Actor" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era è nato (X)?", "a quale (Y) è è nato (X)?", "a quali (Y) nascere (X)?", "dove era è nato (X)?", "dove è è nato (X)?", "quali (Y) nascere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1311",
    "lexicalEntryUri" : "http://localhost:8080#born_in_actor",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è è nato (X)?", "quali  nascere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1312",
    "lexicalEntryUri" : "http://localhost:8080#born_in_actor",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Actor" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1313",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "BodyOfWater" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "attraverso quale (Y) scorre (X)?", "attraverso quale (Y) scorrere (X)?", "attraverso quale (Y) scorreva (X)?", "chi cosa scorrere (X)?", "dove scorreva (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1314",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1315",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "BodyOfWater" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1316",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "HistoricPlace" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa trovarsi (X)?", "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1317",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "HistoricPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1318",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "HistoricPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1319",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quando sciogliere (X)?", "quando è sciolta (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1320",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1321",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1322",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "WineRegion" ],
    "returnType" : [ "Grape" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "dove cresceva (X)?", "in quale (Y) crescere (X)?", "in quale (Y) cresceva (X)?", "quale (Y) crescere in (X)?", "quali (Y) cresce in (X)?", "quali (Y) cresceva in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1323",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1324",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Grape" ],
    "returnType" : [ "WineRegion" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/growingGrape> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1325",
    "lexicalEntryUri" : "http://localhost:8080#die_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "nel quale (Y) è morto (X)?", "quali (Y)  è morto (X)?", "quando  morto (X)?", "quando è morto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1326",
    "lexicalEntryUri" : "http://localhost:8080#die_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1327",
    "lexicalEntryUri" : "http://localhost:8080#die_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1328",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Mountain" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1329",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1330",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Mountain" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/locatedInArea> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1331",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryUnit" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa trovarsi (X)?", "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1332",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1333",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "MilitaryUnit" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1334",
    "lexicalEntryUri" : "http://localhost:8080#born_in_person_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era nato (X)?", "a quale (Y) è è nato (X)?", "a quali (Y) nascere (X)?", "dove era è nato (X)?", "dove è è nato (X)?", "quali (Y) nascere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1335",
    "lexicalEntryUri" : "http://localhost:8080#born_in_person_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è nato (X)?", "a quale (Y) è è nato (X)?", "quali  nascere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1336",
    "lexicalEntryUri" : "http://localhost:8080#born_in_person_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1337",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "River" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "attraverso quale (Y) scorre (X)?", "attraverso quale (Y) scorrere (X)?", "attraverso quale (Y) scorreva (X)?", "chi cosa scorrere (X)?", "dove scorreva (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/city> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1338",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1339",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "River" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/city> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1340",
    "lexicalEntryUri" : "http://localhost:8080#die_from",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "di cosa è morto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1341",
    "lexicalEntryUri" : "http://localhost:8080#die_from",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1342",
    "lexicalEntryUri" : "http://localhost:8080#die_from",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathCause> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1343",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era morto (X)?", "a quale (Y) è morto (X)?", "a quali (Y) morire (X)?", "dove era morto (X)?", "dove è morto (X)?", "quali (Y) morire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1344",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è morto (X)?", "quali  morire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1345",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1346",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "ArchitecturalStructure" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa trova (X)?", "dove trova (X)?", "in quale (Y) trova (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1347",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1348",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_8",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "ArchitecturalStructure" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1349",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa iniziare (X)?", "dove è iniziato (X)?", "in quale (Y) ha inizio (X)?", "in quale (Y) inizia (X)?", "in quale (Y) iniziare (X)?", "in quale (Y) è iniziato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeStart> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1350",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1351",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1352",
    "lexicalEntryUri" : "http://localhost:8080#cost",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Film" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quante costa  (X)?", "quante costare  (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/budget> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1353",
    "lexicalEntryUri" : "http://localhost:8080#cost",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "quante costare  (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1354",
    "lexicalEntryUri" : "http://localhost:8080#cost",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Film" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/budget> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1355",
    "lexicalEntryUri" : "http://localhost:8080#abrevia",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ " quale (Y) significa (X)?", "chi cosa significa (X)?", "dove significa (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/abbreviation> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1356",
    "lexicalEntryUri" : "http://localhost:8080#abrevia",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1357",
    "lexicalEntryUri" : "http://localhost:8080#abrevia",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Thing" ],
    "returnType" : [ "Thing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1358",
    "lexicalEntryUri" : "http://localhost:8080#born_in_surfer",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Surfing" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era sono nati (X)?", "a quale (Y) è è nato (X)?", "a quali (Y) nascere (X)?", "dove era è nato (X)?", "dove è è nato (X)?", "quali (Y) nascere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1359",
    "lexicalEntryUri" : "http://localhost:8080#born_in_surfer",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Surfing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è sono nati (X)?", "a quale (Y) è è nato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1360",
    "lexicalEntryUri" : "http://localhost:8080#born_in_surfer",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Surfing" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1361",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era morto (X)?", "a quale (Y) è morto (X)?", "a quali (Y) morire (X)?", "dove era morto (X)?", "dove è morto (X)?", "quali (Y) morire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1362",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è morto (X)?", "quali  morire a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1363",
    "lexicalEntryUri" : "http://localhost:8080#dieIn_2",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/deathPlace> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1364",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Place" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa trovarsi (X)?", "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/location> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1365",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1366",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Location" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/location> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1367",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Lake" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1368",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1369",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Lake" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1370",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Ship" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quando essere completato (X)?", "quando è stato completato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1371",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1372",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Ship" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/completionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1373",
    "lexicalEntryUri" : "http://localhost:8080#born_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "nel quale (Y) è è nato (X)?", "quali (Y)  nato (X)?", "quando  è nato (X)?", "quando è è nato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1374",
    "lexicalEntryUri" : "http://localhost:8080#born_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1375",
    "lexicalEntryUri" : "http://localhost:8080#born_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/birthYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1376",
    "lexicalEntryUri" : "http://localhost:8080#founded_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Organisation" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "nel quale (Y) è è stata fondata (X)?", "quali (Y)  è stata fondata (X)?", "quando  è stata fondata (X)?", "quando è è stata fondata (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1377",
    "lexicalEntryUri" : "http://localhost:8080#founded_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1378",
    "lexicalEntryUri" : "http://localhost:8080#founded_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Organisation" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/foundingYear> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1379",
    "lexicalEntryUri" : "http://localhost:8080#speak_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa parlare (X)?", "dove ha parlato (X)?", "in quale (Y) ha parlato (X)?", "in quale (Y) parla (X)?", "in quale (Y) parlare (X)?", "in quale (Y) è parlato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/language> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1380",
    "lexicalEntryUri" : "http://localhost:8080#speak_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1381",
    "lexicalEntryUri" : "http://localhost:8080#speak_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?subjOfProp <http://dbpedia.org/ontology/language> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1382",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) era ha vissuto (X)?", "a quale (Y) è ha vissuto (X)?", "a quali (Y) vivere (X)?", "dove era ha vissuto (X)?", "dove è ha vissuto (X)?", "quali (Y) vivere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/residence> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1383",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "a quale (Y) è ha vissuto (X)?", "quali  vivere a (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1384",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/residence> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1385",
    "lexicalEntryUri" : "http://localhost:8080#commence_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Event" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quando iniziare (X)?", "quando è iniziato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1386",
    "lexicalEntryUri" : "http://localhost:8080#commence_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1387",
    "lexicalEntryUri" : "http://localhost:8080#commence_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "Event" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1388",
    "lexicalEntryUri" : "http://localhost:8080#participate_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "a quale (Y) ha partecipato (X)?", "a quale (Y) partecipa (X)?", "a quale (Y) partecipare (X)?", "chi cosa partecipare (X)?", "dove ha partecipato (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/battle> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1389",
    "lexicalEntryUri" : "http://localhost:8080#participate_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1390",
    "lexicalEntryUri" : "http://localhost:8080#participate_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "Person" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/battle> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1391",
    "lexicalEntryUri" : "http://localhost:8080#writeIn",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "Language" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa scrivere (X)?", "dove ha scritto (X)?", "in quale (Y) ha scritto (X)?", "in quale (Y) scrive (X)?", "in quale (Y) scrivere (X)?", "in quale (Y) è stato scritto (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1392",
    "lexicalEntryUri" : "http://localhost:8080#writeIn",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1393",
    "lexicalEntryUri" : "http://localhost:8080#writeIn",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Language" ],
    "returnType" : [ "Software" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1394",
    "lexicalEntryUri" : "http://localhost:8080#take_place_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "MilitaryConflict" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quando avere luogo (X)?", "quando ha avuto luogo (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/date> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1395",
    "lexicalEntryUri" : "http://localhost:8080#take_place_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1396",
    "lexicalEntryUri" : "http://localhost:8080#take_place_on",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "MilitaryConflict" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/property/date> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1397",
    "lexicalEntryUri" : "http://localhost:8080#live_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Number" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quante persone vivere in (X)?", "quante persone vivono in (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1398",
    "lexicalEntryUri" : "http://localhost:8080#live_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "quante persone vivere in (X)?" ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1399",
    "lexicalEntryUri" : "http://localhost:8080#live_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Number" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/populationTotal> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1400",
    "lexicalEntryUri" : "http://localhost:8080#end_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Road" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "chi cosa termina (X)?", "dove termina (X)?", "in quale (Y) termina (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1401",
    "lexicalEntryUri" : "http://localhost:8080#end_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "chi è (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1402",
    "lexicalEntryUri" : "http://localhost:8080#end_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Road" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/routeEnd> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1403",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "PopulatedPlace" ],
    "returnType" : [ "date" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "quando sciogliere (X)?", "quando è sciolta (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1404",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1405",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_in",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "date" ],
    "returnType" : [ "PopulatedPlace" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1406",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Country" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "dove si trovava (X)?", "in quale (Y) si trova (X)?", "in quale (Y) si trovava (X)?", "in quale (Y) trovarsi (X)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/country> ?Answer .}",
    "bindingSparql" : null,
    "returnVariable" : "objOfProp"
  }, {
    "id" : "1407",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1408",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_THING_BACKWARD",
    "sentences" : [ ],
    "sparqlQuery" : "SELECT (COUNT(DISTINCT ?Answer) AS ?c) WHERE { ?Answer <http://dbpedia.org/ontology/country> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : "subjOfProp"
  }, {
    "id" : "1409",
    "lexicalEntryUri" : null,
    "language" : "IT",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "bindingSparql" : null,
    "returnVariable" : null
  } ]
}
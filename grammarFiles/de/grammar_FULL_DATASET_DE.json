{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Regierungsform von ($x | Country_NP).", "Gib mir die Regierungsform von ($x | Country_NP).", "Liste alle Regierungsform von ($x | Country_NP) auf.", "Liste die Regierungsform von ($x | Country_NP) auf.", "was ist die Regierungsform von ($x | Country_NP)?", "was sind Regierungsform von ($x | Country_NP)?", "was war die Regierungsform von ($x | Country_NP)?", "was waren Regierungsform von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "GovernmentType" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Regierungsform von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#Höhe_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir die Höhe von ($x | Lighthouse_NP).", "was ist die Höhe von ($x | Lighthouse_NP)?", "was war die Höhe von ($x | Lighthouse_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#Höhe_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Lighthouse" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Höhe von ($x | Lighthouse_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/height> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#Staatsangehörigkeit_of",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Staatsangehörigkeit von ($x | Person_NP).", "Gib mir die Staatsangehörigkeit von ($x | Person_NP).", "Liste alle Staatsangehörigkeit von ($x | Person_NP) auf.", "Liste die Staatsangehörigkeit von ($x | Person_NP) auf.", "was ist die Staatsangehörigkeit von ($x | Person_NP)?", "was sind Staatsangehörigkeit von ($x | Person_NP)?", "was war die Staatsangehörigkeit von ($x | Person_NP)?", "was waren Staatsangehörigkeit von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#Staatsangehörigkeit_of",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Staatsangehörigkeit von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Zutaten von ($x | Food_NP).", "Gib mir die Zutaten von ($x | Food_NP).", "Liste alle Zutaten von ($x | Food_NP) auf.", "Liste die Zutaten von ($x | Food_NP) auf.", "was ist die Zutaten von ($x | Food_NP)?", "was sind Zutaten von ($x | Food_NP)?", "was war die Zutaten von ($x | Food_NP)?", "was waren Zutaten von ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Food" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Zutaten von ($x | Food_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#koenig_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle König von ($x | Legislature_NP).", "Gib mir den König von ($x | Legislature_NP).", "Gib mir die König von ($x | Legislature_NP).", "Liste alle König von ($x | Legislature_NP) auf.", "Liste die König von ($x | Legislature_NP) auf.", "was ist die König von ($x | Legislature_NP)?", "was sind König von ($x | Legislature_NP)?", "was war die König von ($x | Legislature_NP)?", "was waren König von ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#koenig_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Royalty" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die König von ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#vizepräsident_unter",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Vizepräsidenten unter ($x | Politician_NP).", "Gib mir den Vizepräsident unter ($x | Politician_NP).", "Gib mir die Vizepräsidenten unter ($x | Politician_NP).", "Liste alle Vizepräsidenten unter ($x | Politician_NP) auf.", "Liste die Vizepräsidenten unter ($x | Politician_NP) auf.", "wer ist die Vizepräsident unter ($x | Politician_NP)?", "wer sind Vizepräsidenten unter ($x | Politician_NP)?", "wer war die Vizepräsident unter ($x | Politician_NP)?", "wer waren Vizepräsidenten unter ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#vizepräsident_unter",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Vizepräsident unter ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Enkel von ($x | Person_NP).", "Gib mir den Enkel von ($x | Person_NP).", "Gib mir die Enkel von ($x | Person_NP).", "Liste alle Enkel von ($x | Person_NP) auf.", "Liste die Enkel von ($x | Person_NP) auf.", "wer ist die Enkel von ($x | Person_NP)?", "wer sind Enkel von ($x | Person_NP)?", "wer war die Enkel von ($x | Person_NP)?", "wer waren Enkel von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Enkel von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#Eltern_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Enkel von ($x | Person_NP).", "Gib mir den Enkel von ($x | Person_NP).", "Gib mir die Enkel von ($x | Person_NP).", "Liste alle Enkel von ($x | Person_NP) auf.", "Liste die Enkel von ($x | Person_NP) auf.", "wer ist die Enkel von ($x | Person_NP)?", "wer sind Enkel von ($x | Person_NP)?", "wer war die Enkel von ($x | Person_NP)?", "wer waren Enkel von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#Eltern_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Enkel von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#richtiger_Name_of",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle richtiger Name von ($x | FictionalCharacter_NP).", "Gib mir die richtiger Name von ($x | FictionalCharacter_NP).", "Liste alle richtiger Name von ($x | FictionalCharacter_NP) auf.", "Liste die richtiger Name von ($x | FictionalCharacter_NP) auf.", "was ist die richtiger Name von ($x | FictionalCharacter_NP)?", "was sind richtiger Name von ($x | FictionalCharacter_NP)?", "was war die richtiger Name von ($x | FictionalCharacter_NP)?", "was waren richtiger Name von ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#richtiger_Name_of",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die richtiger Name von ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/alterEgo> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Amtssprachen von ($x | Country_NP).", "Gib mir die Amtssprache von ($x | Country_NP).", "Gib mir die Amtssprachen von ($x | Country_NP).", "Liste alle Amtssprachen von ($x | Country_NP) auf.", "Liste die Amtssprachen von ($x | Country_NP) auf.", "was ist die Amtssprache von ($x | Country_NP)?", "was sind Amtssprachen von ($x | Country_NP)?", "was war die Amtssprache von ($x | Country_NP)?", "was waren Amtssprachen von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Language" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Amtssprache von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_von_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Town" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Zeitzonen von ($x | Town_NP).", "Gib mir die Zeitzone von ($x | Town_NP).", "Gib mir die Zeitzonen von ($x | Town_NP).", "Liste alle Zeitzonen von ($x | Town_NP) auf.", "Liste die Zeitzonen von ($x | Town_NP) auf.", "was ist die Zeitzone von ($x | Town_NP)?", "was sind Zeitzonen von ($x | Town_NP)?", "was war die Zeitzone von ($x | Town_NP)?", "was waren Zeitzonen von ($x | Town_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_von_1",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Town" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Zeitzone von ($x | Town_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Kinder von ($x | Person_NP).", "Gib mir die Kind von ($x | Person_NP).", "Gib mir die Kinder von ($x | Person_NP).", "Liste alle Kinder von ($x | Person_NP) auf.", "Liste die Kinder von ($x | Person_NP) auf.", "wer ist die Kind von ($x | Person_NP)?", "wer sind Kinder von ($x | Person_NP)?", "wer war die Kind von ($x | Person_NP)?", "wer waren Kinder von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Kind von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Software" ],
    "returnType" : [ "University" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Entwickler von ($x | Software_NP).", "Gib mir den Entwickler von ($x | Software_NP).", "Gib mir die Entwickler von ($x | Software_NP).", "Liste alle Entwickler von ($x | Software_NP) auf.", "Liste die Entwickler von ($x | Software_NP) auf.", "wer ist die Entwickler von ($x | Software_NP)?", "wer sind Entwickler von ($x | Software_NP)?", "wer war die Entwickler von ($x | Software_NP)?", "wer waren Entwickler von ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Software" ],
    "returnType" : [ "University" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Entwickler von ($x | Software_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/developer> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#Videospiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Videospiele von ($x | Company_NP).", "Gib mir die Videospiel von ($x | Company_NP).", "Gib mir die Videospiele von ($x | Company_NP).", "Liste alle Videospiele von ($x | Company_NP) auf.", "Liste die Videospiele von ($x | Company_NP) auf.", "was ist die Videospiel von ($x | Company_NP)?", "was sind Videospiele von ($x | Company_NP)?", "was war die Videospiel von ($x | Company_NP)?", "was waren Videospiele von ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#Videospiele_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "VideoGame" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Videospiel von ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#HeimStadion_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle HeimStadien von ($x | SportsClub_NP).", "Gib mir das HeimStadion von ($x | SportsClub_NP).", "Gib mir die HeimStadien von ($x | SportsClub_NP).", "Liste alle HeimStadien von ($x | SportsClub_NP) auf.", "Liste die HeimStadien von ($x | SportsClub_NP) auf.", "was ist das HeimStadion von ($x | SportsClub_NP)?", "was sind HeimStadien von ($x | SportsClub_NP)?", "was war das HeimStadion von ($x | SportsClub_NP)?", "was waren HeimStadien von ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#HeimStadion_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "SportsClub" ],
    "returnType" : [ "Stadium" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "das HeimStadion von ($x | SportsClub_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/ground> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#größtHauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle größte Städte in ($x | Country_NP).", "Gib mir die größte Stadt in ($x | Country_NP).", "Gib mir die größte Städte in ($x | Country_NP).", "Liste alle größte Städte in ($x | Country_NP) auf.", "Liste die größte Städte in ($x | Country_NP) auf.", "was ist die größte Stadt in ($x | Country_NP)?", "was sind größte Städte in ($x | Country_NP)?", "was war die größte Stadt in ($x | Country_NP)?", "was waren größte Städte in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#größtHauptstadt_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die größte Stadt in ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#währung_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Währungen von ($x | Country_NP).", "Gib mir die Währung von ($x | Country_NP).", "Gib mir die Währungen von ($x | Country_NP).", "Liste alle Währungen von ($x | Country_NP) auf.", "Liste die Währungen von ($x | Country_NP) auf.", "was ist die Währung von ($x | Country_NP)?", "was sind Währungen von ($x | Country_NP)?", "was war die Währung von ($x | Country_NP)?", "was waren Währungen von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#währung_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Currency" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Währung von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/currency> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir die Hauptstadt von ($x | Country_NP).", "was ist die Hauptstadt von ($x | Country_NP)?", "was war die Hauptstadt von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "City" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Hauptstadt von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/capital> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Doktorväter von ($x | Person_NP).", "Gib mir den Doktorvater von ($x | Person_NP).", "Gib mir die Doktorväter von ($x | Person_NP).", "Liste alle Doktorväter von ($x | Person_NP) auf.", "Liste die Doktorväter von ($x | Person_NP) auf.", "wer ist die Doktorvater von ($x | Person_NP)?", "wer sind Doktorväter von ($x | Person_NP)?", "wer war die Doktorvater von ($x | Person_NP)?", "wer waren Doktorväter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Doktorvater von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Musiken von ($x | Person_NP).", "Gib mir die Musik von ($x | Person_NP).", "Gib mir die Musiken von ($x | Person_NP).", "Liste alle Musiken von ($x | Person_NP) auf.", "Liste die Musiken von ($x | Person_NP) auf.", "was ist die Musik von ($x | Person_NP)?", "was sind Musiken von ($x | Person_NP)?", "was war die Musik von ($x | Person_NP)?", "was waren Musiken von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Musical" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Musik von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/musicBy> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Spitznamen von ($x | City_NP).", "Gib mir den Spitzname von ($x | City_NP).", "Gib mir die Spitznamen von ($x | City_NP).", "Liste alle Spitznamen von ($x | City_NP) auf.", "Liste die Spitznamen von ($x | City_NP) auf.", "was ist die Spitzname von ($x | City_NP)?", "was sind Spitznamen von ($x | City_NP)?", "was war die Spitzname von ($x | City_NP)?", "was waren Spitznamen von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Spitzname von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/nickname> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von ($x | Location_NP).", "was ist die Gesamteinwohnerzahl von ($x | Location_NP)?", "was war die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Number" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Töchter von ($x | Person_NP).", "Gib mir die Tochter von ($x | Person_NP).", "Gib mir die Töchter von ($x | Person_NP).", "Liste alle Töchter von ($x | Person_NP) auf.", "Liste die Töchter von ($x | Person_NP) auf.", "wer ist die Tochter von ($x | Person_NP)?", "wer sind Töchter von ($x | Person_NP)?", "wer war die Tochter von ($x | Person_NP)?", "wer waren Töchter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Tochter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Töchter von ($x | Person_NP).", "Gib mir die Tochter von ($x | Person_NP).", "Gib mir die Töchter von ($x | Person_NP).", "Liste alle Töchter von ($x | Person_NP) auf.", "Liste die Töchter von ($x | Person_NP) auf.", "wer ist die Tochter von ($x | Person_NP)?", "wer sind Töchter von ($x | Person_NP)?", "wer war die Tochter von ($x | Person_NP)?", "wer waren Töchter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Tochter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Söhne von ($x | Person_NP).", "Gib mir die Sohn von ($x | Person_NP).", "Gib mir die Söhne von ($x | Person_NP).", "Liste alle Söhne von ($x | Person_NP) auf.", "Liste die Söhne von ($x | Person_NP) auf.", "wer ist die Sohn von ($x | Person_NP)?", "wer sind Söhne von ($x | Person_NP)?", "wer war die Sohn von ($x | Person_NP)?", "wer waren Söhne von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Sohn von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/child> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#Staatsangehörigkeit_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Staatsangehörigkeit von ($x | Person_NP).", "Gib mir die Staatsangehörigkeit von ($x | Person_NP).", "Liste alle Staatsangehörigkeit von ($x | Person_NP) auf.", "Liste die Staatsangehörigkeit von ($x | Person_NP) auf.", "was ist die Staatsangehörigkeit von ($x | Person_NP)?", "was sind Staatsangehörigkeit von ($x | Person_NP)?", "was war die Staatsangehörigkeit von ($x | Person_NP)?", "was waren Staatsangehörigkeit von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#Staatsangehörigkeit_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Staatsangehörigkeit von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/nationality> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#Bürgermeister_von_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir den Bürgermeister von ($x | City_NP).", "wer ist die Bürgermeister von ($x | City_NP)?", "wer war die Bürgermeister von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#Bürgermeister_von_2",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Bürgermeister von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Vorwahl von ($x | Place_NP).", "Gib mir die Vorwahl von ($x | Place_NP).", "Liste alle Vorwahl von ($x | Place_NP) auf.", "Liste die Vorwahl von ($x | Place_NP) auf.", "was ist die Vorwahl von ($x | Place_NP)?", "was sind Vorwahl von ($x | Place_NP)?", "was war die Vorwahl von ($x | Place_NP)?", "was waren Vorwahl von ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Place" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Vorwahl von ($x | Place_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#Bürgermeister_von_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir den Bürgermeister von ($x | City_NP).", "wer ist die Bürgermeister von ($x | City_NP)?", "wer war die Bürgermeister von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#Bürgermeister_von_1",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Bürgermeister von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/mayor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#vizepräsident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Vizepräsidenten von ($x | Person_NP).", "Gib mir den Vizepräsident von ($x | Person_NP).", "Gib mir die Vizepräsidenten von ($x | Person_NP).", "Liste alle Vizepräsidenten von ($x | Person_NP) auf.", "Liste die Vizepräsidenten von ($x | Person_NP) auf.", "was ist die Vizepräsident von ($x | Person_NP)?", "was sind Vizepräsidenten von ($x | Person_NP)?", "was war die Vizepräsident von ($x | Person_NP)?", "was waren Vizepräsidenten von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#vizepräsident_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Country" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Vizepräsident von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#Schöpfer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Schöpfer von ($x | FictionalCharacter_NP).", "Gib mir den Schöpfer von ($x | FictionalCharacter_NP).", "Gib mir die Schöpfer von ($x | FictionalCharacter_NP).", "Liste alle Schöpfer von ($x | FictionalCharacter_NP) auf.", "Liste die Schöpfer von ($x | FictionalCharacter_NP) auf.", "wer ist die Schöpfer von ($x | FictionalCharacter_NP)?", "wer sind Schöpfer von ($x | FictionalCharacter_NP)?", "wer war die Schöpfer von ($x | FictionalCharacter_NP)?", "wer waren Schöpfer von ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#Schöpfer_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "FictionalCharacter" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Schöpfer von ($x | FictionalCharacter_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/creator> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#Partei-von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Parteien von ($x | Politician_NP).", "Gib mir die Partei von ($x | Politician_NP).", "Gib mir die Parteien von ($x | Politician_NP).", "Liste alle Parteien von ($x | Politician_NP) auf.", "Liste die Parteien von ($x | Politician_NP) auf.", "was ist die Partei von ($x | Politician_NP)?", "was sind Parteien von ($x | Politician_NP)?", "was war die Partei von ($x | Politician_NP)?", "was waren Parteien von ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#Partei-von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Partei von ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/party> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Nachfolger von ($x | Politician_NP).", "Gib mir den Nachfolger von ($x | Politician_NP).", "Gib mir die Nachfolger von ($x | Politician_NP).", "Liste alle Nachfolger von ($x | Politician_NP) auf.", "Liste die Nachfolger von ($x | Politician_NP) auf.", "wer ist die Nachfolger von ($x | Politician_NP)?", "wer sind Nachfolger von ($x | Politician_NP)?", "wer war die Nachfolger von ($x | Politician_NP)?", "wer waren Nachfolger von ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Politician" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Nachfolger von ($x | Politician_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/successor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#vater_von_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Väter von ($x | Person_NP).", "Gib mir die Vater von ($x | Person_NP).", "Gib mir die Väter von ($x | Person_NP).", "Liste alle Väter von ($x | Person_NP) auf.", "Liste die Väter von ($x | Person_NP) auf.", "wer ist die Vater von ($x | Person_NP)?", "wer sind Väter von ($x | Person_NP)?", "wer war die Vater von ($x | Person_NP)?", "wer waren Väter von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#vater_von_1",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Vater von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/father> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#Elternteil_of",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Elternteile von ($x | Person_NP).", "Gib mir den Elternteil von ($x | Person_NP).", "Gib mir die Elternteile von ($x | Person_NP).", "Liste alle Elternteile von ($x | Person_NP) auf.", "Liste die Elternteile von ($x | Person_NP) auf.", "wer ist die Elternteil von ($x | Person_NP)?", "wer sind Elternteile von ($x | Person_NP)?", "wer war die Elternteil von ($x | Person_NP)?", "wer waren Elternteile von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#Elternteil_of",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Elternteil von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/parent> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#Stadtteile_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Stadtteile von ($x | Country_NP).", "Gib mir die Stadtteil von ($x | Country_NP).", "Gib mir die Stadtteile von ($x | Country_NP).", "Liste alle Stadtteile von ($x | Country_NP) auf.", "Liste die Stadtteile von ($x | Country_NP) auf.", "was ist die Stadtteil von ($x | Country_NP)?", "was sind Stadtteile von ($x | Country_NP)?", "was war die Stadtteil von ($x | Country_NP)?", "was waren Stadtteile von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#Stadtteile_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Country" ],
    "returnType" : [ "Town" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Stadtteil von ($x | Country_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/governmentType> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_von_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Zeitzonen von ($x | City_NP).", "Gib mir die Zeitzone von ($x | City_NP).", "Gib mir die Zeitzonen von ($x | City_NP).", "Liste alle Zeitzonen von ($x | City_NP) auf.", "Liste die Zeitzonen von ($x | City_NP) auf.", "was ist die Zeitzone von ($x | City_NP)?", "was sind Zeitzonen von ($x | City_NP)?", "was war die Zeitzone von ($x | City_NP)?", "was waren Zeitzonen von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/timezone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_von_2",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "City" ],
    "returnType" : [ "Thing" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Zeitzone von ($x | City_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/property/timezone> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "CollegeCoach" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Trainer von ($x | IceHockeyLeague_NP).", "Gib mir den Trainer von ($x | IceHockeyLeague_NP).", "Gib mir die Trainer von ($x | IceHockeyLeague_NP).", "Liste alle Trainer von ($x | IceHockeyLeague_NP) auf.", "Liste die Trainer von ($x | IceHockeyLeague_NP) auf.", "wer ist die Trainer von ($x | IceHockeyLeague_NP)?", "wer sind Trainer von ($x | IceHockeyLeague_NP)?", "wer war die Trainer von ($x | IceHockeyLeague_NP)?", "wer waren Trainer von ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "IceHockeyLeague" ],
    "returnType" : [ "CollegeCoach" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Trainer von ($x | IceHockeyLeague_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/coach> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Frauen von ($x | Person_NP).", "Gib mir die Frau von ($x | Person_NP).", "Gib mir die Frauen von ($x | Person_NP).", "Liste alle Frauen von ($x | Person_NP) auf.", "Liste die Frauen von ($x | Person_NP) auf.", "wer ist die Frau von ($x | Person_NP)?", "wer sind Frauen von ($x | Person_NP)?", "wer war die Frau von ($x | Person_NP)?", "wer waren Frauen von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Person" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Frau von ($x | Person_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/spouse> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Herausgeber von ($x | WrittenWork_NP).", "Gib mir den Herausgeber von ($x | WrittenWork_NP).", "Gib mir die Herausgeber von ($x | WrittenWork_NP).", "Liste alle Herausgeber von ($x | WrittenWork_NP) auf.", "Liste die Herausgeber von ($x | WrittenWork_NP) auf.", "wer ist die Herausgeber von ($x | WrittenWork_NP)?", "wer sind Herausgeber von ($x | WrittenWork_NP)?", "wer war die Herausgeber von ($x | WrittenWork_NP)?", "wer waren Herausgeber von ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "WrittenWork" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Herausgeber von ($x | WrittenWork_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/editor> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#präsident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle präsidenten von ($x | Legislature_NP).", "Gib mir den präsident von ($x | Legislature_NP).", "Gib mir die präsidenten von ($x | Legislature_NP).", "Liste alle präsidenten von ($x | Legislature_NP) auf.", "Liste die präsidenten von ($x | Legislature_NP) auf.", "wer ist die präsident von ($x | Legislature_NP)?", "wer sind präsidenten von ($x | Legislature_NP)?", "wer war die präsident von ($x | Legislature_NP)?", "wer waren präsidenten von ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#präsident_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Legislature" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die präsident von ($x | Legislature_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/leader> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Spiele von ($x | Company_NP).", "Gib mir die Spiel von ($x | Company_NP).", "Gib mir die Spiele von ($x | Company_NP).", "Liste alle Spiele von ($x | Company_NP) auf.", "Liste die Spiele von ($x | Company_NP) auf.", "was ist die Spiel von ($x | Company_NP)?", "was sind Spiele von ($x | Company_NP)?", "was war die Spiel von ($x | Company_NP)?", "was waren Spiele von ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Company" ],
    "returnType" : [ "Publisher" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Spiel von ($x | Company_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?Answer <http://dbpedia.org/ontology/publisher> ?objOfProp .}",
    "returnVariable" : "subjOfProp",
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "forward",
    "sentences" : [ "Gib mir alle Bandmitglieder von ($x | Band_NP).", "Gib mir den Bandmitglieder von ($x | Band_NP).", "Gib mir die Bandmitglieder von ($x | Band_NP).", "Liste alle Bandmitglieder von ($x | Band_NP) auf.", "Liste die Bandmitglieder von ($x | Band_NP) auf.", "wer ist die Bandmitglieder von ($x | Band_NP)?", "wer sind Bandmitglieder von ($x | Band_NP)?", "wer war die Bandmitglieder von ($x | Band_NP)?", "wer waren Bandmitglieder von ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : [ "Band" ],
    "returnType" : [ "Person" ],
    "frameType" : "NPP",
    "sentenceTemplate" : "nounPhrase",
    "sentences" : [ "die Bandmitglieder von ($x | Band_NP)?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?Answer .}",
    "returnVariable" : "objOfProp",
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : [ "Location" ],
    "returnType" : [ "Location" ],
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "sparqlQuery" : "SELECT ?Answer WHERE { ?subjOfProp <null> ?objOfProp .}",
    "returnVariable" : null,
    "combination" : false
  } ]
}
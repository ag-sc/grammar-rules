id,status,question,sparqlQueGG,sparql
1,right,List all boardgames by GMT.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?boardgame
WHERE {
  ?boardgame a dbo:Game;
             dbp:publisher dbr:GMT_Games.
}
LIMIT 100"
2,SPARQL logic wrong,Who developed Skype?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Skype dbo:developer ?uri. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
  ?skype dbo:developer ?developer .
  FILTER(?developer != dbo:Skype) .
}
LIMIT 1"
3,right,Which people were born in Heraklion?,PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Person ; onto:birthPlace <http://dbpedia.org/resource/Heraklion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personLabel
WHERE {
    ?person dbo:birthPlace dbr:Heraklion.
    ?person foaf:name ?personLabel.
    FILTER(langMatches(lang(?personLabel), ""EN""))
}
LIMIT 100"
4,invalid property,In which U.S. state is Area 51 located?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stateLabel
WHERE {
  ?area51 dbo:location ?state .
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
  ?state rdfs:label ?stateLabel .
  FILTER (LANG(?stateLabel) = 'en')
  FILTER (CONTAINS(?stateLabel, ""state""))
}
LIMIT 1"
5,SPARQL wrong,Who is the mayor of New York City?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor
WHERE {
  ?city dbo:country <http://dbpedia.org/resource/United_States> .
  ?city dbp:name ""New_York_City""@en .
  ?city dbo:leader ?mayor .
  ?mayor dbo:title ?title .
  FILTER (?title = ""Mayor""@en)
}"
6,,Which countries have places with more than two caves?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?country WHERE {
  ?country rdf:type dbo:Country ;
           dbo:place ?place .
  ?place dbo:cave ?cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)
ORDER BY ?country
The above SPARQL query retrieves the countries that have places with more than two caves from DBpedia."
7,right,Where did Abraham Lincoln die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri. },"SELECT ?place
WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?place.
}"
8,invalid property,Which airports does Air China serve?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport
WHERE {
  dbr:Air_China dbo:operates ?route .
  ?route dbo:destination ?airport .
  ?airport dbo:location ?location .
  ?location dbo:country dbr:China .
}
"
9,N,Give me all actors starring in movies directed by and starring William Shatner.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbpprop:starring ?actor.
  ?movie dbpprop:director ?director.
  ?director dbpprop:starring ?directorStarring.
  ?directorStarring dbo:wikiPageRedirects dbpedia:William_Shatner.
}
"
10,right,What are the official languages of the Philippines?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?languageLabel
WHERE {
  dbr:Philippines dbo:officialLanguage ?language.
  ?language rdfs:label ?languageLabel.
  FILTER (LANG(?languageLabel) = ""en"")
}
"
11,right,Give me all Danish films.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:country dbr:Denmark .
}"
12,right,Which movies starring Brad Pitt were directed by Guy Ritchie?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie },"PREFIX dbp: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbp:Film ;
        dbp:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
}
"
13,right,Give me the grandchildren of Bruce Lee.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Lee dbo:child ?child . ?child <http://dbpedia.org/property/children> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?grandchildren WHERE {
  ?bruceLee dbo:child ?child .
  ?child dbo:child ?grandchildren .
  FILTER (?bruceLee = <http://dbpedia.org/resource/Bruce_Lee>)
}"
14,invalid property,Which other weapons did the designer of the Uzi develop?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?weapon
WHERE {
  dbr:Uzi dbo:designer ?designer .
  ?designer dbo:notableWorks ?weapon .
  FILTER(?weapon != dbr:Uzi)
}
LIMIT 10"
15,SPARQL structure wrong,Who is the owner of Universal Studios?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Universal_Studios dbo:owner ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?owner WHERE {
  ?universalStudios dbo:owner ?owner .
  ?universalStudios dbo:wikiPageRedirects/dbp:name ""Universal_Studios"" .
}
LIMIT 1"
16,SPARQL logic wrong,Which state of the USA has the highest population density?,PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:Country;
         dbo:largestCity ?largestCity;
         dbp:populationDensity ?populationDensity.
  ?largestCity dbo:country dbr:United_States.
}
ORDER BY DESC(?populationDensity)
LIMIT 1"
17,SPARQL logic wrong,Which monarchs were married to a German?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT DISTINCT ?monarch ?monarchLabel
WHERE {
  ?monarch rdf:type dbpedia-owl:Monarch ;
           dbpprop:consort ?consort .
  ?consort dbpprop:birthPlace ?birthPlace .
  ?birthPlace dbpedia-owl:country <http://dbpedia.org/resource/Germany> .

  SERVICE <http://DBpedia.org/sparql> {
    ?monarch rdfs:label ?monarchLabel .
    FILTER (lang(?monarchLabel) = 'en')
  }
}
"
18,right,Which organizations were founded in 1950?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, ""^1950"") }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?organization WHERE {
  ?organization dbo:formationYear ?year .
  FILTER (year(?year) = 1950)
}
"
19,right,Who created the comic Captain America?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creator
WHERE {
  dbr:Captain_America dbo:creator ?creator.
}"
20,invalid property,Give me the Apollo 14 astronauts.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:mission res:Apollo_14 },"SELECT ?astronaut
WHERE {
  ?apollo14 dbpedia-owl:astronaut ?astronaut .
}"
21,invalid resource,Who wrote the book The pillars of the Earth?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book dbp:title ""The_Pillars_of_the_Earth""@en .
}"
22,,Which state of the United States of America has the highest density?,PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state ?population ?area
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:United_States ;
         dbo:populationTotal ?population ;
         dbo:areaTotal ?area .
}
ORDER BY (?population / ?area) DESC
LIMIT 1"
23,invalid resource,Which spaceflights were launched from Baikonur?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/launchPad> res:Baikonur_Cosmodrome },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX db: <http://dbpedia.org/>
SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome
  FILTER EXISTS { ?spaceflight rdf:type dbo:SpaceFlight }
}
LIMIT 10"
24,N,Give me a list of all trumpet players that were bandleaders.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?name
WHERE {
  ?musician a dbpedia-owl:MusicalArtist ;
             dbpedia-owl:instrument dbpedia:Trumpet ;
             dbpedia-owl:bandMember ?band .
  ?band dbpedia-owl:bandMember ?musician ;
        dbpedia-owl:genre ?genre .
  FILTER (?musician != ?band)
}
ORDER BY ?name"
25,different SPARQL,Which U.S. states are in the same timezone as Utah?,PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) },"SELECT ?state
WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:timeZone dbr:Mountain_Time_Zone .
  FILTER (?state != dbr:Utah)
}"
26,SPARQL logic wrong,Which U.S. states possess gold minerals?,"PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, ""gold"", ""i"") }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state
WHERE {
  ?state dbo:location dbr:United_States ;
         dbo:mineral dbr:Gold .
}
ORDER BY ?state"
27,different SPARQL,Who is the daughter of Ingrid Bergman married to?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?daughter dbo:parent ?bergman.
  ?daughter foaf:gender ""female"".
  ?daughter foaf:marriage ?marriage.
  ?marriage foaf:spouse ?spouse.

  FILTER(?bergman = dbr:Ingrid_Bergman)
}
"
28,invalid property,How deep is Lake Placid?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?depth
WHERE {
    dbr:Lake_Placid dbo:depth ?depth
}
"
29,right,Show me all museums in London.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/London> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?museum WHERE {
 ?museum a dbpedia-owl:Museum ;
         dbpedia-owl:location <http://dbpedia.org/resource/London> .
}"
30,invalid property,Which caves have more than 3 entrances?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Cave> ; <http://dbpedia.org/property/entranceCount> ?entrance FILTER ( ?entrance > 3 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?cave WHERE {
  ?cave dbo:hasEntrance ?entrance.
  {
    SELECT ?cave (COUNT(?entrance) as ?numEntrances) WHERE {
      ?cave dbo:hasEntrance ?entrance.
    } GROUP BY ?cave
  }
  FILTER(?numEntrances > 3)
}
LIMIT 100"
31,right,Who is the tallest player of the Atlanta Falcons?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?player ?name
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height ;
          foaf:name ?name .
}
ORDER BY DESC(?height)
LIMIT 1"
32,N,What are the top-10 action role-playing video games according to IGN?,SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT DISTINCT ?gameName
WHERE {
  ?game dbpedia-owl:genre dbpedia-owl:Action_role-playing_video_games .
  ?game dbpedia-owl:basedOnWork ?source .

  ?source dbpprop:website ""IGN"" .

  ?game dbpedia-owl:name ?gameName.
}
ORDER BY DESC(?gameName)
LIMIT 10"
33,N,Give me all writers that won the Nobel Prize in literature.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?writer
WHERE {
  ?writer dbo:award dbc:Nobel_laureates_in_Literature .
}
"
34,right,Show me all basketball players that are higher than 2 meters.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?playerName
WHERE {
    ?player dbo:height ?height.
    ?player foaf:name ?playerName.
    FILTER(?height > 200)
}
"
35,invalid property,When was the Statue of Liberty built?,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbp-prop: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
  dbpedia:Statue_of_Liberty dbp-prop:year ?date
}"
36,SPARQL structure wrong,Which states border Illinois?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri },"SELECT ?stateLabel
WHERE {
   ?illinois dbp:commonName ""Illinois""@en .
   ?state dbp:commonName ?stateLabel .
   ?state dbp:location ?border .
   ?border prov:wasDerivedFrom ?illinois .
}
ORDER BY ?stateLabel"
37,invalid resource,Who developed Minecraft?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Minecraft> <http://dbpedia.org/ontology/developer> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?developer
WHERE {
  ?game dbo:developer ?developer .
  ?game dbo:wikiPageID 172268 .}  "
38,different lexicalization,Where did Hillel Slovak die?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?placeOfDeathLabel
WHERE {
  dbo:Hillel_Slovak dbp:placeOfDeath ?placeOfDeath.
  ?placeOfDeath rdfs:label ?placeOfDeathLabel.
  FILTER (lang(?placeOfDeathLabel) = ""en"")
}
LIMIT 1"
39,right,What movies does Jesse Eisenberg play in?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?movie
WHERE {
  ?actor rdf:type dbo:Actor ;
         foaf:name ""Jesse Eisenberg"" ;
         dbo:starring ?movie .
  ?movie rdf:type dbo:Film .
}
ORDER BY ?movie"
40,right,Give all swimmers that were born in Moscow.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Swimmer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?swimmer
WHERE {
   ?swimmer rdf:type dbo:Person ;
            dbo:birthPlace dbr:Moscow ;
            rdf:type dbo:Swimmer .
}"
41,SPARQL logic wrong,Give me all cosmonauts.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } },"SELECT ?cosmonaut
WHERE {
  ?cosmonaut rdf:type dbpedia-owl:Astronaut .
  ?cosmonaut rdf:type dbo:Person .
}
"
42,triple not exist,Give me all Swiss non-profit organizations.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?organization
WHERE {
  ?organization a dbo:Organisation ;
                dbo:country <http://dbpedia.org/resource/Switzerland> ;
                dbo:classification <http://dbpedia.org/resource/Non-profit_organization> ;
                foaf:name ?name .
}
ORDER BY ?name"
43,right,Which presidents were born in 1945?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/birthDate> ?date FILTER regex(?date, ""^1945"") }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?president
WHERE {
  ?president rdf:type dbo:President .
  ?president dbo:birthDate ?birthDate .
  FILTER (regex(?birthDate, ""^1945"", ""i""))
}
"
44,wrong,What kind of music did Lou Reed play?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?musicGenre
WHERE {
  ?louReed dbo:genre ?musicGenre .
  FILTER (regex(?louReed, ""Lou_Reed""))
  FILTER (regex(?musicGenre, ""Music""))
}"
45,Different SPARQL,Where do the Red Sox play?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boston_Red_Sox> <http://dbpedia.org/property/ballpark> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?stadium
WHERE {
  ?team dbo:teamName ""Boston Red Sox"".
  ?team dbo:ground ?stadium.
}"
46,Different SPARQL,Show a list of soccer clubs that play in the Bundesliga.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club
WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club dbo:sport dbr:Football .
}"
47,invalid property,Which volcanos in Japan erupted since 2000?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> ; <http://dbpedia.org/ontology/eruptionYear> ?date FILTER ( year(?date) >= 2000 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?volcano
WHERE {
  ?volcano dbo:country dbr:Japan;
           dbo:eruptionDate ?eruptionDate.
  FILTER(year(?eruptionDate) >= 2000)
}
ORDER BY ?volcano"
48,right,Which bridges cross the Seine?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge
WHERE {
  ?bridge a dbpedia-owl:Bridge ;
          dbpedia-owl:crosses dbpedia:Seine ;
          rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
LIMIT 100"
49,right,What is the official color of the University of Oxford?,SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?color WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbo:officialSchoolColour ?color
}
"
50,right,How many films did Hal Roach produce?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT (COUNT(DISTINCT ?film) AS ?filmCount)
WHERE {
  ?film dbo:producer <http://dbpedia.org/resource/Hal_Roach> .
  ?film rdf:type dbo:Film .
}
"
51,right,Give me all Danish movies.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbo:country <http://dbpedia.org/resource/Denmark> .
}
LIMIT 100"
52,Different SPARQL,What is the most frequent cause of death?,SELECT DISTINCT ?x WHERE { ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1,"SELECT ?cause ?count WHERE {
    ?person dbo:causeOfDeath ?cause .
    {
        SELECT ?cause (COUNT(?person) AS ?count) WHERE {
            ?person dbo:causeOfDeath ?cause .
        } GROUP BY ?cause
    } ORDER BY DESC(?count) LIMIT 1
}"
53,N,Who are the four youngest MVP basketball players?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, ""MVP"") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4","SELECT DISTINCT ?player ?age
WHERE {
    ?player rdf:type dbo:BasketballPlayer .
    ?player dbo:award dbpedia:MVP_Award .
    ?player dbp:mvpyear ?year .
    ?player dbo:birthDate ?birthDate .
    BIND((YEAR(?year) - YEAR(?birthDate)) AS ?age)
}
ORDER BY ASC(?age)
LIMIT 4"
54,Different SPARQL,Give me all companies in Munich.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Munich> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?company
WHERE {
  ?company dbo:location dbr:Munich ;
           rdf:type dbo:Company .
}"
55,Different SPARQL,Give me the capitals of all countries that the Himalayas run through.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?capital WHERE {
  ?country dbo:capital ?capital.
  ?country dbo:isPartOf dbr:Himalayas
}"
56,Different SPARQL,How many movies did Park Chan-wook direct?,SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . },"PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT COUNT(?movie) AS ?movieCount
WHERE {
  ?director dbo:director dbp:Park_Chan-wook.
  ?movie dbo:director ?director.
  ?movie rdf:type dbo:Film.
}"
57,Different SPARQL,Which rivers flow into a German lake?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?lake ?river
WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country dbr:Germany .
  ?river dbo:origin ?lake .
  ?river rdf:type dbo:River .
}
ORDER BY ?lake"
58,right,How many airlines are there?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(DISTINCT ?airline) AS ?count)
WHERE {
  ?airline rdf:type dbo:Airline .
}"
59,different SPARQL,Give me all islands that belong to Japan.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island
WHERE {
  ?island dbo:country dbr:Japan .
  ?island dbo:islandType ?islandType .
  FILTER(?islandType IN (dbo:Island, dbo:IslandGroup))
}
ORDER BY ?island"
60,right,How many inhabitants does Maribor have?,SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num },"SELECT ?population
WHERE {
  dbpedia:Maribor dbpedia-owl:populationTotal ?population .
}"
61,invalid property,Give me all Apollo 14 astronauts.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/mission> <http://dbpedia.org/resource/Apollo_14> },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?astronaut
WHERE {
  ?apollo14 dbo:mission ""Apollo 14""@en .
  ?apollo14 dbo:astronaut ?astronaut .
}
LIMIT 10"
62,right,Which companies have more than 1 million employees?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?n } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?n } FILTER ( ?n > 1000000 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}
LIMIT 10"
63,different SPARQL,In which films directed by Garry Marshall was Julia Roberts starring?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmName
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts ;
        dbo:wikiPageRedirects ?filmName .
}
"
64,right,Give me all soccer clubs in the Premier League.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbp:league dbr:Premier_League .
}"
65,SPARQL logic wrong,What is the highest place of the Urals?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?place
WHERE {
  ?place dbo:location ?location ;
         dbp:range ?range .
  ?location dbo:parent ?parent ;
            rdfs:label ?label .
  ?parent rdfs:label ""Urals""@en .
}
ORDER BY DESC(?range)
LIMIT 1"
66,different SPARQL,Who is the governor of Wyoming?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyoming> <http://dbpedia.org/property/governor> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorLabel
WHERE {
  ?governor dbp:governor ?state.
  ?governor dbo:state ?state.
  ?state dbo:stateName ""Wyoming""@en.
  SERVICE <http://dbpedia.org/sparql> {
    ?governor rdfs:label ?governorLabel.
    FILTER (lang(?governorLabel) = 'en')
  }
}
LIMIT 1"
67,different SPARQL,Where did the architect of the Eiffel Tower study?,N,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?studyLocation
WHERE {
  dbo:Eiffel_Tower dbp:architect ?architect.
  ?architect dbp:education ?education.
  ?education foaf:name ?studyLocation.
}"
68,different SPARQL,Give me all world heritage sites designated within the past two years.,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?site ?siteLabel ?date
WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites_by_year_of_establishment .
  ?site dct:subject dbc:New_World_Heritage_Sites .
  ?site rdfs:label ?siteLabel .
  ?site dct:subject ?category .
  ?category rdfs:label ""World_Heritage_Sites_by_year_of_establishment"" .
  ?site dct:issued ?date .
  FILTER (
    year(?date) >= year(now())-2
  )

  FILTER (langMatches(lang(?siteLabel), ""en""))
}
ORDER BY DESC(?date)
LIMIT 100"
69,different SPARQL,Give me all actors who were born in Paris after 1950.,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . ?uri <http://dbpedia.org/ontology/birthDate> ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) },"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbp:birthPlace dbr:Paris .
  ?actor dbp:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) > 1950)
}"
70,different SPARQL,Which movies star both Liz Taylor and Richard Burton?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Liz_Taylor, dbr:Richard_Burton.
  ?movie rdf:type dbo:Film.
}
LIMIT 10"
71,SPARQL structure wrong,Give me all Australian nonprofit organizations.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:location dbr:Australia ;
                dbo:nonProfit status: A
}
LIMIT 100"
72,different SPARQL,Which pope succeeded John Paul II?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor
WHERE {
  dbo:John_Paul_II dbo:successor ?successor.
  ?successor rdf:type dbo:Pope.
  ?successor foaf:name ?successorName.
}
LIMIT 1"
73,right,Give me all ESA astronauts.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/property/type> <http://dbpedia.org/resource/European_Space_Agency> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?astronaut
WHERE {
  ?astronaut dbo:occupation dbr:Astronaut ;
              dbo:organization dbr:European_Space_Agency ;
              foaf:name ?name .
}"
74,SPARQL structure wrong,Who was president of Pakistan in 1978?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/President_of_Pakistan> ; <http://dbpedia.org/property/years> 1978 },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?president
WHERE {
  ?president dbo:office dbp:President .
  ?president dbo:officeHolderOf/dbp:from ""1978-01-01""^^xsd:date .
  ?president dbo:officeHolderOf/dbp:to ""1978-12-31""^^xsd:date .
  ?president dbo:officeLocation dbr:Pakistan .
}
"
75,SPARQL logic wrong,Who is the owner of Rolls-Royce?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolls-Royce_Motors> <http://dbpedia.org/ontology/owner> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?owner
WHERE {
  ?rollsRoyce dbo:wikiPageID ?rollsRoyceID .
  ?rollsRoyce dbo:owner ?owner .
  FILTER (?rollsRoyceID = 13651)
}
LIMIT 10"
76,right,How many museums does Paris have?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(DISTINCT ?museum) as ?count)
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:Paris .
}
"
77,different SPARQL,Where was JFK assassinated?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?place WHERE {
  ?assassination dbo:deathCause <http://dbpedia.org/resource/Assassination_of_John_F._Kennedy>.
  ?assassination dbo:place ?place.
}"
78,SPARQL structure wrong,Give me all federal chancellors of Germany.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/office> ""Chancellor of Germany"" } UNION { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> } }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?chancellor
WHERE {
  ?chancellor a dbo:OfficeHolder ;
    dbo:office dbo:Chancellor ;
    dbo:leader dbr:Germany .

  FILTER regex(?chancellor, ""Federal_Counsellor_of_Germany"", ""i"")
}
"
79,different SPARQL,Show me everyone who was born on Halloween.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthdate
WHERE {
  ?person dbo:birthDate ?birthdate.
  ?person foaf:name ?name.
  FILTER regex(str(?birthdate), ""10-31$"").
}"
80,different SPARQL,Which beer originated in Ireland?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Beer_in_Ireland> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?beer
WHERE {
  ?beer rdf:type dbo:Beer ;
        dbp:origin dbr:Ireland .
}
"
81,invalid property,To which countries does the Himalayan mountain system extend?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?country dbo:mountainSystem dbo:Himalayas .
  ?country rdf:type dbo:Country .
}"
82,right,Which actors were born in Germany?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor
WHERE {
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/Germany> .
  ?actor rdf:type dbo:Actor .
}
ORDER BY ?actor
LIMIT 100"
83,different SPARQL,How much carbs does peanut butter have?,SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?carbs
WHERE {
  ?peanutButter dbo:carbohydrate ?carbs .
  FILTER contains(lcase(str(?peanutButter)), ""peanut_butter"")
}
LIMIT 1"
84,different SPARQL,Who produced the most films?,SELECT DISTINCT ?uri WHERE { ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/producer> ?uri . } ORDER BY DESC(COUNT(?film)) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer (COUNT(?film) AS ?filmCount)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?filmCount)
LIMIT 1"
85,right,How many employees does Google have?,SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num },"SELECT ?employees WHERE {
  <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?employees.
}"
86,right,Give me all actors who were born in Berlin.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor a dbo:Actor .
}
"
87,different SPARQL,Who created Goofy?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri },"SELECT ?creator WHERE {
    ?goofy dbo:creator ?creator .
    ?goofy foaf:name ""Goofy""@en .
}"
88,SPARQL structure wrong,Which music albums contain the song Last Christmas?,"SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> ""Last Christmas""@en }","SELECT ?albumName
WHERE {
  ?album rdf:type dbo:Album ;
         dbo:musicalArtist ?artist ;
         dbo:recordedIn ?studio ;
         dbo:trackList/rdf:rest*/rdf:first/dbo:musicalWork ?song .
  ?song foaf:name ""Last Christmas"" .
  FILTER (LANG(?albumName) = ""en"")
}
ORDER BY ?albumName"
89,different SPARQL,When was Alberta admitted as province?,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date },"SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date .
}"
90,SPARQL logic wrong,How many missions does the Soyuz programme have?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT (COUNT(?mission) AS ?missionCount)
WHERE {
  ?spacecraft dbpedia-owl:spaceAgency <http://dbpedia.org/resource/Roscosmos> .
  ?spacecraft dbpedia-owl:programme ?programme .
  ?programme rdfs:label ""Soyuz programme""@en .
  ?mission dbpedia-owl:vehicle ?spacecraft .
}"
91,different SPARQL,Give me all the TV shows with Neil Patrick Harris.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show
WHERE {
  ?person dbo:starring dbr:Neil_Patrick_Harris .
  ?show dbo:starring ?person .
  ?show rdf:type dbo:TelevisionShow .
}
GROUP BY ?show
ORDER BY ?show"
92,different SPARQL,When were the Hells Angels founded?,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?foundingDate
WHERE {
  <http://dbpedia.org/resource/Hells_Angels> dbo:foundingDate ?foundingDate.
}"
93,right,What is the net income of Apple?,SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple> <http://dbpedia.org/ontology/netIncome> ?ni },"SELECT ?netIncome WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}"
94,invalid resource,Give me all Swedish holidays.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Holiday> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?holidayLabel
WHERE {
  ?holiday a dbo:Holiday ;
           dbo:country dbp:Sweden ;
           rdfs:label ?holidayLabel .
  FILTER (LANG(?holidayLabel) = 'en')
}"
95,different SPARQL,In which city was the former Dutch queen Juliana buried?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Juliana_of_the_Netherlands> dbpedia-owl:burialPlace ?place.
  ?place dbpprop:location ?city.
}"
96,SPARQL structure wrong,List all the musicals with music by Leonard Bernstein.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> },"PREFIX dbo:<http://dbpedia.org/ontology/>
PREFIX dbp:<http://dbpedia.org/property/>
PREFIX dct:<http://purl.org/dc/terms/>

SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:composer [a dbo:Person; dbo:birthName ""Leonard Bernstein""] .
  ?musical a dbo:Musical .
}
ORDER BY ?musical"
97,SPARQL logic wrong,Give me all companies in the advertising industry.,"SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry FILTER regex(?industry, ""advertising"", ""i"") } }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dct: <http://purl.org/dc/terms/>
SELECT ?company
WHERE {
  ?company dct:subject dbc:Advertising_companies .
}
LIMIT 100"
98,SPARQL logic wrong,What is the largest metropolitan area in Washington state?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri },"SELECT ?area ?areaLabel
WHERE {
  ?area a dbo:City ;
        dbo:isPartOf dbr:Washington_(state) ;
        dbo:populationTotal ?population .
  FILTER NOT EXISTS { ?area dbo:isPartOf ?parentArea }
}
ORDER BY DESC(?population)
LIMIT 1
BINDINGS ?areaLabel { ""Metropolitan area of"" }
"
99,different SPARQL,Who killed John Lennon?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> },"SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbpedia-owl:deathCause ?cause.
  ?cause rdfs:label ?killer.
  FILTER(CONTAINS(LCASE(?killer), ""kill""))
}"
100,different SPARQL,Which writers studied in Istanbul?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?uri <http://dbpedia.org/ontology/almaMater> ?x } UNION { ?uri <http://dbpedia.org/ontology/education> ?x } { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Istanbul> } UNION { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Istanbul> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
  ?writer dbo:almaMater dbr:Istanbul_University .
  FILTER EXISTS { ?writer dbo:occupation dbr:Writer }
}
LIMIT 100"
101,,Give me all Australian metalcore bands.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?band dbo:genre dbr:Metalcore ;
       dbp:origin dbr:Australia ;
       rdfs:label ?bandName .
  FILTER (LANG(?bandName) = ""en"")
}
LIMIT 100"
102,,Which countries adopted the Euro?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }","```
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?countryName
WHERE {
  ?country dbo:currency <http://dbpedia.org/resource/Euro> ;
           rdf:type dbo:Country ;
           rdfs:label ?countryName .
  FILTER(langMatches(lang(?countryName), ""en""))
}
```
This SPARQL query retrieves the distinct country names that adopted the Euro from DBpedia. It uses the `dbo:currency` property to select countries that have the Euro as their currency, and the `rdf:type` property to select only instances of the `dbo:Country` class. Additionally, the `FILTER` function is applied to retrieve only English-language labels for the countries."
103,,Give me all types of eating disorders.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatEatingDisorders> },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?disorder
WHERE {
  ?disorder a dbo:EatingDisorder .
}
ORDER BY ?disorder"
104,,Was Marc Chagall a jew?,"ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> ""Jewish""@en }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?isJewish
WHERE {
  dbo:Marc_Chagall dbo:religion ?isJewish .
  FILTER(STRSTARTS(LCASE(?isJewish), ""jewish""))
}"
105,,What was Brazil's lowest rank in the FIFA World Ranking?,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n },"SELECT ?rank WHERE {
    dbr:Brazil dbo:lowestFifaRank ?rank .
}
LIMIT 1"
106,,How many films did Leonardo DiCaprio star in?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT (COUNT(DISTINCT ?film) AS ?num_films)
WHERE {
    ?film rdf:type <http://dbpedia.org/ontology/Film> .
    ?film dbp:starring dbr:Leonardo_DiCaprio .
}
"
107,,Was Margaret Thatcher a chemist?,ASK WHERE { <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person
WHERE {
    ?person dbo:occupation dbo:Chemist ;
            dbo:wikiPageRedirects ?redirect .
    ?redirect dbo:wikiPageDisambiguates <http://dbpedia.org/resource/Margaret_Thatcher> .
}"
108,,Which U.S. states are in the same time zone as Utah?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) },"PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?stateLabel
WHERE {
    ?state dct:subject dbc:States_of_the_United_States.
    ?state dbo:timezone <http://dbpedia.org/resource/Mountain_Time_Zone>.
    FILTER(?state != <http://dbpedia.org/resource/Utah>)
    ?state rdfs:label ?stateLabel .
    FILTER(lang(?stateLabel) = 'en')
}
ORDER BY ?stateLabel"
109,,Give me all books written by Danielle Steel.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?book
WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}"
110,,Which country has the most official languages?,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1,"SELECT ?country ?count
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country ?count
ORDER BY DESC(?count)
LIMIT 1"
111,,What is the total amount of men and women serving in the FDNY?,SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT (SUM(?maleCount + ?femaleCount) AS ?totalCount)
WHERE {
  dbr:Fire_Department_of_the_City_of_New_York dbo:maleCount ?maleCount ;
                                            dbo:femaleCount ?femaleCount .
}"
112,,Which actor played Chewbacca?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/ontology/portrayer> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorLabel
WHERE {
  ?actor dbo:starring dbr:Chewbacca.
  SERVICE <http://dbpedia.org/sparql> {
    ?actor rdfs:label ?actorLabel.
    FILTER (lang(?actorLabel) = ""en"")
  }
}"
113,,Give me all libraries established earlier than 1400.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?library WHERE {
  ?library a dbpedia-owl:Library ;
           dbpedia-owl:foundingYear ?year .
  FILTER (?year < 1400)
}
LIMIT 100"
114,,Which programming languages were influenced by Perl?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT DISTINCT ?language
WHERE {
    ?page dbo:influencedBy dbr:Perl .
    ?page dbo:programmingLanguage ?language .
}"
115,,In which U.S. state is Mount McKinley located?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates },"SELECT ?stateLabel
WHERE {
  ?mountain dbpedia-owl:wikiPageID 141560;
            dbo:location ?state.
  ?state dbpedia-owl:type dbpedia:State.
  OPTIONAL { ?state rdfs:label ?stateLabel
  FILTER (lang(?stateLabel) = 'en') }
}
LIMIT 1"
116,,What airlines are part of the SkyTeam alliance?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?airline
WHERE {
  ?airline dbo:wikiPageWikiLink <http://en.wikipedia.org/wiki/SkyTeam>.
}"
117,,Which ships were called after Benjamin Franklin?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?ship
WHERE
{
    ?ship dbpedia-owl:name ""Benjamin Franklin""@en .
    ?ship dbpedia-owl:class dbpedia:Ship .
}"
118,,Give me all Methodist politicians.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician
WHERE {
  ?politician rdf:type dbo:Person .
  ?politician dbo:party dbr:Methodist_Church .
  ?politician rdf:type dbo:Politician .
}
LIMIT 100"
119,,What other books have been written by the author of The Fault in Our Stars?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?otherBook
WHERE {
   dbr:The_Fault_in_Our_Stars dbo:author ?author .
   ?otherBook dbo:author ?author .
   FILTER (?otherBook != dbr:The_Fault_in_Our_Stars)
}"
120,,What is the highest mountain?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?mountain ?name ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            rdfs:label ?name ;
            dbo:elevation ?elevation .
  FILTER (LANG(?name) = ""en"")
}
ORDER BY DESC(?elevation)
LIMIT 1"
121,,Which poet wrote the most books?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,"Here's a SPARQL query to retrieve the poet who wrote the most books from DBpedia:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?poet ?name (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:occupation dbo:Poet ;
        rdfs:label ?name ;
        dbp:notableworks ?book .
}
GROUP BY ?poet ?name
ORDER BY DESC(?numBooks)
LIMIT 1
```

This query fetches the poet who is classified as a Person, has the occupation of Poet, and has notable works listed. It then counts the number of books associated with each poet. The results are grouped by the poet and its name, ordered in descending order by the number of books, and limited to the top 1 result."
122,,Which programming languages influenced Javascript?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?influencedLanguage WHERE {
  dbr:JavaScript dbo:influenced ?influencedLanguage .
  ?influencedLanguage dbo:programmingLanguage ?language .
}"
123,,Which musician wrote the most books?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?name (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist.
  ?musician dbo:writer ?book.
  OPTIONAL { ?musician foaf:name ?name. }
}
GROUP BY ?musician ?name
ORDER BY DESC(?numBooks)
LIMIT 1"
124,,Which films starring Clint Eastwood did he direct himself?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> },"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?film
WHERE {
  ?film dbo:starring dbr:Clint_Eastwood ;
    dbo:director dbr:Clint_Eastwood.
}"
125,,Which software has been developed by organizations founded in California?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX org: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?software
WHERE{
  ?org a org:Organisation ;
       foaf:based_near dbo:California ;
       org:product ?software .
}
"
126,,Which instruments does Cat Stevens play?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?instrument
WHERE {
  dbpedia:Cat_Stevens dbo:instrument ?instrument .
}"
127,,How many airlines are members of the Star Alliance?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(DISTINCT ?airline) as ?count)
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbp:alliance <http://dbpedia.org/resource/Star_Alliance> .
}"
128,,Give me all actors called Baldwin.,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?uri WHERE { ?uri foaf:surname 'Baldwin'@en . { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . } },"SELECT DISTINCT ?actor WHERE {
  ?actor rdf:type dbo:Actor ;
         foaf:surname ""Baldwin"" .
}"
129,,Who wrote The Hunger Games?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/author> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorLabel
WHERE {
  ?book dbo:author ?author .
  ?book dbo:name ""The Hunger Games""@en .
  ?author rdfs:label ?authorLabel .
  FILTER(LANG(?authorLabel) = ""en"")
}
LIMIT 1"
130,,For which label did Elvis record his first album?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?label
WHERE {
  dbr:Elvis_Presley dbo:recordLabel ?label.
  ?album dbo:artist dbr:Elvis_Presley.
  ?album dbo:releaseType dbr:Album.
  ?album dbp:title ?title.
}
LIMIT 1
"
131,,Is Christian Bale starring in Batman Begins?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale },"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:starring dbr:Christian_Bale ;
        dbo:starring dbr:Batman_Begins .
}"
132,,Where is the residence of the prime minister of Spain?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence.
}"
133,,Which actor was casted in the most movies?,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1,"SELECT ?actor (COUNT(?movie) as ?movieCount)
WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?movieCount)
LIMIT 1"
134,,Which countries have more than two official languages?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 ),"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?countryLabel
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:officialLanguage ?language .
  {
    SELECT (COUNT(DISTINCT ?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    HAVING (?languageCount > 2)
  }
  SERVICE <http://dbpedia.org/sparql> {
    ?country rdfs:label ?countryLabel .
  }
  FILTER (lang(?countryLabel) = 'en')
}
ORDER BY ?countryLabel"
135,,Which countries have more than ten caves?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?cave a <http://dbpedia.org/ontology/Cave> { ?cave <http://dbpedia.org/ontology/location> ?uri } UNION { ?cave <http://dbpedia.org/ontology/location> ?loc . ?loc <http://dbpedia.org/ontology/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?cave) > 10 ),"SELECT ?country WHERE {
  ?country rdf:type dbpedia-owl:Country ;
           dbpedia-owl:hasFeature dbpedia:Cave ;
           dbo:numberOfCaves ?caveCount .
  FILTER (?caveCount > 10)
}
"
136,,Show me all songs from Bruce Springsteen released between 1980 and 1990.,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?song
WHERE {
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:releaseDate ?date .
  FILTER (?date >= ""1980-01-01""^^xsd:date && ?date <= ""1990-12-31""^^xsd:date)
  ?album dbo:musicalartist ?artist .
  ?song dbo:album ?album .
}
ORDER BY ?song

Note: This query assumes ""song"" refers to tracks or compositions, and that the artist's name is ""Bruce Springsteen"" in DBPedia."
137,,Which television shows were created by John Cleese?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?show
WHERE {
  ?show dbpedia-owl:creator dbpedia:John_Cleese.
  ?show rdf:type dbpedia-owl:TelevisionShow.
}"
138,,When did Latvia join the EU?,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Latvia> dbo:dateOfAccession ?date .
}"
139,,Which soccer players were born on Malta?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta .
}"
140,,How many politicians graduated from Columbia University?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> },"SELECT (COUNT(?person) as ?count)
WHERE {
  ?person a dbpedia-owl:Politician ;
          dbo:almaMater dbr:Columbia_University .
}"
141,,Give me the birthdays of all actors of the television show Charmed.,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthday
WHERE {
  ?actor dbo:birthDate ?birthday;
         dbo:starring dbr:Charmed .
}"
142,,Which telecommunications organizations are located in Belgium?,"SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, ""Telecommunications"") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> ""Belgium""@en } }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?organization
WHERE {
  ?organization dbo:industry dbo:Telecommunications ;
               dbo:location dbr:Belgium.
}
LIMIT 100"
143,,Give me a list of all lakes in Denmark.,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> } UNION { ?uri a <http://dbpedia.org/class/yago/LakesOfDenmark> } },"The SPARQL query to retrieve a list of all lakes in Denmark from DBPEDIA is as follows:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake
WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Denmark .
}
```

This query uses the DBPEDIA ontology and specifies that we are interested in entities that are of type `dbo:Lake`. It also filters the results based on the country, which is specified as `dbr:Denmark`. The `?lake` variable is used to retrieve the name or identifier of the lakes."
144,,How many children does Eddie Murphy have?,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?child) as ?numberOfChildren) WHERE {
  dbr:Eddie_Murphy dbo:child ?child.
}"
145,,Show me all English Gothic buildings in Kent.,SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> },"SELECT DISTINCT ?building
WHERE {
    ?building rdf:type dbo:Building ;
              dbp:architecturalStyle dbr:English_Gothic_architecture ;
              dbo:location dbr:Kent .
}
"
146,,Who is the manager of Real Madrid?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager
WHERE {
    <http://dbpedia.org/resource/Real_Madrid_CF> dbo:manager ?managerResource .
    ?managerResource dbp:name ?manager .
}
LIMIT 1"
147,,In which countries can you pay using the West African CFA franc?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> },"Here is a SPARQL query for DBpedia that retrieves the countries where you can pay using the West African CFA franc:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?countryLabel
WHERE {
  ?country dbo:currency dbpedia:West_African_CFA_franc ;
          dbo:abstract ?abstract .

  FILTER (lang(?abstract) = 'en')

  SERVICE <http://dbpedia.org/sparql> {
    ?country dct:subject dbpedia:Member_states_of_the_Francophonie .
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?country dbp:commonName ?countryLabel .
  }
}
```

This query retrieves the distinct labels of countries where the currency matches the West African CFA franc. It also includes a filter to only consider the English abstracts. Additionally, it employs two separate SPARQL services to join the concepts of currency and country through the subject of Member states of the Francophonie, and to retrieve the common name of the country."
148,,Which holidays are celebrated around the world?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
  FILTER EXISTS { ?holiday dbp:celebrated_in_country ?country . }
}
LIMIT 100"
149,,What is the longest river?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> { ?uri <http://dbpedia.org/ontology/length> ?l } UNION { ?uri <http://dbpedia.org/property/length> ?l } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river ?length
WHERE {
  ?river a dbo:River.
  ?river dbo:length ?length.
}
ORDER BY DESC(?length)
LIMIT 1"
150,,Which organizations were founded in 1930?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/formationYear> ?date } UNION { ?uri <http://dbpedia.org/ontology/foundingYear> ?date } FILTER regex(?date, ""^1930"") }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbp:foundationYear ""1930"" .
}"
151,,What is the birth name of Angela Merkel?,SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Angela_Merkel> foaf:birthName ?birthName .
}"
152,,Who has Tom Cruise been married to?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> },"SELECT ?marriage ?spouseLabel WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Tom Cruise"" .
  ?marriage rdf:type dbo:Marriage ;
            dbo:spouse ?person ;
            rdfs:label ?label .
  ?spouse wdt:P31 wd:Q5 ;
          dbo:spouse ?marriage ;
          rdfs:label ?spouseLabel .
  FILTER(LANGMATCHES(LANG(?label), ""en"") && LANGMATCHES(LANG(?spouseLabel), ""en""))
}
ORDER BY ?marriage"
153,,Which weapons did Heckler & Koch develop?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?weapon_name
WHERE {
  dbr:Heckler_&_Koch dbo:developed ?weapon .
  ?weapon rdfs:label ?weapon_name .
  FILTER (LANG(?weapon_name) = 'en')
}
"
154,,What is the smallest city by area in Germany?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city ?cityName ?area
WHERE {
  ?city rdf:type dbo:Settlement ;
        dbo:country <http://dbpedia.org/resource/Germany> ;
        dbp:areaTotal ?area ;
        foaf:name ?cityName .
  FILTER (LANG(?cityName) = ""en"")
}
ORDER BY ?area
LIMIT 1"
155,,What is the ruling party in Lisbon?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/leaderParty> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  ?city dbr:Lisbon dbo:rulingParty ?party.
  ?party dbo:partyName ?partyName.
}
LIMIT 1"
156,,How heavy is Jupiter's lightest moon?,SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?moon ?mass
WHERE {
  dbr:Jupiter dbo:moon ?moon .
  ?moon dbo:mass ?mass .
}
ORDER BY ?mass
LIMIT 1"
157,,How many employees does IBM have?,SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number },"SELECT ?count
WHERE {
    OPTIONAL {
        dbpedia:IBM dbo:numberOfEmployees ?count .
    }
}"
158,,List all episodes of the first season of the HBO television series The Sopranos!,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?episode
WHERE {
  ?s dbo:series dbr:The_Sopranos ;
     dbo:season Number 1 ;
     dbo:episode ?episode .
}"
159,,What does ICRO stand for?,"SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/abbreviation> ""ICRO"" }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?acroExpansion
WHERE {
  ?icro dbo:abbreviation ?acroExpansion .
  FILTER(langMatches(lang(?acroExpansion), ""en""))
}
LIMIT 1"
160,,Does the new Battlestar Galactica series have more episodes than the old one?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?newSeries ?oldSeries ?newEpisodes ?oldEpisodes
WHERE {
  ?newSeries rdf:type dbo:TelevisionShow ;
             dbo:wikiPageRedirects dbr:Battlestar_Galactica_(2004_TV_series) ;
             dbo:numberOfEpisodes ?newEpisodes .

  ?oldSeries rdf:type dbo:TelevisionShow ;
             dbo:wikiPageRedirects dbr:Battlestar_Galactica ;
             dbo:numberOfEpisodes ?oldEpisodes .

  FILTER(?newEpisodes > ?oldEpisodes)
}
LIMIT 1
The above SPARQL query retrieves the number of episodes for both the new and old Battlestar Galactica series from DBpedia and compares them to determine if the new series has more episodes than the old one. The LIMIT 1 clause is used to limit the number of results to 1, as we are only interested in a single answer."
161,,Give me all films produced by Hal Roach.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> },"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}"
162,,Who played Agent Smith in Matrix?,PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName WHERE {
  ?actor rdf:type dbo:Actor ;
         foaf:name ?actorName ;
         dbo:starring ?film .
  FILTER (?film = dbo:The_Matrix)
  FILTER (?actorName = ""Agent Smith""@en)
}"
163,,Which Greek parties are pro-European?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?partyLabel
WHERE {
  ?party dbr:Greece dbr:Political_party .
  ?party dbc:Pro-European_party .
  ?party rdfs:label ?partyLabel .
  FILTER (LANG(?partyLabel) = ""en"")
}
LIMIT 1000

This SPARQL query retrieves the labels of Greek political parties that are classified under the ""Pro-European Party"" category on DBPedia. The LIMIT clause is added to restrict the number of results to 1000."
164,,Give me a list of all bandleaders that play trumpet.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandleaderName
WHERE {
  ?bandleader dbo:instrument dbr:Trumpet ;
              foaf:name ?bandleaderName .
  FILTER EXISTS { ?bandleader dbp:occupation dbo:Bandleader }
}
LIMIT 100"
165,,What is the second highest mountain on Earth?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mountain ?rank
WHERE {
  ?mountain dbo:mountainRange dbr:Himalayas .
  ?mountain dbo:elevation ?elevation .
  FILTER (?elevation > 0).
  ?mountain dbo:wikipediaPageID ?id .
  ?mountain dbo:wikipediaPageRevisionID ?revision .
}
ORDER BY DESC(?elevation)
LIMIT 1
OFFSET 1"
166,,Is Egypts largest city also its capital?,ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city ?capital
WHERE {
  <http://dbpedia.org/resource/Egypt> dbp:largestCity ?city;
                                      dbo:capital ?capital.
}"
167,,Which rockets were launched from Baikonur?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Rocket> ; <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> },"SELECT DISTINCT ?rocket
WHERE {
  ?rocket dbpedia-owl:launchPad dbr:Baikonur_Cosmodrome .
  ?rocket rdf:type dbpedia-owl:Rocket .
}"
168,,How many programming languages are there?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT (COUNT(?language) AS ?numLanguages)
WHERE {
  ?language a dbo:ProgrammingLanguage .
}"
169,,Which Chess players died in the same place they were born in?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?player ?birthPlace ?deathPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
LIMIT 10"
170,,Who is the owner of Facebook?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> dbo:owner ?owner.
  ?owner rdf:type dbo:Person.
}"
171,,Give me all movies with Tom Cruise.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}
In this SPARQL query, we specify the usage of DBPEDIA ontology (dbo) and DBPEDIA resource (dbr) prefixes. We select all movies (?movie) where Tom Cruise starred, and also ensure that the selected entities are of type Film using the rdf:type property. This query will give you all movies that feature Tom Cruise."
172,,In which U.S. state is Fort Knox located?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?state
WHERE {
   dbr:Fort_Knox dbo:location ?location.
   ?location dbo:country dbr:United_States.
   ?location dbo:region ?state.
}"
173,,Give me all cities in New Jersey with more than 100000 inhabitants.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population ;
        dbp:state dbr:New_Jersey .
  FILTER(?population > 100000)
}
"
174,,Which mountains are higher than the Nanga Parbat?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mountain
WHERE {
  dbr:Nanga_Parbat dbo:elevation ?elevation1 .
  ?mountain dbo:elevation ?elevation2 .
  FILTER (?elevation2 > ?elevation1)
}"
175,,Give me all B-sides of the Ramones.,SELECT DISTINCT ?string WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ramones> ; <http://dbpedia.org/ontology/bSide> ?string },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide
WHERE {
  dbr:The_Ramones dbo:bSide ?bSide.
}"
176,,What are the specialities of the UNC Health Care?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?speciality
WHERE {
  dbr:UNC_Health_Care dbo:specialty ?speciality.
}
LIMIT 100"
177,,When was Olof Palme shot?,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?date
WHERE {
  ?person foaf:name ""Olof Palme"" .
  ?person dbo:deathCause ?cause .
  ?person dbo:deathDate ?date .
  FILTER(str(?cause) = ""Assassination"")
}"
178,,List the seven kings of Rome.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/King_of_Rome> },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?king
WHERE {
  ?king rdf:type dbo:Monarch ;
        dbo:birthPlace <http://dbpedia.org/resource/Rome> ;
        dbo:title ?title .
  FILTER (CONTAINS(?title, ""King"") && STRSTARTS(?king, ""http://dbpedia.org/resource/""))
}
LIMIT 7"
179,,Give me all people that were born in Vienna and died in Berlin.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
  ?person a dbo:Person .
}
"
180,,Is Darth Vader Luke’s father?,ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  dbr:Luke_Skywalker dbp:father ?father.
  ?father dbo:wikiPageRedirects ?redirect.
  ?redirect dbo:wikiPageRedirects dbr:Darth_Vader.
}
LIMIT 1"
181,,Show me all the breweries in Australia.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery
WHERE {
  ?brewery rdf:type dbo:Company ;
           dbo:industry dbr:Brewery ;
           dbo:country dbr:Australia .
}
"
182,,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?film
WHERE {
  ?film dbo:producer dbr:Steven_Spielberg ;
       dbo:budget ?budget .
  FILTER (xsd:decimal(?budget) >= 80)
}
ORDER BY ?film"
183,,Give me all soccer clubs in Spain.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> } UNION { ?uri <http://dbpedia.org/property/ground> ?ground FILTER regex(?ground, ""Spain"") } }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
Note: This query will return all soccer clubs in Spain by filtering entities that have the RDF type of ""SoccerClub"" and the country property set to ""Spain""."
184,,Who produced films starring Natalie Portman?,SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri },"SELECT ?producer WHERE {
   ?film dbo:starring dbr:Natalie_Portman.
   ?film dbo:producer ?producer.
}"
185,,Give me all breeds of the German Shepherd dog.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?breedLabel
WHERE {
  ?breed dbo:subClassOf dbr:German_Shepherd.
  ?breed rdfs:label ?breedLabel.
  FILTER (lang(?breedLabel) = 'en')
}"
186,,Who is the heaviest player of the Chicago Bulls?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?playerName ?weight WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> ;
          foaf:name ?playerName ;
          dbp:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1"
187,,Which languages are spoken in Estonia?,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> dbo:officialLanguage ?language .
}"
188,,What is the largest country in the world?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?country ?area
WHERE {
  ?country dbo:area ?area .
  FILTER NOT EXISTS { ?country dbo:areaTotal ?areaTotal }
  FILTER NOT EXISTS { ?country dbp:areaTotal ?areaTotal }
}
ORDER BY DESC(?area)
LIMIT 1"
189,,What is the largest city in america?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  ?city a dbo:City ;
        dbp:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1"
190,,Who was the pope that founded the Vatican Television?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?popeName
WHERE {
    ?pope dbo:workplaceHomepage <http://dbpedia.org/resource/Vatican_Television> .
    ?pope foaf:name ?popeName .
    ?pope dbo:title <http://dbpedia.org/resource/Pope_of_the_Catholic_Church> .
}"
191,,Who discovered Ceres?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> dbo:discoverer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?discoverer WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
LIMIT 1"
192,,Who is the king of the Netherlands?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Netherlands dbo:leader ?uri . ?uri rdf:type dbo:Royalty },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?king
WHERE {
  ?king a dbo:Noble;
        dct:subject <http://dbpedia.org/resource/Category:Dutch_kings>;
        rdfs:label ?label.
  FILTER (LANG(?label) = ""en"" && ?label = ""King of the Netherlands"")
}"
193,,Is Cola a beverage?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Cola rdf:type dbo:Beverage },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?beverageLabel
WHERE {
  ?beverage rdf:type dbo:Beverage ;
            rdfs:label ""Cola""@en .
  ?beverage rdfs:label ?beverageLabel .
  FILTER(LANG(?beverageLabel) = ""en"")
}"
194,,What is the alma mater of the chancellor of Germany Angela Merkel?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?alma_mater
WHERE {
    dbpedia:Angela_Merkel dbpedia-owl:almaMater ?alma_mater .
    ?alma_mater a dbpedia-owl:University .
}"
195,,Who wrote the book Les Piliers de la terre?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book dbo:author ?author ;
        dbp:title ""Les_Piliers_de_la_Terre"" .
}"
196,,Which airports does Yeti Airlines serve?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?airport WHERE {
  ?airline dbo:operator dbr:Yeti_Airlines .
  ?flight dbo:airline ?airline .
  ?flight dbo:destination ?airport .
  ?airport dbo:location ?location .
  ?location a dbo:Airport .
}"
197,,Where is the birthplace of Goethe?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Goethe WHERE { dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?Goethe },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplaceLabel
WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace.
  ?birthplace rdfs:label ?birthplaceLabel.
  FILTER (lang(?birthplaceLabel) = 'en')
}"
198,,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crisis ?invasion
WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?crisis .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?invasion .
  FILTER(?crisis < ?invasion)
}"
199,,Which ingredients do I need for carrot cake?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?ingredientLabel WHERE {
  ?carrotCake rdf:type dbo:Food ;
              rdfs:label ""Carrot cake""@en ;
              dbo:ingredient ?ingredient .
  ?ingredient rdfs:label ?ingredientLabel .
  FILTER (langMatches(lang(?ingredientLabel), ""en""))
}
LIMIT 10
This query retrieves the ingredients of a carrot cake from DBPEDIA. It specifies that the subject should be of type ""Food"" and have the label ""Carrot cake"". It then retrieves the ingredients using the ""ingredient"" property and their labels using the ""rdfs:label"" property. The FILTER condition ensures that only English labels are returned. The query is limited to 10 results, but you can modify this value as needed."
200,,Who created Wikipedia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Wikipedia dbo:author ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?creator WHERE {
  <http://dbpedia.org/resource/Wikipedia> dbo:author ?creator .
  ?creator foaf:name ?creatorName .
}
LIMIT 1"
201,,What is the highest mountain in Saxony Germany?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?mountain WHERE {
    ?mountain dbo:location dbr:Saxony_Germany ;
              dbo:elevation ?elevation .
} ORDER BY DESC(?elevation)
LIMIT 1"
202,,Who is the current federal minister of finance in Germany?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?minister WHERE {
  ?germany dbp:leaderTitle ""Federal Minister of Finance"" .
  ?germany dbp:leader ?minister .
  ?minister foaf:name ?name .
  FILTER(langMatches(lang(?name), ""EN""))
}
LIMIT 1"
203,,In which country is Mecca located?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mecca dbo:country ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?countryUri ?countryLabel
WHERE {
  dbr:Mecca dbo:country ?countryUri .
  ?countryUri rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")
}"
204,,Who played Gus Fring in Breaking Bad?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorLabel
WHERE {
  ?actor dbo:starring dbr:Breaking_Bad ;
         dbp:character ""Gus_Fring"" .
  SERVICE <http://dbpedia.org/sparql> {
    ?actor rdfs:label ?actorLabel .
    FILTER (LANG(?actorLabel) = 'en')
  }
}
LIMIT 1"
205,,In which country does the Nile start?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Nile dbo:sourceCountry ?uri },"SELECT ?countryLabel WHERE {
  dbr:Nile dbo:country ?country.
  ?country rdfs:label ?countryLabel.
  FILTER(langMatches(lang(?countryLabel), ""en"")).
}"
206,,In which state Penn State University is located?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stateLabel
WHERE {
  ?university dbo:location ?state.
  ?university rdfs:label ""Pennsylvania State University""@en.
  ?state rdfs:label ?stateLabel.
  FILTER(LANG(?stateLabel) = ""en"")
}
LIMIT 1"
207,,What is the biggest stadium in Spain?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stadium ?name WHERE {
  ?stadium dbo:location ?country;
           dbo:capacity ?capacity;
           dbp:locationCountry ""Spain""@en;
           rdfs:label ?name.

  FILTER(LANG(?name) = ""en"" && ?capacity > 50000)
}
ORDER BY DESC(?capacity)
LIMIT 1"
208,,Who is the coach of Ankara's ice hockey team?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach
WHERE {
  ?team dbo:city dbr:Ankara .
  ?team dbo:sport dbr:Ice_hockey .
  ?team dbp:coach ?coach .
}"
209,,How large is the area of UK?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?area
WHERE {
  <http://dbpedia.org/resource/United_Kingdom> dbo:area ?area
}
"
210,,Who created Batman?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creator
WHERE {
  dbr:Batman dbo:creator ?creator .
}"
211,,Was Sigmund Freud married?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Sigmund_Freud dbo:spouse ?uri },"SELECT ?person
WHERE {
    ?person rdf:type dbo:Person ;
            rdfs:label ""Sigmund Freud""@en ;
            dbo:spouse ?spouse.
    FILTER(langMatches(lang(?spouse), ""en""))
}
LIMIT 1"
212,,Who are the developers of DBpedia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:DBpedia dbo:developer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?developer
WHERE {
    dbo:DBpedia dbo:developer ?developer.
}"
213,,Give me all movies directed by Francis Ford Coppola.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?movie
WHERE {
  ?director foaf:name ""Francis Ford Coppola"" .
  ?movie dbo:director ?director .
}
"
214,,Are tree frogs a type of amphibian?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?type
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?redirect.
  ?redirect dbo:wikiPageWikiLink dbr:Amphibian.
  ?redirect rdf:type ?type.
}"
215,,What is the location of the Houses of Parliament?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?location WHERE {
  dbpedia:Houses_of_Parliament dbpedia-owl:location ?location.
}"
216,,how much is the elevation of Düsseldorf Airport ?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}"
217,,How much is the population of mexico city ?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?populationPlaceholder.
  ?populationPlaceholder dct:subject <http://dbpedia.org/resource/Category:Mexico_City>.
  BIND(REPLACE(str(?populationPlaceholder), ""http://dbpedia.org/resource/Mexico_City"", """") as ?population)
}"
218,,when was the founding date of french fifth republic?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?foundingDate 
WHERE {
  <http://dbpedia.org/resource/French_Fifth_Republic> dbo:foundingDate ?foundingDate .
}"
219,,Who was the first King of England?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?kingLabel
WHERE {
  ?king dbpedia-owl:title ?title ;
        dbpedia-owl:monarchTitle ""King of England""@en .
  FILTER(langMatches(lang(?title), ""en""))
}
ORDER BY ASC(?king)
LIMIT 1"
220,invalid property,Who is the editor of Forbes?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Forbes dbo:editor ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?editor_name WHERE {
  ?editor dbo:editorOf dbr:Forbes .
  ?editor foaf:name ?editor_name .
}"
221,right,Which awards did Douglas Hofstadter win?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award.
}"
222,,Who is the youngest Darts player?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?name ?birthdate
WHERE {
  ?player dbo:sport dbo:Darts .
  ?player rdfs:label ?name .
  ?player dbo:birthDate ?birthdate .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ASC(?birthdate)
LIMIT 1"
223,,Is horse racing a sport?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Horse_racing rdf:type dbo:Sport },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?isSport
WHERE {
  <http://dbpedia.org/resource/Horse_racing> dbo:isPartOfSports ?isSport.
}"
224,,Which river does the Brooklyn Bridge cross?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?riverName 
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:crosses ?river.
  ?river foaf:name ?riverName.
}
LIMIT 1"
225,,How many people live in Poland?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  <http://dbpedia.org/resource/Poland> dbpedia-owl:populationTotal ?population .
}"
226,,When was the last episode of the TV series Friends aired?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?lastEpisodeDate
WHERE {
  ?tvSeries rdf:type dbo:TelevisionShow .
  ?tvSeries rdfs:label ""Friends""@en .
  ?tvSeries dbp:lastAiredDate ?lastEpisodeDate .
}
LIMIT 1"
227,,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }","PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person
WHERE {
  ?person dbp:spouse ?spouse .
  ?person rdfs:label ""Michelle Obama""@en .
}
LIMIT 1"
229,,Who is 8th president of US?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbr:8th_President_of_the_United_States dbo:wikiPageRedirects ?link . ?link dbp:name ?name },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentLabel
WHERE {
  ?president dbo:position dbr:8th_President_of_the_United_States .
  ?president rdfs:label ?presidentLabel .
  FILTER(LANG(?presidentLabel) = 'en')
}"
230,,how much is the total population of  european union?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  dbr:European_Union dbo:populationTotal ?population.
}
"
231,,Give me all launch pads operated by NASA.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?launchPadName
WHERE {
  ?launchPad dbpedia-owl:operator dbpedia:NASA .
  ?launchPad dbpedia-owl:type dbc:Launch_pads .
  ?launchPad rdfs:label ?launchPadName .
  FILTER (langMatches(lang(?launchPadName), ""en""))
}
ORDER BY ?launchPadName"
232,,Who developed the video game World of Warcraft?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?developer
WHERE {
  ?game rdf:type dbo:VideoGame ;
        foaf:name ""World of Warcraft"" ;
        dbo:developer ?developer .
}
"
233,,What is the birth name of Adele?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bn WHERE { dbr:Adele dbo:birthName ?bn },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?adele dbo:birthName ?birthName.
  FILTER (str(?adele) = ""http://dbpedia.org/resource/Adele"")
}"
234,,What is the population of Cairo?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pop WHERE { dbr:Cairo dbo:populationTotal ?pop },"SELECT ?population WHERE {
  dbpedia:Cairo dbpedia-owl:populationTotal ?population .
}"
235,,Is Frank Herbert still alive?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?name
WHERE {
  ?person dbo:birthName ?name;
          dbo:birthDate ?birthDate.
  FILTER (CONTAINS(?name, ""Frank Herbert"") && !BOUND(?deathDate))
}
LIMIT 1 

This query searches for a person with the birth name of ""Frank Herbert"" and checks if the death date is not specified (indicating the person is still alive). It then returns the person's URI and birth name. The ""LIMIT 1"" is used to retrieve only one result."
236,,What is the last work of Dan Brown?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?workLabel WHERE {
  dbr:Dan_Brown dbo:notableWork ?work .
  ?work dbo:author dbr:Dan_Brown .
}
ORDER BY DESC(?work)
LIMIT 1"
237,,Where is Sungkyunkwan University?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbr:Sungkyunkwan_University dbo:city ?city ; dbo:country ?country },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?locationLabel
WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location.
  ?location rdfs:label ?locationLabel.
 
  FILTER (lang(?locationLabel) = 'en')
}"
238,,Who is the author of the interpretation of dreams?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?Author },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?author
WHERE {
  ?book dbpprop:name ""The_Interpretation_of_Dreams"" .
  ?book dbpedia-owl:author ?author .
}
LIMIT 1"
239,,When was the death  of  Shakespeare?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?x WHERE { dbr:William_Shakespeare dbo:deathDate ?x } LIMIT 1,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?dateOfDeath WHERE {
   db:William_Shakespeare dbo:deathDate ?dateOfDeath .
}"
241,,Who developed Slack?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:product <http://dbpedia.org/resource/Slack_(software)> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer WHERE {
  ?company dbo:developer ?developer ;
           rdfs:label ""Slack"" .
  FILTER(LANG(?developer) = """")
}"
242,,Where is the origin of Carolina reaper?,PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Carolina_Reaper dbo:origin ?uri},"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}"
243,,In which year was Rachel Stevens born?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbpedia-owl:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}
LIMIT 1"
244,,How often did Jane Fonda marry?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jane_Fonda dbo:spouse ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?marriage) AS ?marriageCount)
WHERE {
  ?person dbo:spouse ?marriage.
  FILTER(?person = dbo:Jane_Fonda).
}"
245,,Was the wife of president Lincoln called Mary?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Mary"") }","SELECT DISTINCT ?wife_name
WHERE {
    ?president dbo:spouse ?wife .
    ?president dbo:president ?country .
    ?country rdfs:label ""United States"" .
    ?wife rdfs:label ""Mary Todd Lincoln""@en .
    ?wife dbo:spouse ?president .
    FILTER(isLiteral(?wife) && langMatches(lang(?wife), ""en""))
}"
246,,Which cities does the Weser flow through?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?city
WHERE {
  ?city dbo:locatedAlongsideRiver dbr:Weser .
}"
247,,In which programming language is GIMP written?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?language
WHERE {
  <http://dbpedia.org/resource/GIMP> dbo:programmingLanguage ?language .
}
"
248,,Which university did Angela Merkel attend?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?university
WHERE {
  ?person a dbo:Person ;
          dbo:fullname ""Angela Merkel"" ;
          dbo:almaMater ?university .
          
  ?university a dbo:University .
}"
249,,List all the musicals with music by Elton John.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musical 
WHERE {
    ?musical dbp:music ?composer .
    FILTER regex(?composer, ""Elton John"", ""i"").
    ?musical rdf:type dbo:Musical.
}
ORDER BY ?musical"
250,,How many Aldi stores are there?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT (COUNT(?store) AS ?storeCount) WHERE {
  ?store rdf:type dbo:Company ;
         rdfs:label ?label .
  FILTER(CONTAINS(lcase(?label), ""aldi"")).
}"
251,,What is the longest river in the world?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?riverName 
WHERE {
  ?river dbo:longest -> {
    SELECT DISTINCT ?country WHERE {
      ?river dbo:country ?country.
    }
    GROUP BY ?country
    ORDER BY DESC(COUNT(DISTINCT ?river)) LIMIT 1
  }.
  ?river dbo:type dbo:River.
  ?river rdfs:label ?riverName.
  FILTER (lang(?riverName) = 'en')
}"
252,,When was John Adams born?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate
WHERE {
  ?person foaf:name ""John Adams"" .
  ?person dbo:birthDate ?birthDate .
}
"
253,,Which companies produce hovercrafts?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:product res:Hovercraft },"SELECT ?companyLabel
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:product ?product .
  ?product rdf:type dbo:Hovercraft .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"" . }
}"
254,,Who was the wife of U.S. president Lincoln?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?wifeLabel
WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife.
  ?wife rdfs:label ?wifeLabel.
  FILTER langMatches(lang(?wifeLabel), ""EN"").
}"
255,,Which species does an elephant belong?,PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?species WHERE { dbr:Elephant dbp:species ?species },"SELECT ?species WHERE {
  ?elephant rdf:type dbo:Elephant ;
             dbo:species ?species .
}"
256,,How many people live in the capital of Australia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?population
WHERE {
  dbr:Canberra dbo:populationTotal ?population
}"
257,,In which ancient empire could you pay with cocoa beans?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?empireLabel
WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire dbo:era dbr:Ancient_history .
  SERVICE <http://dbpedia.org/sparql> {
    ?empire rdfs:label ?empireLabel .
    FILTER (lang(?empireLabel) = ""en"")
  }
}
LIMIT 10"
258,,How many theories did Albert Einstein come up with?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT COUNT(*) AS ?numberOfTheories
WHERE {
  ?einstein dbp:name ""Albert Einstein""@en.
  ?einstein dbp:significantIdea ?theory.
}
"
259,,Who composed the soundtrack for Cameron's Titanic?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?composer WHERE {
  ?film dbo:director foaf:name ""James Cameron""@en.
  ?film dbo:soundtrack ?soundtrack.
  ?soundtrack dbo:artist ?composer.
  FILTER(?film = dbo:Titanic)
}"
260,,Give me the runtime of Toy Story.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime },"SELECT ?runtime WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Toy Story""@en ;
        dbo:runtime ?runtime .
}"
262,,With how many countries Iran has borders?,PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT (COUNT(?country) AS ?count)
WHERE {
  dbr:Iran dbo:country ?country .
}"
263,,Which electronics companies were founded in Beijing?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company
WHERE {
  ?company dbo:location dbr:Beijing .
  ?company rdf:type dbo:Company .
  ?company rdf:type dbo:ElectronicsCompany .
}"
264,,Who was the successor of John F. Kennedy?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  <http://dbpedia.org/resource/John_F._Kennedy> dbo:successor ?successor .
}"
265,,Who is the mayor of Paris?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbprop: <http://dbpedia.org/property/>

SELECT ?mayor
WHERE {
  dbpedia:Paris dbprop:leaderName ?mayor.
}"
266,,Did Arnold Schwarzenegger attend a university?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?person
WHERE {
  ?person a dbo:Person ;
          dbo:almaMater ?university.
  FILTER(?person = dbo:Arnold_Schwarzenegger)
}"
267,,Is James Bond married?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:James_Bond dbo:spouse ?uri },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?maritalStatus
WHERE {
  ?person foaf:name ""James Bond""@en.
  OPTIONAL { ?person foaf:maritalStatus ?maritalStatus }
}"
268,,Does the Isar flow into a lake?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?x dbo:inflow res:Isar ; rdf:type dbo:Lake },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

ASK {
  dbr:Isar dbo:mouthAsLake ?lake .
}"
269,,Which Indian company has the most employees?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
SELECT ?company ?name ?employees
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Companies_of_India ;
           rdfs:label ?name ;
           dbo:numberOfEmployees ?employees .
  FILTER (lang(?name) = ""en"")
}
ORDER BY DESC(?employees)
LIMIT 1"
270,,Who was John F. Kennedy's vice president?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vicePresident
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident.
}
The result of this SPARQL query will return the vice president of John F. Kennedy."
271,,Which country does the creator of Miffy come from?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  dbpedia:Miffy dbpedia-owl:author ?creator .
  ?creator dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace dbpedia-owl:country ?country .
}
"
273,,In what city is the Heineken brewery?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Heineken dbo:manufacturer ?x . ?x dbo:locationCity ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  dbr:Heineken_Brewery dbo:location ?city_res .
  ?city_res dbo:country dbr:Netherlands .
  ?city_res dbo:country ?city .
}
LIMIT 1"
274,,Is Barack Obama a democrat?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:party <http://dbpedia.org/resource/Democratic_Party_(United_States)> },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isBarackObamaDemocrat
WHERE {
  dbpedia:Barack_Obama rdf:type dbpedia-owl:Person .
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  ?party rdfs:label ?isBarackObamaDemocrat .
  FILTER regex(?isBarackObamaDemocrat, ""Democrat"", ""i"")
}"
275,,List the children of Margaret Thatcher.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child.
}
"
276,,From which region is the Melon de Bourgogne?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri },"SELECT ?region WHERE {
  ?melon dbo:region ?region.
  FILTER (?melon = dbo:Melon_de_Bourgogne)
}"
278,,how big is the total area of North Rhine- Westphalia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?area
WHERE {
   <http://dbpedia.org/resource/North_Rhine-Westphalia> dbo:areaTotal ?area .
}"
279,,Which city has the most inhabitants?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY DESC(?pop) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbp:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1"
280,,What is Donald Trump's main business?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?business
WHERE {
    ?person foaf:name ""Donald Trump""@en .
    ?person dbo:occupation ?business .
    FILTER(STRSTARTS(str(?business), ""http://dbpedia.org/resource/""))
}
LIMIT 1"
281,,When will start the final match of the football world cup 2018?,PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1,"The SPARQL query to retrieve the start date of the final match of the football World Cup 2018 from DBPEDIA would be as follows:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?date
WHERE {
    ?finalMatch a dbo:FootballMatch ;
                dbo:tournament dbpedia:2018_FIFA_World_Cup ;
                dbp:date ?date .
    FILTER regex(?date, ""final"", ""i"")
}
```

This query selects the ?date variable for the final match (?finalMatch) of the 2018 FIFA World Cup. It filters the results to only include matches where the date contains the word ""final"" (case-insensitive) to ensure we retrieve the start date of the final match specifically."
282,,Which films did Stanley Kubrick direct?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}"
283,,how much is the population  Iraq?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq },"SELECT ?population
WHERE {
  dbpedia: Iraq dbo:populationTotal ?population.
  }
"
284,,How many inhabitants does the largest city in Canada have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num },"SELECT ?population
WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:country dbr:Canada.
  ?city dbo:populationTotal ?population.
  FILTER NOT EXISTS {
    ?largerCity dbo:populationTotal ?largerPopulation.
    FILTER(?largerPopulation > ?population)
  }
}
ORDER BY DESC(?population)
LIMIT 1"
285,,Who is the mayor of the capital of French Polynesia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayor WHERE {
  ?frenchPolynesiaCapital dbo:country dbr:French_Polynesia .
  ?frenchPolynesiaCapital dbo:capitalOf dbr:French_Polynesia .
  ?frenchPolynesiaCapital foaf:name ?capitalName .
  ?capital dbo:mayor ?mayor .
  FILTER (?capitalName = ""Papeete"")
}"
286,,Give me all actors starring in movies directed by William Shatner.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor
WHERE {
    ?director foaf:name ""William_Shatner"" .
    ?movie dbo:director ?director .
    ?movie dbo:starring ?actor .
}"
287,,How tall is Claudia Schiffer?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  ?person dbo:height ?height ;
          dbo:wikiPageID ?id .
  FILTER (?id = 15037)
}"
288,,how much is the population densty rank of germany?,PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank
WHERE {
   dbr:Germany dbo:populationDensityRank ?rank .
}"
289,,What is the highest mountain in Italy?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1,"SELECT ?mountainLabel
WHERE {
   ?mountain wdt:P17 wd:Q38.
   ?mountain wdt:P31 wd:Q8502.
   ?mountain wdt:P610 ?elevation.
   FILTER (LANG(?mountainLabel) = 'en')
}
ORDER BY DESC(?elevation)
LIMIT 1

Explanation:
1. The first line selects the variable ?mountainLabel, which will store the label of the mountain.
2. The WHERE clause specifies the conditions for the query.
3. The first line in the WHERE clause is ?mountain wdt:P17 wd:Q38, which filters the mountains based on their country of origin (Italy).
4. The second line filters the mountains based on their instance of (mountain).
5. The third line extracts the elevation of the mountains using the property P610.
6. The FILTER clause filters only English labels to be retrieved.
7. The ORDER BY line sorts the mountains in descending order based on their elevation.
8. The LIMIT 1 line ensures that only the highest mountain is returned as the result."
290,,List all games by GMT.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:GMT_Games },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?game
WHERE {
  ?game dct:subject dbr:Games_published_by_GMT_Games.
}
Note: This query assumes that the GMT Games company has a DBPEDIA category called ""Games_published_by_GMT_Games"" that contains all their game resources."
291,,What is the official language of Suriname?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri },"SELECT ?languageLabel
WHERE {
  <http://dbpedia.org/resource/Suriname> <http://dbpedia.org/ontology/officialLanguage> ?language.
  ?language rdfs:label ?languageLabel.
  FILTER (lang(?languageLabel)='en')
}"
292,,In which city did Nikos Kazantzakis die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town },"```
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  ?person a dbpedia-owl:Writer ;
          foaf:name ""Nikos Kazantzakis"" ;
          dbpprop:deathPlace ?place .
  ?place dbpedia-owl:location ?city .
}
```

This SPARQL query retrieves the city in which Nikos Kazantzakis died. It searches for a person who is a writer, has the name ""Nikos Kazantzakis"", and has a known death place. The query then retrieves the location (city) of the death place."
293,,What is in a chocolate chip cookie?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chocolate_chip_cookie dbo:ingredient ?uri },"PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ingredientLabel
WHERE {
    ?cookie dbo:ingredient ?ingredient .
    ?ingredient rdfs:label ?ingredientLabel .
    FILTER(LANG(?ingredientLabel) = 'en') .
    FILTER(CONTAINS(STR(?ingredientLabel), 'chocolate chip cookie')) .
}
LIMIT 10"
294,,In which country is the Limerick Lake?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?countryLabel WHERE {
  ?limerickLake dbo:location ?country.
  ?country dbo:commonName ?countryLabel.
  ?limerickLake geo:lat ?latitude.
  ?limerickLake geo:long ?longitude.
}"
295,,Give me all video games published by Mean Hamster Software.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?game
WHERE {
    ?game dbo:publisher <http://dbpedia.org/resource/Mean_Hamster_Software> .
    ?game a dbo:VideoGame .
}"
296,,Give me all members of Prodigy.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Prodigy dbo:bandMember ?uri },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member
WHERE {
  ?band dbo:bandMember ?member ;
       rdfs:label ""The Prodigy""@en .
  FILTER (LANG(?member) = ""en"")
}
```

Note: This query assumes that ""The Prodigy"" refers to the musical band called Prodigy."
297,,In which time zone is Rome?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rome dbo:timeZone ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timezone 
WHERE {
  dbr:Rome dbo:timeZone ?timezone .
}"
298,,How high is the lighthouse in Colombo?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  dbp:Colombo dbo:height ?height .
  dbp:Colombo dbo:type dbr:Lighthouse .
}"
299,,Who are the writers of the Wall album of Pink Floyd?,PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
  ?album dbo:artist ?artist.
  ?artist dbp:name ""Pink Floyd"".
  ?album dbp:title ""The Wall"".
  ?album dbp:writer ?writer.
}"
300,,Who is the mayor of Rotterdam?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rotterdam dbo:leaderName ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbp-ont: <http://dbpedia.org/ontology/>

SELECT ?mayorName WHERE {
  dbpedia:Rotterdam dbp-ont:mayor ?mayor .
  ?mayor dbp-ont:name ?mayorName .
}"
301,,What is the largest city in Australia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri },"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:Settlement ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
  FILTER (LANG(?city) = '' || LANGMATCHES(LANG(?city), 'en'))
}
ORDER BY DESC(?population)
LIMIT 1"
302,,Who was married to president Chirac?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Jacques_Chirac dbo:spouse ?uri },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  dbo:Jacques_Chirac dbo:spouse ?spouse.
  ?spouse rdf:type dbo:Person.
}"
303,,What form of government is found in South Africa?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?government
WHERE {
  <http://dbpedia.org/resource/South_Africa> dbo:government ?government.
}"
304,,How high is the Yokohama Marine Tower?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num },"SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Yokohama_Marine_Tower> <http://dbpedia.org/ontology/height> ?height
}"
305,,Which holidays are celebrated around the world? test2,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT DISTINCT ?holiday
WHERE {
  ?holiday dbo:type dbr:Public_holiday .
}"
306,,Who is the tallest basketball player?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?player ?height
WHERE {
  ?player dbpedia-owl:height ?height .
  ?player dbpedia-owl:occupation dbpedia:Basketball_player .
} 
ORDER BY DESC(?height)
LIMIT 1"
307,,How many languages are spoken in Turkmenistan?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT (COUNT(DISTINCT ?language) AS ?languageCount)
WHERE {
  ?country dbo:country <http://dbpedia.org/resource/Turkmenistan>.
  ?country dct:subject ?language.
  ?language dct:subject <http://dbpedia.org/resource/Category:Languages_by_country>.
}
"
308,,Did Che Guevara have children?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Che_Guevara dbo:child ?uri },"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}"
309,,Did Kaurismäki ever win the Grand Prix at Cannes?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> 
SELECT ?filmLabel 
WHERE { 
    ?film a dbpedia-owl:Film ;
          dbpedia-owl:director/dbpedia-owl:birthName ""Aki Kaurismäki"" ;
          dbpedia-owl:award/rdfs:label ""Grand Prix""@en .
    ?film rdfs:label ?filmLabel .
    FILTER(langMatches(lang(?filmLabel),'en'))
}"
310,,To which party does the mayor of Paris belong?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?x . ?x dbo:party ?uri },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party
WHERE {
  dbr:Mayor_of_Paris dbo:party ?party.
}"
311,,Who is the Formula 1 race driver with the most races?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?driver ?name ?races
WHERE {
    ?driver dbo:occupation dbo:Formula_One_racer.
    ?driver foaf:name ?name.
    ?driver dbo:numberOfRaces ?races.
}
ORDER BY DESC(?races)
LIMIT 1"
312,,What country is Sitecore from?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Sitecore dbo:foundationPlace ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?country
WHERE {
  ?site dbo:wikiPageWikiLink dbr:Sitecore.
  ?site dbp:locationCountry ?country.
}"
313,,Give me the birth place of Frank Sinatra.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Frank_Sinatra> dbpedia-owl:birthPlace ?birthPlace .
}"
314,,Is Christian Bale starring in Velvet Goldmine?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale },"SELECT ?actor WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Christian Bale"" ;
         dbo:starring dbr:Velvet_Goldmine .
}"
315,,Who is the son of Sonny and Cher?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:parent res:Cher ; dbo:parent res:Sonny_Bono },"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher.
}"
316,,How many ethnic groups live in Slovenia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Slovenia> dbo:ethnicGroup ?ethnicGroup .
}"
317,,What is the capital of Cameroon?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cameroon dbo:capital ?uri },"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital.
}"
318,,Was Natalie Portman born in the United States?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT DISTINCT ?birthPlace WHERE {
    dbr:Natalie_Portman dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country dbr:United_States .
}"
319,,How many pages does War and Peace have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(*) AS ?numPages)
WHERE {
  ?book dbo:author dbr:Leo_Tolstoy .
  ?book dbo:numberOfPages ?numPages .
  FILTER (REGEX(?book, ""War_and_Peace""))
}"
320,,Who is the oldest child of Meryl Streep?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?meryl foaf:name ""Meryl Streep"" .
  ?meryl dbo:child ?child .
} ORDER BY DESC(?child)
LIMIT 1"
321,,Which television shows were created by Walt Disney?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show
WHERE {
  ?show dbo:creator <http://dbpedia.org/resource/Walt_Disney> .
  ?show dbo:type dbo:TelevisionShow .
}"
322,,What does IYCM stand for?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:abbreviation ""IYCM"" }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?iycmLabel
WHERE {
  ?iycm dbo:abbreviation ""IYCM""@en.
  ?iycm rdfs:label ?iycmLabel
  FILTER(langMatches(lang(?iycmLabel), ""en""))
}"
323,,Which types of grapes grow in Oregon?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grapeType WHERE {
  ?grape dbo:growingRegion <http://dbpedia.org/resource/Oregon> .
  ?grape rdf:type ?grapeType .
  FILTER(STRSTARTS(STR(?grapeType), ""http://dbpedia.org/class/yago/GrapeVarieties""))
}"
324,,Was U.S. president Jackson involved in a war?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?president
WHERE {
  dbpedia:Andrew_Jackson dbpedia-owl:office ?office .
  ?office dbpedia-owl:officeholder ?president .
  ?president dbpedia-owl:title ?title .
  FILTER(STRSTARTS(?title, ""President of the United States"")) .
  ?president dbpedia-owl:occupation ?occupation .
  FILTER(STRSTARTS(?occupation, ""Military personnel""))
}"
325,,When was the Titanic completed?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:RMS_Titanic dbo:completionDate ?date },"SELECT ?completionDate WHERE {
  ?titanic dbo:completionDate ?completionDate.
  FILTER (REGEX(?titanic, ""Titanic""))
}"
326,,Did Tesla win a nobel prize in physics?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?nobelPrize
WHERE {
  ?person dbo:wikiPageWikiLink dbr:Nikola_Tesla ;
          dbo:award dbr:Nobel_Prize_in_Physics ;
          dbo:wikiPageWikiLink ?nobelPrize .
}"
327,,How many states are in Mexico?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri dbo:type dbr:States_of_Mexico },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?state) as ?count)
WHERE {
  ?state dbo:country <http://dbpedia.org/resource/Mexico> .
  ?state a dbo:State .
}"
328,,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize },"SELECT ?scientist 
WHERE {
    ?scientist dbpedia-owl:award dbr:Nobel_Prize_in_Peace ;
               dbpprop:knownFor dbr:Manhattan_Project .
}"
329,,How much did the Lego Movie cost?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:The_Lego_Movie dbo:budget ?n },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT ?film ?cost
WHERE {
  ?film rdf:type dbpedia-owl:Film ;
        dbpprop:budget ?cost ;
        rdfs:label ""The Lego Movie""@en .
}
LIMIT 1"
330,,Who composed the music for Harold and Maude?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?composerLabel WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Harold and Maude""@en ;
        dbo:musicComposer ?composer .

  ?composer rdfs:label ?composerLabel .
  FILTER (lang(?composerLabel) = ""en"")
}
LIMIT 1"
331,,List all episodes of the first season of the HBO television series The Sopranos.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 },"SELECT ?episodeLabel WHERE {
  ?series rdf:type dbo:TelevisionShow ;
          rdfs:label ""The Sopranos""@en .
  
  ?series dbo:episode ?episode .
  ?episode dbo:season ""1""^^xsd:nonNegativeInteger .
  
  ?episode rdfs:label ?episodeLabel .
  
  FILTER(langMatches(lang(?episodeLabel), ""en"")) 
}
ORDER BY ?episodeLabel"
332,,Which city has the least inhabitants?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1,"SELECT ?city ?population WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
}
ORDER BY ASC(?population)
LIMIT 1"
333,,Where is Syngman Rhee buried?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Syngman_Rhee dbo:restingPlace ?uri },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?place WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:burialPlace ?place.
}"
334,,Does Neymar play for Real Madrid?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?player
WHERE {
    ?player dbo:currentClub <http://dbpedia.org/resource/Real_Madrid_C.F.>.
    ?player dbo:wikiPageRedirects|dbo:wikiPageDisambiguates <http://dbpedia.org/resource/Neymar>.
}"
335,,Who wrote the book The Pillars of the Earth?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author ?author ;
        dbp:name ""The Pillars of the Earth"" .
}"
336,,Do Prince Harry and Prince William have the same parents?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {

  dbr:Prince_Harry dbo:parent ?parent.
  dbr:Prince_William dbo:parent ?parent.

}"
337,,Who was the doctoral supervisor of Albert Einstein?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?supervisorName
WHERE {
    ?einstein dbo:doctoralAdvisor ?supervisor .
    ?supervisor foaf:name ?supervisorName .
    FILTER (LANG(?supervisorName) = 'en')
    FILTER (REGEX(?einstein, ""Albert_Einstein"", ""i""))
}"
338,,Does Breaking Bad have more episodes than Game of Thrones?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX prop: <http://dbpedia.org/property/>

SELECT
  (count(?bbEpisode) AS ?breakingBadEpisodes)
  (count(?gotEpisode) AS ?gameOfThronesEpisodes)
WHERE {
  ?breakingBad dbo:wikiPageWikiLink <http://en.wikipedia.org/wiki/Breaking_Bad> ;
              dbo:numberOfEpisodes ?bbEpisode .

  ?gameOfThrones dbo:wikiPageWikiLink <http://en.wikipedia.org/wiki/Game_of_Thrones> ;
                  dbo:numberOfEpisodes ?gotEpisode .
}"
339,,Who was Vincent van Gogh inspired by?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?inspiredBy
WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?inspiredBy.
}"
340,,Which building after the Burj Khalifa has the most floors?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?building ?name ?floors
WHERE {
  ?building rdf:type dbo:Building .
  ?building rdfs:label ?name .
  ?building dbo:numberOfFloors ?floors .
  
  FILTER (?building != <http://dbpedia.org/resource/Burj_Khalifa>)
}
ORDER BY DESC(?floors)
LIMIT 1"
341,,What was the final result of the War of the Roses?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,"SELECT ?result WHERE {
  ?war dbo:wikiPageWikiLink dbr:Wars_of_the_Roses.
  ?war dbo:result ?result.
}"
342,,How much did Pulp Fiction cost?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Pulp_Fiction dbo:budget ?n },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?budget 
WHERE {
    <http://dbpedia.org/resource/Pulp_Fiction> dbpedia-owl:budget ?budget. 
}"
343,,Is proinsulin a protein?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Proinsulin rdf:type dbo:Protein },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?proinsulinLabel ?typeLabel
WHERE {
  ?proinsulin rdfs:label ""proinsulin""@en.
  ?proinsulin rdf:type ?type.
  ?type rdfs:label ?typeLabel.
  FILTER(LANG(?typeLabel) = 'en')
}
LIMIT 1"
344,,Do Urdu and Persian have a common root?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?urdu ?persian WHERE {
  dbr:Urdu dbo:derivedFrom ?commonRoot.
  dbr:Persian dbo:derivedFrom ?commonRoot.
}"
345,,Who is starring in Spanish movies produced by Benicio del Toro?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
    ?movie rdf:type dbpedia-owl:Film ;
           dbpedia-owl:starring ?actor ;
           dbpedia-owl:producer dbpedia:Benicio_del_Toro ;
           dbpedia-owl:language dbpedia:Spanish .
}
"
346,,Is Lake Baikal bigger than the Great Bear Lake?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT DISTINCT ?baikal ?greatBear
WHERE {
  ?baikal a dbo:Lake ;
          dbo:areaTotal ?baikalArea ;
          rdfs:label ""Lake Baikal""@en .
  ?greatBear a dbo:Lake ;
             dbo:areaTotal ?greatBearArea ;
             rdfs:label ""Great Bear Lake""@en .
  FILTER(?baikalArea > ?greatBearArea)
}
LIMIT 1"
347,,Show me all books in Asimov's Foundation series.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book
WHERE {
  ?book dbo:author dbr:Isaac_Asimov ;
        dbp:series ""Foundation_(series)""@en .
}"
348,,Where was Bach born?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Johann_Sebastian_Bach dbo:birthPlace ?uri },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace.
  ?person rdfs:label ""Johann Sebastian Bach""@en.
}"
349,,Which city has the oldest running metro?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX prop: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
    ?metroStation a dbpedia-owl:MetroStation .
    ?metroStation prop:opened ?date .
    ?city dbpedia-owl:location ?metroStation .
    ?city a dbpedia-owl:City .
}
ORDER BY ?date
LIMIT 1"
350,,Who designed the Brooklyn Bridge?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?designer WHERE {
  ?brooklynBridge dbo:architect ?designer.
  FILTER(LANG(?designer) = """" || LANGMATCHES(LANG(?designer), ""en""))
  FILTER(CONTAINS(STR(?designer), ""Brooklyn Bridge""))
}"
351,,How many people live in Eurasia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country dbo:region dbr:Eurasia .
  ?country dbo:populationTotal ?population .
}"
352,,Who is the host of the BBC Wildlife Specials?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?host WHERE {
  ?show dbo:network ?network .
  ?show rdfs:label ""BBC Wildlife Specials""@en .
  ?show dbp:host ?host .
}
LIMIT 10"
353,,"What is the total population of Melbourne, Florida?","PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }","SELECT ?population
WHERE {
  ?melbourne dbpedia-owl:populationTotal ?population.
  ?melbourne rdfs:label ""Melbourne, Florida""@en.
}"
354,,What country is Mount Everest in?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country.
}
"
355,,To which artistic movement did the painter of The Three Dancers belong?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>
SELECT DISTINCT ?movement
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpprop:artist ?painter .
  ?painter dbpedia-owl:birthDate ?birthDate .
  ?painter dbpedia-owl:movement ?movement .
}
LIMIT 1"
356,,When did Operation Overlord commence?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Operation_Overlord dbo:date ?d },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbpedia-owl:commencementDate ?date.
}
LIMIT 1"
357,,What is the bridge with the longest span?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1,"PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bridge ?name ?span
WHERE { 
  ?bridge a dbo:Bridge ;
          dbp:name ?name ;
          dbo:longestSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1"
358,,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label ""Battle Chess""@en }","PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?gameName
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ?gameName .
  FILTER (LANG(?gameName) = 'en')
  FILTER(CONTAINS(LCASE(?gameName), 'battle chess'))
}
LIMIT 1"
359,,Who was buried in the Great Pyramid of Giza?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza },"SELECT ?person
WHERE {
   <http://dbpedia.org/resource/Great_Pyramid_of_Giza> <http://dbpedia.org/ontology/tomb> ?person
   FILTER(?person != <http://dbpedia.org/resource/Great_Pyramid_of_Giza>)
}
LIMIT 10"
360,,Does the Ford Motor Company have a manufacturing plant in Malaysia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?companyLabel ?plantLabel WHERE {
  ?company rdf:type dbo:Company ;
           foaf:name ?companyLabel ;
           dbo:manufacturer ?plant .
  ?plant dbo:location ?malaysia ;
         foaf:name ?plantLabel .
  FILTER(CONTAINS(UCASE(?companyLabel), ""FORD MOTOR COMPANY"")) .
  FILTER(CONTAINS(UCASE(?plantLabel), ""MALAYSIA"")) .
}"
361,,Did Socrates influence Aristotle?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aristotle dbo:influencedBy res:Socrates },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?socrates ?aristotle
WHERE {
  ?socrates dbo:influenced ?aristotle.
  FILTER(?socrates = dbr:Socrates && ?aristotle = dbr:Aristotle)
}"
362,,How many children did Benjamin Franklin have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri },"PREFIX dbp: <http://dbpedia.org/property/>
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbp:children ?child .
}"
363,,How tall is Michael Jordan?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num },"SELECT ?height WHERE {
  <http://dbpedia.org/resource/Michael_Jordan> <http://dbpedia.org/ontology/height> ?height
}"
364,,In which UK city are the headquarters of the MI6?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom },"SELECT ?city WHERE {
  ?headquarters dbpedia-owl:locationCity ?city .
  ?headquarters dbpedia-owl:locationCountry <http://dbpedia.org/resource/United_Kingdom> .
  ?headquarters dbpedia-owl:agency <http://dbpedia.org/resource/MI6> .
}"
365,,Who created Family Guy?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?creator
WHERE {
  ?show dbo:wikiPageID ?id .
  ?show dbo:creator ?creator .
  FILTER (regex(str(?show), ""Family_Guy"", ""i""))
}
LIMIT 10"
366,,In which city does the Chile Route 68 end?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  ?chileRoute dbo:routeEnd ?city .
  ?chileRoute dbp:name ""Chile Route 68""@en .
}
LIMIT 1"
367,,Give me the grandchildren of Elvis Presley.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elvis_Presley dbo:child ?child . ?child dbo:child ?uri },"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child .
  ?child dbpedia-owl:child ?grandchild .
}"
368,,When did the Ming dynasty dissolve?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Ming_dynasty dbo:dissolutionDate ?date },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?date
WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?date.
}"
369,,In which military conflicts did Lawrence of Arabia participate?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryConflict
WHERE {
  FILTER CONTAINS(?personName, ""Lawrence of Arabia"")
  
  ?person dbo:abstract ?abstract .
  ?person dbp:allegiance ?allegiance .
  ?allegiance dbp:militaryConflict ?militaryConflict .
  
  FILTER (LANG(?abstract) = ""en"")
}"
370,,What is the timezone in San Pedro de Atacama?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timezone
WHERE {
    <http://dbpedia.org/resource/San_Pedro_de_Atacama> dbo:region ?region ;
                                                   dbo:timezone ?time .
    ?time dbp:name ?timezone .
}
LIMIT 1"
371,,Give me all books by William Goldman with more than 300 pages.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?book
WHERE {
  ?book a dbo:Book;
        dct:subject dbc:Novels_by_William_Goldman;
        dbo:numberOfPages ?pages.
  FILTER (?pages > 300)
}
ORDER BY ?book"
372,,What did Bruce Carver die from?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Carver dbo:deathCause ?uri },"SELECT ?causeOfDeath 
WHERE {
  dbr:Bruce_Carver dbo:causeOfDeath ?causeOfDeath.
}
LIMIT 1"
373,,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport },"SELECT ?subsidiary
WHERE {
  ?subsidiary dct:subject dbc:Subsidiaries_of_Lufthansa ;
           dbo:location/dct:subject dbc:Airports_in_Germany ;
           dbo:location/dct:subject dbc:Transport_in_Berlin ;
           dbo:location/dct:subject dbc:Transport_in_Dortmund .
}
"
374,,Does Abraham Lincoln's death place have a website?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?website 
WHERE {
  <http://dbpedia.org/resource/Abraham_Lincoln> dbo:deathPlace ?place .
  ?place foaf:isPrimaryTopicOf ?website .
}"
375,,Did Elvis Presley have children?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Elvis_Presley dbo:child ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
}
LIMIT 1"
376,,Is Michelle Obama the wife of Barack Obama?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isWifeOf
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse dbpedia:Barack_Obama .
  ?isWifeOf dbpedia-owl:spouse dbpedia:Barack_Obama .
  FILTER(?isWifeOf = dbpedia:Michelle_Obama)
}"
377,,In which city does Sylvester Stallone live?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  ?person foaf:name ""Sylvester Stallone""@en .
  ?person dbo:birthPlace ?city.
}"
378,,Which books by Kerouac were published by Viking Press?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bookName 
WHERE {
  ?book dbo:author <http://dbpedia.org/resource/Jack_Kerouac> .
  ?book dbp:publisher <http://dbpedia.org/resource/Viking_Press> .
  ?book dbo:name ?bookName .
}
"
379,,Who wrote the song Hotel California?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri },"SELECT ?artist WHERE {
  ?song rdf:type dbo:Song ;
        dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
}"
380,,What is the capital of Canada?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Canada dbo:capital ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
    dbr:Canada dbo:capital ?capital.
}"
381,,Who is the mayor of Tel Aviv?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tel_Aviv dbo:leaderName ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name
WHERE {
  ?city dbo:mayor ?mayor.
  ?city foaf:name ""Tel Aviv""@en.
  ?mayor foaf:name ?name.
}
"
382,,What form of government does Russia have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Russia dbo:governmentType ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?governmentLabel
WHERE {
  <http://dbpedia.org/resource/Russia> dbo:government ?government.
  ?government rdfs:label ?governmentLabel.
  FILTER (langMatches(lang(?governmentLabel), ""en""))
}"
383,,Show me the book that Muhammad Ali wrote.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book
WHERE {
  ?person dbo:wikiPageID <http://dbpedia.org/resource/Muhammad_Ali_(actor)> .
  ?book dbp:author ?person .
}
LIMIT 1"
384,,Who was the first to climb Mount Everest?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri },"SELECT ?person ?label
WHERE {
  ?person rdf:type dbo:Mountaineer .
  ?person dbo:knownFor dbr:Mount_Everest .
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = """" || LANG(?label) = ""en"")
}
ORDER BY ?person
LIMIT 1"
385,,How many languages are spoken in Colombia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri },"SELECT (COUNT(?language) as ?count)
WHERE {
  ?colombia dbc:Languages_of_Colombia ?language .
}"
386,,What is the currency of the Czech Republic?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri },"SELECT ?currencyLabel
WHERE { 
  dbpedia:Czech_Republic dbpedia-owl:currency ?currency.
  ?currency rdfs:label ?currencyLabel.
  FILTER (lang(?currencyLabel) = ""en"")
}"
387,,Where in France is sparkling wine produced?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France },"SELECT ?regionLabel
WHERE {
  ?wine rdf:type dbo:SparklingWine .
  ?wine dbo:country dbr:France .
  ?wine dbo:region ?region .
  ?region rdfs:label ?regionLabel .
  FILTER(LANG(?regionLabel) = 'en')
}
"
388,,When did Boris Becker end his active career?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d },"SELECT ?date WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?date .
}"
389,,Which movies starring Mickey Rourke were directed by Guy Ritchie?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Mickey_Rourke ;
         dbo:director dbr:Guy_Ritchie .
}"
390,,In which films did Julia Roberts as well as Richard Gere play?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere },"SELECT DISTINCT ?film
WHERE {
  ?film dbpedia-owl:starring dbpedia:Julia_Roberts, dbpedia:Richard_Gere .
}
"
391,,Show me Hemingway's autobiography.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:author res:Ernest_Hemingway ; dbo:literaryGenre res:Autobiography },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
  ?author a dbo:Writer ;
          dbo:notableWork ?work .
  ?author dbo:birthName ""Ernest Hemingway""@en ;
          dbo:wikiPageID ?authorID ;
          dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?author .
  ?work dbo:type dbo:Autobiography ;
        dbp:title ?title .
  FILTER (CONTAINS(?title, ""Hemingway""))
}
LIMIT 1"
392,,How tall is Amazon Eve?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?height
WHERE {
  ?person dbo:height ?height.
  ?person dbo:wikiPageID 37338457.
  FILTER (LANG(?person) = """" || LANGMATCHES(LANG(?person), ""en""))
}"
393,,What are the five boroughs of New York?,PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governmentType <http://dbpedia.org/resource/Borough_(New_York_City)> },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?boroughLabel 
WHERE {
    ?borough rdf:type dbo:Borough ;
             rdfs:label ?boroughLabel ;
             dbo:region <http://dbpedia.org/resource/New_York_City> .
    FILTER(langMatches(lang(?boroughLabel), ""en""))
}
LIMIT 5"
394,,Give me all Canadian Grunge record labels.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?recordLabel
WHERE {
  ?recordLabel rdf:type dbo:RecordLabel ;
               dbo:country dbr:Canada ;
               dct:subject dbc:Grunge_record_labels .
}
ORDER BY ?recordLabel"
395,,In which country does the Ganges start?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
   ?ganges dbo:country ?country ;
           dbp:sourceCountry ""India"" .
   FILTER (CONTAINS(LCASE(?ganges), ""ganges""))
}"
396,,Who is the founder of Penguin Books?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Penguin_Books dbo:founder ?uri },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?founder WHERE {
  ?founder dbpedia-owl:foaf:name ""Penguin Books""@en ;
           dbpedia-owl:foaf:isPrimaryTopicOf ?url .
}"
397,,Who wrote the Game of Thrones theme?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?composer
WHERE {
  ?composer rdf:type dbo:Person ;
            foaf:name ?name .
  FILTER contains(lcase(str(?name)), ""game of thrones"") .
  ?composition dbo:musicBrainzId ?mbid ;
               foaf:name ?title ;
               dbo:composer ?composer .
  FILTER contains(lcase(str(?title)), ""game of thrones"") .
}
LIMIT 1"
398,,Who is the president of Eritrea?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Eritrea dbo:leader ?uri ; dbo:leaderTitle ""President""@en }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?president
WHERE {
   ?eritrea dbo:leader ?president .
   ?president foaf:occupation ?occupation .
   FILTER regex(?occupation, ""president"", ""i"")
   FILTER regex(?eritrea, ""Eritrea"", ""i"")
}"
399,,In which city did John F. Kennedy die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City },"SELECT ?cityName
WHERE {
    <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?city.
    ?city <http://xmlns.com/foaf/0.1/name> ?cityName.
}"
400,,What is the highest mountain in Australia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mountainLabel
WHERE {
  ?mountain dbo:location dbr:Australia ;
           dbo:elevation ?elevation ;
           rdf:type dbo:Mountain ;
           rdfs:label ?mountainLabel .
}
ORDER BY DESC(?elevation)
LIMIT 1"
401,,Who writes the Farmers' Almanac?,PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Farmers'_Almanac> dbp:editor ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
    
SELECT ?author WHERE {
  ?farmersAlmanac dbo:author ?author.
  FILTER(REGEX(?farmersAlmanac, ""Farmers'_Almanac""))
}
LIMIT 1"
402,,Give me the currency of China.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:China dbo:currency ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?currency
WHERE {
  dbo:China dbo:currency ?currency .
}"
403,,Give me all Swedish oceanographers.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:field res:Oceanography ; dbo:birthPlace res:Sweden },"SELECT ?oceanographer
WHERE {
  ?oceanographer rdf:type dbpedia-owl:Person .
  ?oceanographer dbpedia-owl:nationality dbpedia:Sweeden .
  ?oceanographer dbpedia-owl:occupation dbpedia:Oceanographer .
}
LIMIT 100"
404,,In which city are the headquarters of the United Nations?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  <http://dbpedia.org/resource/United_Nations> dbo:headquarter ?hq .
  ?hq dbo:location ?location .
  ?location foaf:name ?city .
}"
405,,Is Rita Wilson the wife of Tom Hanks?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

ASK {
  ?rita foaf:spouse ?tom .
  ?rita rdf:type dbo:Person .
  ?rita foaf:name ""Rita Wilson"" .
  ?tom rdf:type dbo:Person .
  ?tom foaf:name ""Tom Hanks"" .
}"
406,,In which countries do people speak Japanese?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language },"SELECT ?country
WHERE {
  ?country dbo:officialLanguage dbr:Japanese .
  FILTER(?country != dbr:Japan)
}"
407,,Which of Tim Burton's films had the highest budget?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?film ?title ?budget WHERE {
  ?film dbpedia-owl:director dbpedia:Tim_Burton ;
        dbpedia-owl:budget ?budget ;
        dbpedia-owl:title ?title .
}
ORDER BY DESC(?budget)
LIMIT 1"
408,,Which museum in New York has the most visitors?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1,"SELECT ?museum ?visitorCount
WHERE {
  ?museum rdf:type dbo:Museum ;
        dbo:location dbr:New_York_City ;
        dbo:visitorCount ?visitorCount .
}
ORDER BY DESC(?visitorCount)
LIMIT 1"
409,,What was the first Queen album?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?albumLabel
WHERE {
  ?album dbo:artist dbr:Queen ;
         rdf:type dbo:Album ;
         foaf:name ?albumLabel .
}
ORDER BY ASC(?albumLabel)
LIMIT 1"
410,,What was the first name of the band Queens of the Stone Age?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name
WHERE {
    ?band a dbo:Band ;
          dbp:name ""Queens of the Stone Age"" ;
          foaf:name ?name .
}"
411,,What was the last movie with Alec Guinness?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbprop: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbpedia:Alec_Guinness .
  ?movie dbprop:released ?date .
}
ORDER BY DESC(?date)
LIMIT 1"
412,,Give me all actors starring in Last Action Hero.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  dbpedia:Last_Action_Hero dbpedia-owl:starring ?actor.
  ?actor rdf:type dbpedia-owl:Actor.
}
LIMIT 1000"
413,,Who discovered Pluto?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Pluto dbo:discoverer ?uri },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?discoveredBy 
WHERE {
  dbr:Pluto dbo:discoverer ?discoveredBy.
}"
